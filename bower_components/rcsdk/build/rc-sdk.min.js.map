{"version":3,"sources":["webpack/universalModuleDefinition","rc-sdk.js","webpack/bootstrap 28ec8665cf7b4091a010","../lib/browser.js","external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}","external {\"amd\":\"crypto-js\",\"commonjs\":\"crypto-js\",\"commonjs2\":\"crypto-js\",\"root\":\"CryptoJS\"}","external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}","../lib/RCSDK.js","../lib/core/Context.js","../lib/core/http/Request.js","../lib/core/http/Response.js","../lib/core/AjaxObserver.js","../lib/core/xhr/XhrResponse.js","../lib/core/Platform.js","../lib/core/Cache.js","../lib/core/Subscription.js","../lib/core/PageVisibility.js","../lib/core/Helper.js","../lib/core/Observable.js","../lib/core/Validator.js","../lib/core/Log.js","../lib/core/Utils.js","../lib/core/List.js","../lib/helpers/Country.js","../lib/helpers/DeviceModel.js","../lib/helpers/Language.js","../lib/helpers/Location.js","../lib/helpers/ShippingMethod.js","../lib/helpers/State.js","../lib/helpers/Timezone.js","../lib/helpers/Account.js","../lib/helpers/BlockedNumber.js","../lib/helpers/Call.js","../lib/helpers/Conferencing.js","../lib/helpers/Contact.js","../lib/helpers/ContactGroup.js","../lib/helpers/Device.js","../lib/helpers/Extension.js","../lib/helpers/ForwardingNumber.js","../lib/helpers/Message.js","../lib/helpers/PhoneNumber.js","../lib/helpers/Presence.js","../lib/helpers/Ringout.js","../lib/helpers/Service.js","../lib/core/pubnub/PubnubMock.js","../lib/core/xhr/XhrMock.js","../lib/core/http/Headers.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","promise","CryptoJS","localStorage","window","Promise","PUBNUB","XHR","XMLHttpRequest","undefined","injections","RCSDK","options","_context","$get","getCache","setPrefix","cachePrefix","getPlatform","setServer","server","setCredentials","appKey","appSecret","version","prototype","getContext","getRequest","getResponse","status","statusText","body","headers","getAjaxObserver","getXhrResponse","getSubscription","getPageVisibility","getHelper","getObservable","getValidator","getLog","getUtils","getList","getCountryHelper","getDeviceModelHelper","getLanguageHelper","getLocationHelper","getShippingMethodHelper","getStateHelper","getTimezoneHelper","getAccountHelper","getBlockedNumberHelper","getCallHelper","getConferencingHelper","getContactHelper","getContactGroupHelper","getDeviceHelper","getExtensionHelper","getForwardingNumberHelper","getMessageHelper","getPhoneNumberHelper","getPresenceHelper","getRingoutHelper","getServiceHelper","Error","ActiveXObject","e1","e2","e3","Context","singletons","stubPubnub","stubAjax","createSingleton","name","usePubnubStub","flag","useAjaxStub","getCryptoJS","getPubnub","getLocalStorage","bind","getPromise","getXHR","Class","Request","context","Headers","async","method","url","query","xhr","observer","Response","Utils","Object","create","defineProperty","value","enumerable","isLoaded","setOptions","post","get","setHeaders","checkOptions","hasHeader","setHeader","jsonContentType","toUpperCase","indexOf","getEncodedBody","isJson","JSON","stringify","isUrlEncoded","queryStringify","send","emit","events","beforeRequest","responsePromise","resolve","reject","open","withCredentials","onload","response","responseText","getAllResponseHeaders","error","e","ajax","request","onerror","forEach","header","setRequestHeader","then","requestSuccess","requestError","destroy","abort","replace","tmp","split","bodySeparator","length","shift","join","data","json","responses","parts","headerSeparator","trim","contentType","parse","checkStatus","getError","isMultipart","boundary","getContentType","match","boundarySeparator","pop","statusInfo","map","part","i","Log","stack","isUnauthorized","message","error_description","description","AjaxObserver","Observable","XhrResponse","add","push","clear","find","currentResponse","path","test","Platform","apiKey","account","urlPrefix","apiVersion","accountPrefix","accessTokenTtl","refreshTokenTtl","refreshTokenTtlRemember","refreshHandicapMs","refreshDelayMs","clearCacheOnRefreshError","refreshPromise","forcedTokenType","cacheId","pollInterval","releaseTimeout","accessViolation","logoutSuccess","logoutError","authorizeSuccess","authorizeError","refreshSuccess","refreshError","getStorage","clearStorage","clean","btoa","Buffer","toString","remember","key","setItem","getItem","authorize","authCall","grant_type","username","extension","password","access_token_ttl","refresh_token_ttl","setCache","emitAndCallback","isPaused","storage","Date","now","parseInt","pause","resume","removeItem","refresh","refreshPolling","setTimeout","authData","getAuthData","debug","access_token","refresh_token","refreshExpireTime","info","result","logout","token","getToken","warn","poll","next","isTokenValid","getTokenType","token_type","expires_in","refresh_token_expires_in","expireTime","getTime","isAuthorized","cancelAccessToken","extend","oldAuthData","forceAuthentication","apiCall","apiUrl","addServer","put","builtUrl","addMethod","addToken","Cache","prefix","prefixKey","item","hasOwnProperty","Subscription","eventFilters","timeout","subscription","expirationTime","expiresIn","deliveryMode","transportType","encryption","address","subscriberKey","secretKey","creationTime","uri","pubnub","renewHandicapMs","notification","removeSuccess","removeError","renewSuccess","renewError","subscribeSuccess","subscribeError","getCrypto","register","isSubscribed","renew","subscribe","addEvents","concat","setEvents","getFullEventFilters","event","clearTimeout","updateSubscription","subscribeAtPubnub","unsubscribe","remove","timeToExpiration","channel","notify","encryptionKey","enc","Base64","decrypted","AES","decrypt","ciphertext","mode","ECB","padding","pad","Pkcs7","Utf8","init","ssl","subscribe_key","ready","connect","PageVisibility","hidden","onchange","evt","v","h","evtMap","focus","focusin","pageshow","blur","focusout","pagehide","visible","type","document","change","addEventListener","onfocusin","onfocusout","onpageshow","onpagehide","onfocus","onblur","isVisible","Helper","defaultProperty","createUrl","getId","object","isNew","getUri","resetAsNew","parseMultipartResponse","filter","loadRequest","saveRequest","deleteRequest","syncRequest","sync","syncToken","syncType","nextPageExists","navigation","index","array","getIdFn","gather","reduce","merge","target","supplement","mergeItems","supplementIndex","updatedIDs","newItem","writable","hasListeners","listeners","registerOneTimeEvent","oneTimeEvents","oneTimeArguments","on","callback","self","isOneTimeEventFired","apply","getOneTimeEventArgumens","args","argumentsToArray","arguments","splice","isOneTimeEvent","setOneTimeEventFired","setOneTimeEventArgumens","some","off","cb","offAll","Validator","validate","validators","errors","isValid","validator","res","field","email","multiple","isEmail","phone","isPhoneNumber","required","max","min","logDebug","logInfo","logWarnings","logErrors","addTimestamps","console","log","disableAll","enableAll","parseArguments","unshift","toLocaleString","hasOwn","rdigit","class2type","toLowerCase","src","copy","copyIsArray","clone","deep","isFunction","isPlainObject","isArray","parameters","vv","encodeURIComponent","parseQueryString","queryString","argsParsed","arg","decodeURIComponent","pair","Array","slice","isDate","obj","isWindow","isNaN","String","nodeType","constructor","getProperty","property","fn","interval","stopPolling","delay","parseString","s","parseNumber","n","parseFloat","List","propertyExtractor","stringComparator","a","b","localeCompare","numberComparator","comparator","item1","item2","compareFn","extractFn","sortBy","equalsFilter","condition","containsFilter","regexpFilter","RegExp","filterConfigs","pass","opt","filterFn","filterBy","CountryHelper","DeviceModelHelper","device","addons","count","cleanForSaving","deviceClass","addon","devices","LanguageHelper","languages","LocationHelper","state","uniqueNPAs","stateId","onlyUniqueNPA","opts","npa","nxx","ShippingMethodHelper","shippingMethods","StateHelper","countryHelper","countryId","country","TimezoneHelper","AccountHelper","BlockedNumberHelper","extensionId","phoneNumber","CallHelper","presence","contact","personal","active","getSessionId","sessionId","isInProgress","isAlive","availability","isInbound","direction","isOutbound","isMissed","isFindMe","action","getCallerInfo","from","to","getAllCallerInfos","formatDuration","addZero","duration","hours","Math","floor","mins","secs","alive","attachContacts","contacts","calls","callerInfos","attachToCallerInfos","checkMergeability","outboundRingOutCall","inboundCall","dateString","strict","startTime","abs","maxStartTimeDiscrepancy","combineCalls","hasSubsequent","subsequent","processCalls","processedCalls","callsToMerge","merged","secondCall","parsePresenceCalls","activeCalls","activeCall","isCallInProgress","telephonyStatus","getSignature","cleanup","mergePresenceCalls","presenceCalls","currentDate","toISOString","mergeAll","presenceAndCalls","ConferencingHelper","ContactHelper","groupId","getFieldValues","where","fields","asHash","getFullName","nameFields","getEmails","emailFields","getPhones","phoneFields","getFaxes","faxFields","getAddresses","addressFields","string","matchWith","found","transformed","transformFn","otherFields","inAddresses","toLocaleLowerCase","addressSubFields","subField","matchAsPhone","callerInfoIndex","callerInfo","indexedCallerInfos","foundContact","foundPhone","contactPhone","startsWith","phonesOnly","faxesOnly","firstName","lastName","email2","email3","ContactGroupHelper","groupName","DeviceHelper","deviceModel","order","emergencyServiceAddress","street","city","zip","customerName","model","ExtensionHelper","department","user","announcement","voicemail","departmentId","isUser","isDepartment","isAnnouncement","isVoicemail","search","extensionNumber","ForwardingNumberHelper","forwardingNumber","hasFeature","feature","features","MessageHelper","platform","fax","sms","pager","isSMS","isPager","isVoiceMail","isFax","isRead","readStatus","setIsRead","getAttachmentUrl","attachments","getAttachmentContentType","getCallerInfos","conversationId","messages","shorten","text","subject","validateSMS","validatePager","PhoneNumberHelper","lookup","reserve","date","reservedTill","unreserve","usageType","paymentType","PresenceHelper","detailed","isAvailable","presenceStatus","presences","attachToExtensions","extensions","presenceCall","RingoutHelper","ringout","callStatus","isSuccess","isError","ServiceHelper","isServiceFeatureEnabledMethod","serviceFeatures","isEnabled","f","featureName","enabled","isSmsEnabled","isSmsReceivingEnabled","isPresenceEnabled","isRingOutEnabled","isInternationalCallingEnabled","isDndEnabled","isFaxEnabled","isFaxReceivingEnabled","isVoicemailEnabled","isPagerEnabled","isPagerReceivingEnabled","isVoipCallingEnabled","isVideoConferencingEnabled","isSalesForceEnabled","isIntercomEnabled","isPagingEnabled","isConferencingEnabled","isFreeSoftPhoneLinesEnabled","isHipaaComplianceEnabled","isCallParkEnabled","isOnDemandCallRecordingEnabled","PubnubMock","onMessage","receiveMessage","msg","XhrMock","requestHeaders","readyState","responseHeaders","getResponseHeader","getRequestHeader","setStatus","setResponseHeader","onLoad","multipartContentType","urlencodedContentType","getHeader","isContentType"],"mappings":"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","file":"rc-sdk.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"es6-promise\"), require(\"crypto-js\"), require(\"pubnub\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"es6-promise\", \"crypto-js\", \"pubnub\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"es6-promise\"), require(\"crypto-js\"), require(\"pubnub\"));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"Promise\"], root[\"CryptoJS\"], root[\"PUBNUB\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"es6-promise\"), require(\"crypto-js\"), require(\"pubnub\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"es6-promise\", \"crypto-js\", \"pubnub\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"es6-promise\"), require(\"crypto-js\"), require(\"pubnub\"));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"Promise\"], root[\"CryptoJS\"], root[\"PUBNUB\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Browser-compatible version\n */\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var promise = __webpack_require__(2);\n\n    module.exports = __webpack_require__(5)({\n        CryptoJS: __webpack_require__(3),\n        localStorage: window.localStorage,\n        Promise: (promise && 'Promise' in promise) ? promise.Promise : window.Promise,\n        PUBNUB: __webpack_require__(4),\n        XHR: window.XMLHttpRequest\n    });\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * @param {IInjections} injections\n     * @returns {RCSDK}\n     */\n    module.exports = function(injections) {\n\n        /**\n         * @name RCSDK\n         * @param {IOptions} [options]\n         * @constructor\n         */\n        function RCSDK(options) {\n\n            options = options || {};\n\n            /** @private */\n            this._context = __webpack_require__(6).$get(injections);\n\n            this.getCache()\n                .setPrefix(options.cachePrefix || '');\n\n            this.getPlatform()\n                .setServer(options.server)\n                .setCredentials(options.appKey, options.appSecret);\n\n            //TODO Link Platform events with Subscriptions and the rest\n\n        }\n\n        RCSDK.version = '1.2.1';\n\n        // Internals\n\n        /** @returns {Context} */\n        RCSDK.prototype.getContext = function() { return this._context; };\n\n        // Core\n\n        /**\n         * This is for internal use only\n         * @protected\n         * @returns {Request}\n         */\n        RCSDK.prototype.getRequest = function() { return __webpack_require__(7).$get(this.getContext()); };\n\n        /**\n         * This is for internal use only\n         * @protected\n         * @returns {Response}\n         */\n        RCSDK.prototype.getResponse = function(status, statusText, body, headers) {\n            return __webpack_require__(8).$get(this.getContext(), status, statusText, body, headers);\n        };\n\n        /**\n         * @returns {AjaxObserver}\n         */\n        RCSDK.prototype.getAjaxObserver = function() { return __webpack_require__(9).$get(this.getContext()); };\n\n        /**\n         * This is for internal use only\n         * @protected\n         * @returns {XhrResponse}\n         */\n        RCSDK.prototype.getXhrResponse = function() { return __webpack_require__(10).$get(this.getContext()); };\n\n        /**\n         * @returns {Platform}\n         */\n        RCSDK.prototype.getPlatform = function() { return __webpack_require__(11).$get(this.getContext()); };\n\n        /**\n         * @returns {Cache}\n         */\n        RCSDK.prototype.getCache = function() { return __webpack_require__(12).$get(this.getContext()); };\n\n        /**\n         * @returns {Subscription}\n         */\n        RCSDK.prototype.getSubscription = function() { return __webpack_require__(13).$get(this.getContext()); };\n\n        /**\n         * @returns {PageVisibility}\n         */\n        RCSDK.prototype.getPageVisibility = function() { return __webpack_require__(14).$get(this.getContext()); };\n\n        /**\n         * @returns {Helper}\n         */\n        RCSDK.prototype.getHelper = function() { return __webpack_require__(15).$get(this.getContext()); };\n\n        /**\n         * @returns {Observable}\n         */\n        RCSDK.prototype.getObservable = function() { return __webpack_require__(16).$get(this.getContext()); };\n\n        /**\n         * @returns {Validator}\n         */\n        RCSDK.prototype.getValidator = function() { return __webpack_require__(17).$get(this.getContext()); };\n\n        /**\n         * @returns {Log}\n         */\n        RCSDK.prototype.getLog = function() { return __webpack_require__(18).$get(this.getContext()); };\n\n        /**\n         * @returns {Utils}\n         */\n        RCSDK.prototype.getUtils = function() { return __webpack_require__(19).$get(this.getContext()); };\n\n        /**\n         * @returns {List}\n         */\n        RCSDK.prototype.getList = function() { return __webpack_require__(20).$get(this.getContext()); };\n\n        // Helpers\n\n        /**\n         * @returns {CountryHelper}\n         */\n        RCSDK.prototype.getCountryHelper = function() { return __webpack_require__(21).$get(this.getContext()); };\n\n        /**\n         * @returns {DeviceModelHelper}\n         */\n        RCSDK.prototype.getDeviceModelHelper = function() { return __webpack_require__(22).$get(this.getContext()); };\n\n        /**\n         * @returns {LanguageHelper}\n         */\n        RCSDK.prototype.getLanguageHelper = function() { return __webpack_require__(23).$get(this.getContext()); };\n\n        /**\n         * @returns {LocationHelper}\n         */\n        RCSDK.prototype.getLocationHelper = function() { return __webpack_require__(24).$get(this.getContext()); };\n\n        /**\n         * @returns {ShippingMethodHelper}\n         */\n        RCSDK.prototype.getShippingMethodHelper = function() { return __webpack_require__(25).$get(this.getContext()); };\n\n        /**\n         * @returns {StateHelper}\n         */\n        RCSDK.prototype.getStateHelper = function() { return __webpack_require__(26).$get(this.getContext()); };\n\n        /**\n         * @returns {TimezoneHelper}\n         */\n        RCSDK.prototype.getTimezoneHelper = function() { return __webpack_require__(27).$get(this.getContext()); };\n\n        /**\n         * @returns {AccountHelper}\n         */\n        RCSDK.prototype.getAccountHelper = function() { return __webpack_require__(28).$get(this.getContext()); };\n\n        /**\n         * @returns {BlockedNumberHelper}\n         */\n        RCSDK.prototype.getBlockedNumberHelper = function() { return __webpack_require__(29).$get(this.getContext()); };\n\n        /**\n         * @returns {CallHelper}\n         */\n        RCSDK.prototype.getCallHelper = function() { return __webpack_require__(30).$get(this.getContext()); };\n\n        /**\n         * @returns {ConferencingHelper}\n         */\n        RCSDK.prototype.getConferencingHelper = function() { return __webpack_require__(31).$get(this.getContext()); };\n\n        /**\n         * @returns {ContactHelper}\n         */\n        RCSDK.prototype.getContactHelper = function() { return __webpack_require__(32).$get(this.getContext()); };\n\n        /**\n         * @returns {ContactGroupHelper}\n         */\n        RCSDK.prototype.getContactGroupHelper = function() { return __webpack_require__(33).$get(this.getContext()); };\n\n        /**\n         * @returns {DeviceHelper}\n         */\n        RCSDK.prototype.getDeviceHelper = function() { return __webpack_require__(34).$get(this.getContext()); };\n\n        /**\n         * @returns {ExtensionHelper}\n         */\n        RCSDK.prototype.getExtensionHelper = function() { return __webpack_require__(35).$get(this.getContext()); };\n\n        /**\n         * @returns {ForwardingNumberHelper}\n         */\n        RCSDK.prototype.getForwardingNumberHelper = function() { return __webpack_require__(36).$get(this.getContext()); };\n\n        /**\n         * @returns {MessageHelper}\n         */\n        RCSDK.prototype.getMessageHelper = function() { return __webpack_require__(37).$get(this.getContext()); };\n\n        /**\n         * @returns {PhoneNumberHelper}\n         */\n        RCSDK.prototype.getPhoneNumberHelper = function() { return __webpack_require__(38).$get(this.getContext()); };\n\n        /**\n         * @returns {PresenceHelper}\n         */\n        RCSDK.prototype.getPresenceHelper = function() { return __webpack_require__(39).$get(this.getContext()); };\n\n        /**\n         * @returns {RingoutHelper}\n         */\n        RCSDK.prototype.getRingoutHelper = function() { return __webpack_require__(40).$get(this.getContext()); };\n\n        /**\n         * @returns {ServiceHelper}\n         */\n        RCSDK.prototype.getServiceHelper = function() { return __webpack_require__(41).$get(this.getContext()); };\n\n        if (!injections\n            || !('CryptoJS' in injections)\n            || !('localStorage' in injections)\n            || !('Promise' in injections)\n            || !('PUBNUB' in injections)\n            || !('XHR' in injections)) throw new Error('Injections object is not complete');\n\n        injections.XHR = (injections.XHR || function() {\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\"); } catch (e1) {}\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\"); } catch (e2) {}\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP\"); } catch (e3) {}\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        });\n\n        return RCSDK;\n\n    };\n\n    /**\n     * @typedef {Object} IInjections\n     * @property {PUBNUB} PUBNUB\n     * @property {CryptoJS} CryptoJS\n     * @property {Storage} localStorage\n     * @property {XMLHttpRequest} XHR\n     * @property {Promise} Promise\n     */\n\n    /**\n     * @typedef {Object} IOptions\n     * @property {string} server\n     * @property {string} appKey\n     * @property {string} appSecret\n     * @property {string} [cachePrefix]\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * @constructor\n     * @param {IInjections} injections\n     */\n    function Context(injections) {\n        /** @private */\n        this.singletons = {};\n        /** @type {IInjections} */\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n\n    /**\n     * @param {string} name\n     * @param {function} factory\n     * @returns {*}\n     */\n    Context.prototype.createSingleton = function(name, factory) {\n\n        if (!this.singletons[name]) this.singletons[name] = factory();\n        return this.singletons[name];\n\n    };\n\n    Context.prototype.usePubnubStub = function(flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n\n    Context.prototype.useAjaxStub = function(flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n\n    /**\n     * @returns {CryptoJS}\n     */\n    Context.prototype.getCryptoJS = function() {\n        return this.injections.CryptoJS;\n    };\n\n    /**\n     * @returns {PUBNUB}\n     */\n    Context.prototype.getPubnub = function() {\n        return this.stubPubnub ? __webpack_require__(42).$get(this) : this.injections.PUBNUB;\n    };\n\n    /**\n     * @returns {Storage}\n     * @abstract\n     */\n    Context.prototype.getLocalStorage = function() {\n        return this.createSingleton('localStorage', function() {\n            return (typeof this.injections.localStorage == 'function')\n                ? new this.injections.localStorage() // this is NPM dom-storage constructor\n                : this.injections.localStorage; // this is window.localStorage\n        }.bind(this));\n    };\n\n    /**\n     * @returns {function(new:Promise)}\n     */\n    Context.prototype.getPromise = function() {\n        return this.injections.Promise;\n    };\n\n    /**\n     * @returns {XMLHttpRequest}\n     */\n    Context.prototype.getXHR = function() {\n        return this.stubAjax ? __webpack_require__(43).$get(this) : new this.injections.XHR();\n    };\n\n    module.exports = {\n        Class: Context,\n        /**\n         * @param {IInjections} injections\n         */\n        $get: function(injections) {\n            return new Context(injections);\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Headers = __webpack_require__(44).Class,\n        Response = __webpack_require__(8),\n        Utils = __webpack_require__(19),\n        Log = __webpack_require__(18);\n\n    /**\n     * @typedef {Object} IAjaxOptions\n     * @property {string} url\n     * @property {string} method?\n     * @property {boolean} async?\n     * @property {Object} body?\n     * @property {Object} query?\n     * @property {Object} headers?\n     * @property {Object} post? // @deprecated\n     * @property {Object} get? // @deprecated\n     */\n\n    /**\n     * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Request\n     * @param {Context} [context]\n     */\n    function Request(context) {\n        Headers.call(this);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        /** @type {XMLHttpRequest} */\n        this.xhr = null;\n        /** @type {AjaxObserver} */\n        this.observer = __webpack_require__(9).$get(context);\n    }\n\n    Request.prototype = Object.create(Headers.prototype);\n    Object.defineProperty(Request.prototype, 'constructor', {value: Request, enumerable: false});\n\n    /**\n     * @returns {boolean}\n     */\n    Request.prototype.isLoaded = function() {\n        return !!this.xhr;\n    };\n\n    /**\n     * @param {IAjaxOptions} [options]\n     * @returns {Request}\n     */\n    Request.prototype.setOptions = function(options) {\n\n        options = options || {};\n\n        // backwards compatibility\n        if (!('body' in options) && options.post) options.body = options.post;\n        if (!('query' in options) && options.get) options.query = options.get;\n\n        if ('method' in options) this.method = options.method;\n        if ('url' in options) this.url = options.url;\n        if ('query' in options) this.query = options.query;\n        if ('body' in options) this.body = options.body;\n        if ('headers' in options) this.setHeaders(options.headers);\n        if ('async' in options) this.async = !!options.async;\n\n        return this;\n\n    };\n\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     * @returns {Request}\n     */\n    Request.prototype.checkOptions = function() {\n\n        if (!this.url) throw new Error('Url is not defined');\n\n        if (!this.hasHeader('Accept')) this.setHeader('Accept', Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type')) this.setHeader('Content-Type', Headers.jsonContentType);\n\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0) throw new Error('Method has wrong value');\n\n        return this;\n\n    };\n\n    Request.prototype.getEncodedBody = function() {\n\n        if (this.method === 'GET') return null;\n\n        if (typeof this.body === 'string') {\n            return this.body;\n        } else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        } else if (this.isUrlEncoded()) {\n            return Utils.queryStringify(this.body);\n        } else {\n            return this.body;\n        }\n\n    };\n\n    /**\n     * @returns {Promise}\n     */\n    Request.prototype.send = function() {\n\n        this.observer.emit(this.observer.events.beforeRequest, this);\n\n        var responsePromise = new (this.context.getPromise())(function(resolve, reject) {\n\n            this.checkOptions();\n\n            var xhr = this.getXHR(),\n                url = this.url + (!!this.query ? ((this.url.indexOf('?') > -1 ? '&' : '?') + Utils.queryStringify(this.query)) : '');\n\n            xhr.open(this.method, url, this.async);\n\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n\n            xhr.onload = function() {\n\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = Response\n                    .$get(this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = this;\n                    reject(e);\n                } else {\n                    resolve(response);\n                }\n\n            }.bind(this);\n\n            xhr.onerror = function(event) { // CORS or network issue\n                var e = new Error('The request cannot be sent');\n                e.request = this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            }.bind(this);\n\n            Utils.forEach(this.headers, function(value, header) {\n                if (!!value) xhr.setRequestHeader(header, value);\n            });\n\n            xhr.send(this.getEncodedBody());\n\n            this.xhr = xhr;\n\n        }.bind(this));\n\n        return responsePromise\n            .then(function(response) {\n\n                this.observer.emit(this.observer.events.requestSuccess, response, this);\n\n                return response;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.observer.emit(this.observer.events.requestError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @returns {XMLHttpRequest}\n     */\n    Request.prototype.getXHR = function() {\n        return this.context.getXHR();\n    };\n\n    Request.prototype.destroy = function() {\n        if (this.xhr) this.xhr.abort();\n    };\n\n    module.exports = {\n        Class: Request,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {Request}\n         */\n        $get: function(context) {\n            return new Request(context);\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Headers = __webpack_require__(44).Class,\n        Utils = __webpack_require__(19),\n        Log = __webpack_require__(18),\n        boundarySeparator = '--',\n        headerSeparator = ':',\n        bodySeparator = '\\n\\n';\n\n    /**\n     * @typedef {Object} IResponseOptions\n     * @property {string} url\n     * @property {string} method?\n     * @property {boolean} async?\n     * @property {Object} post?\n     * @property {Object} get?\n     * @property {Object} headers?\n     */\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Response\n     * @param {Context} [context]\n     * @param {number} [status]\n     * @param {string} [statusText]\n     * @param {string} [body]\n     * @param {object|string} [headers]\n     */\n    function Response(context, status, statusText, body, headers) {\n\n        Headers.call(this);\n\n        if (typeof(body) === 'string') {\n\n            body = body.replace(/\\r/g, '');\n\n            if (!headers) {\n\n                var tmp = body.split(bodySeparator);\n\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(bodySeparator);\n\n            }\n\n        }\n\n        /** @type {Response[]|object} */\n        this.data = null;\n\n        /** @type {object} */\n        this.json = null;\n\n        /** @type {Response[]} */\n        this.responses = [];\n\n        /** @type {Error} */\n        this.error = null;\n\n        if (status == 1223) status = 204; //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n\n        this.context = context;\n\n        try {\n\n            // Step 1. Parse headers\n\n            if (typeof(headers) === 'string') {\n\n                (headers || '')\n                    .split('\\n')\n                    .forEach(/** @param {string} header */ function(header) {\n\n                        if (!header) return;\n\n                        /** @type {string[]} */\n                        var parts = header.split(headerSeparator),\n                            name = parts.shift().trim();\n\n                        this.setHeader(name, parts.join(headerSeparator).trim());\n\n                    }, this);\n\n            } else {\n\n                this.setHeaders(headers);\n\n            }\n\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n\n            if (!this.hasHeader(Headers.contentType)) this.setHeader(Headers.contentType, Headers.jsonContentType);\n\n            // Step 2. Parse body\n\n            if (this.isJson() && !!this.body && typeof(this.body) === 'string') { // Handle 204 No Content -- response may be empty\n\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n\n                if (!this.checkStatus()) this.error = new Error(this.getError());\n\n            } else if (this.isMultipart()) { // Handle 207 Multi-Status\n\n                // Step 2.1. Split multipart response\n\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1],\n                    parts = this.body.split(boundarySeparator + boundary);\n\n                if (parts[0].trim() === '') parts.shift();\n                if (parts[parts.length - 1].trim() == boundarySeparator) parts.pop();\n\n                // Step 2.2. Parse status info\n\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n\n                // Step 2.3. Parse all other parts\n\n                this.responses = parts.map(function(part, i) {\n\n                    var status = statusInfo.data.response[i].status;\n\n                    return new Response(this.context, status, '', part);\n\n                }, this);\n\n                this.data = this.responses; // backwards compatibility\n\n            } else { //TODO Add more parsers\n\n                this.data = this.body;\n\n            }\n\n        } catch (e) { // Capture parse errors\n\n            Log.error('Response.parseResponse(): Unable to parse data');\n            Log.error(e.stack || e);\n            Log.error(this.body);\n\n            this.error = e;\n\n        }\n\n    }\n\n    Response.prototype = Object.create(Headers.prototype);\n    Object.defineProperty(Response.prototype, 'constructor', {value: Response, enumerable: false});\n\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function() {\n        return (this.status == 401);\n    };\n\n    Response.prototype.checkStatus = function() {\n        return this.status >= 200 && this.status < 300;\n    };\n\n    Response.prototype.getError = function() {\n        return this.data.message ||\n               this.data.error_description ||\n               this.data.description ||\n               'Unknown error';\n    };\n\n    module.exports = {\n        Class: Response,\n        /**\n         * @static\n         * @param {Context} [context]\n         * @param {number} [status]\n         * @param {string} [statusText]\n         * @param {string} [body]\n         * @param {object|string} [headers]\n         * @returns {Response}\n         */\n        $get: function(context, status, statusText, body, headers) {\n            return new Response(context, status, statusText, body, headers);\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = __webpack_require__(16).Class;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.AjaxObserver\n     */\n    function AjaxObserver() {\n\n        Observable.call(this);\n\n    }\n\n    AjaxObserver.prototype = Object.create(Observable.prototype);\n\n    AjaxObserver.prototype.events = {\n        beforeRequest: 'beforeRequest', // parameters: ajax\n        requestSuccess: 'requestSuccess', // means that response was successfully fetched from server\n        requestError: 'requestError' // means that request failed completely\n    };\n\n    module.exports = {\n        Class: AjaxObserver,\n        /**\n         * @param {Context} context\n         * @returns {AjaxObserver}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('AjaxObserver', function() {\n                return new AjaxObserver();\n            });\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * Ajax Response Manager\n     * @constructor\n     * @alias RCSDK.core.XhrResponse\n     */\n    function XhrResponse() {\n        /** @type {IXhrResponse[]} */\n        this.responses = [];\n    }\n\n    /**\n     * @param {IXhrResponse} response\n     */\n    XhrResponse.prototype.add = function(response) {\n        this.responses.push(response);\n    };\n\n    XhrResponse.prototype.clear = function() {\n        this.responses = [];\n    };\n\n    /**\n     * @param {XhrMock} ajax\n     * @returns {IXhrResponse}\n     */\n    XhrResponse.prototype.find = function(ajax) {\n\n        var currentResponse = null;\n\n        this.responses.forEach(function(response) {\n\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n\n        });\n\n        return currentResponse;\n\n    };\n\n    module.exports = {\n        Class: XhrResponse,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {XhrResponse}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('XhrResponse', function() {\n                return new XhrResponse(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IXhrResponse\n     * @property {string} path\n     * @property {function(Ajax)} response Response mock function\n     * @property {function(Ajax)} test? This will be executed to determine, whether this mock is applicable\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(19),\n        Observable = __webpack_require__(16).Class,\n        Log = __webpack_require__(18),\n        forcedTokenType = 'forced';\n\n    /**\n     * @typedef {Object} PlatformAuthInfo\n     * @property {string} token_type\n     * @property {string} access_token\n     * @property {string} expires_in\n     * @property {int} expireTime\n     * @property {string} refresh_token\n     * @property {string} refresh_token_expires_in\n     * @property {int} refreshExpireTime\n     * @property {string} scope\n     */\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Platform\n     * @param {Context} context\n     */\n    function Platform(context) {\n        Observable.call(this);\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        /** @type {Promise} */\n        this.refreshPromise = null;\n        this.context = context;\n    }\n\n    Platform.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Platform.prototype, 'constructor', {value: Platform, enumerable: false});\n\n    Platform.prototype.cacheId = 'platform';\n\n    Platform.prototype.pollInterval = 250;\n\n    Platform.prototype.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n\n    Platform.prototype.events = {\n        accessViolation: 'accessViolation',\n        logoutSuccess: 'logoutSuccess',\n        logoutError: 'logoutError',\n        authorizeSuccess: 'authorizeSuccess',\n        authorizeError: 'authorizeError',\n        refreshSuccess: 'refreshSuccess',\n        refreshError: 'refreshError'\n    };\n\n    /**\n     * @returns {Cache}\n     */\n    Platform.prototype.getStorage = function() {\n\n        return __webpack_require__(12).$get(this.context);\n\n    };\n\n    /**\n     * @returns {Request}\n     */\n    Platform.prototype.getRequest = function() {\n\n        return __webpack_require__(7).$get(this.context);\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.clearStorage = function() {\n\n        this.getStorage().clean();\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.setCredentials = function(appKey, appSecret) {\n\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n\n        if (apiKey == ':') return this;\n\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.setServer = function(server) {\n\n        this.server = server || '';\n\n        return this;\n\n    };\n\n    /**\n     * @param {boolean} [remember]\n     * @returns {Platform|boolean}\n     */\n    Platform.prototype.remember = function(remember) {\n\n        var key = this.cacheId + '-remember';\n\n        if (remember !== undefined) {\n\n            this.getStorage().setItem(key, remember);\n            return this;\n\n        }\n\n        return this.getStorage().getItem(key) || false;\n\n    };\n\n    /**\n     * @param {string} options.username\n     * @param {string} options.password\n     * @param {string} [options.extension]\n     * @param {boolean} [options.remember]\n     * @returns {Promise}\n     */\n    Platform.prototype.authorize = function(options) {\n\n        options = options || {};\n\n        options.remember = options.remember || false;\n\n        return this\n            .authCall({\n                url: '/restapi/oauth/token',\n                post: {\n                    \"grant_type\": \"password\",\n                    \"username\": options.username,\n                    \"extension\": options.extension || '',\n                    \"password\": options.password,\n                    \"access_token_ttl\": this.accessTokenTtl,\n                    \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n                }\n            })\n            .then(function(response) {\n\n                this.setCache(response.data)\n                    .remember(options.remember)\n                    .emitAndCallback(this.events.authorizeSuccess, []);\n\n                return response;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.clearStorage()\n                    .emitAndCallback(this.events.authorizeError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Platform.prototype.isPaused = function() {\n        var storage = this.getStorage(),\n            cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n\n    Platform.prototype.pause = function() {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function() {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n\n    /**\n     * Gets resolved into Ajax or null if refresh resolved from elsewhere\n     * @returns {Promise}\n     */\n    Platform.prototype.refresh = function() {\n\n        var refresh = new (this.context.getPromise())(function(resolve, reject) {\n\n            if (this.isPaused()) {\n                return resolve(this.refreshPolling(null));\n            } else {\n                this.pause();\n            }\n\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function() {\n\n                var authData = this.getAuthData();\n\n                Log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n\n                if (!authData || !authData.refresh_token) return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime) return reject(new Error('Refresh token has expired'));\n                if (!this.isPaused()) return reject(new Error('Queue was resumed before refresh call'));\n\n                resolve(this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": this.accessTokenTtl,\n                        \"refresh_token_ttl\": this.remember() ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n                    }\n                }));\n\n            }.bind(this), this.refreshDelayMs);\n\n        }.bind(this));\n\n        return refresh\n            .then(function(response) {\n\n                // This means refresh has happened elsewhere and we are here because of timeout\n                if (!response || !response.data) return response;\n\n                Log.info('Platform.refresh(): Token was refreshed');\n\n                if (!response.data.refresh_token || !response.data.access_token) {\n                    var e = new Error('Malformed OAuth response');\n                    e.ajax = response;\n                    throw e;\n                }\n\n                this.setCache(response.data)\n                    .resume();\n\n                return response;\n\n            }.bind(this))\n            .then(function(result) {\n\n                this.emit(this.events.refreshSuccess, result);\n                return result;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                if (this.clearCacheOnRefreshError) this.clearStorage();\n\n                this.emitAndCallback(this.events.accessViolation, [e])\n                    .emitAndCallback(this.events.refreshError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function() {\n\n        this.pause();\n\n        return this\n            .authCall({\n                url: '/restapi/oauth/revoke',\n                post: {\n                    token: this.getToken()\n                }\n            })\n            .then(function(response) {\n\n                this.resume()\n                    .clearStorage()\n                    .emit(this.events.logoutSuccess, response);\n\n                return response;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.resume()\n                    .emitAndCallback(this.events.accessViolation, [e])\n                    .emitAndCallback(this.events.logoutError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Platform.prototype.refreshPolling = function(result) {\n\n        if (this.refreshPromise) return this.refreshPromise;\n\n        this.refreshPromise = new (this.context.getPromise())(function(resolve, reject) {\n\n            Log.warn('Platform.refresh(): Refresh is already in progress polling started');\n\n            Utils.poll(function(next) {\n\n                if (this.isPaused()) return next();\n\n                this.refreshPromise = null;\n                this.resume();\n\n                if (this.isTokenValid()) {\n                    resolve(result);\n                } else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n\n            }.bind(this), this.pollInterval);\n\n        }.bind(this));\n\n        return this.refreshPromise;\n\n    };\n\n    Platform.prototype.getToken = function() {\n\n        return this.getAuthData().access_token;\n\n    };\n\n    Platform.prototype.getTokenType = function() {\n\n        return this.getAuthData().token_type;\n\n    };\n\n    /**\n     * @returns {PlatformAuthInfo}\n     */\n    Platform.prototype.getAuthData = function() {\n\n        return this.getStorage().getItem(this.cacheId) || {\n                token_type: '',\n                access_token: '',\n                expires_in: 0,\n                refresh_token: '',\n                refresh_token_expires_in: 0\n            };\n\n    };\n\n    /**\n     * Check if there is a valid (not expired) access token\n     * @returns {boolean}\n     */\n    Platform.prototype.isTokenValid = function() {\n\n        var authData = this.getAuthData();\n        return (authData.token_type == forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n\n    };\n\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     * @returns {Promise}\n     */\n    Platform.prototype.isAuthorized = function() {\n\n        if (this.isTokenValid()) return this.context.getPromise().resolve(true);\n        return this.refresh();\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.cancelAccessToken = function() {\n\n        return this.setCache(Utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n\n    };\n\n    /**\n     * @param {object} authData\n     * @returns {Platform}\n     */\n    Platform.prototype.setCache = function(authData) {\n\n        var oldAuthData = this.getAuthData();\n\n        Log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n\n        this.getStorage().setItem(this.cacheId, authData);\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.forceAuthentication = function() {\n\n        this.setCache({\n            token_type: forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n\n        return this;\n\n    };\n\n    /**\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.apiCall = function(options) {\n\n        options = options || {};\n        options.url = this.apiUrl(options.url, {addServer: true});\n\n        return this\n            .isAuthorized() // Refresh will occur inside\n            .then(function() {\n\n                var token = this.getToken();\n\n                return this.getRequest()\n                    .setOptions(options)\n                    .setHeader('Authorization', this.getTokenType() + (token ? ' ' + token : ''))\n                    .send();\n\n            }.bind(this))\n            .catch(function(e) {\n\n                if (!e.ajax || !e.ajax.isUnauthorized()) throw e;\n\n                this.cancelAccessToken();\n\n                return this\n                    .refresh()\n                    .then(function() {\n\n                        // Re-send with same options\n                        return this.apiCall(options);\n\n                    }.bind(this));\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @param {string} url\n     * @param {IAjaxOptions} [options]\n     * @returns {Promise}\n     */\n    Platform.prototype.get = function(url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n\n    /**\n     * @param {string} url\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.post = function(url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n\n    /**\n     * @param {string} url\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.put = function(url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n\n    /**\n     * @param {string} url\n     * @param {IAjaxOptions} [options]\n     * @returns {Promise}\n     */\n    Platform.prototype['delete'] = function(url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n\n    /**\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.authCall = function(options) {\n\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, {addServer: true});\n\n        return this.getRequest()\n            .setOptions(options)\n            .setHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setHeader('Accept', 'application/json')\n            .setHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n\n    };\n\n    /**\n     *\n     * @param url\n     * @param {{addMethod?: string, addToken?: boolean, addServer?: boolean}} [options]\n     * @returns {string}\n     */\n    Platform.prototype.apiUrl = function(url, options) {\n\n        url = url || '';\n        options = options || {};\n\n        var builtUrl = '';\n\n        if (options.addServer && url.indexOf('http://') == -1 && url.indexOf('https://') == -1) builtUrl += this.server;\n\n        if (url.indexOf(this.urlPrefix) == -1) builtUrl += this.urlPrefix + '/' + this.apiVersion;\n\n        if (url.indexOf(this.accountPrefix) > -1) builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n\n        builtUrl += url;\n\n        if (options.addMethod || options.addToken) builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n\n        if (options.addMethod) builtUrl += '_method=' + options.addMethod;\n        if (options.addToken) builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n\n        return builtUrl;\n\n    };\n\n    module.exports = {\n        Class: Platform,\n        /**\n         * @param {Context} context\n         * @returns {Platform}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('Platform', function() {\n                return new Platform(context);\n            });\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = __webpack_require__(16).Class,\n        Utils = __webpack_require__(19);\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Cache\n     * @param {Context} context\n     */\n    function Cache(context) {\n        Observable.call(this);\n        this.setPrefix();\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n\n    Cache.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Cache.prototype, 'constructor', {value: Cache, enumerable: false});\n\n    Cache.prototype.setPrefix = function(prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n\n    Cache.prototype.prefixKey = function(key) {\n        return this.prefix + key;\n    };\n\n    Cache.prototype.setItem = function(key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n\n    Cache.prototype.removeItem = function(key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n\n    Cache.prototype.getItem = function(key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item) return null;\n        return JSON.parse(item);\n    };\n\n    Cache.prototype.clean = function() {\n\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key)) continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n\n        return this;\n\n    };\n\n    module.exports = {\n        Class: Cache,\n        /**\n         * @param {Context} context\n         * @returns {Cache}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('Cache', function() {\n                return new Cache(context);\n            });\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = __webpack_require__(16).Class,\n        Log = __webpack_require__(18),\n        Utils = __webpack_require__(19),\n        renewHandicapMs = 60 * 1000;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Subscription\n     * @param {Context} context\n     */\n    function Subscription(context) {\n        Observable.call(this);\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '', // 2014-03-12T19:54:35.613Z\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '', // 2014-03-12T19:54:35.613Z\n            status: '', // Active\n            uri: ''\n        };\n        /** @type {PUBNUB} */\n        this.pubnub = null;\n        this.context = context;\n    }\n\n    Subscription.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Subscription.prototype, 'constructor', {value: Subscription, enumerable: false});\n\n    Subscription.prototype.events = {\n        notification: 'notification',\n        removeSuccess: 'removeSuccess',\n        removeError: 'removeError',\n        renewSuccess: 'renewSuccess',\n        renewError: 'renewError',\n        subscribeSuccess: 'subscribeSuccess',\n        subscribeError: 'subscribeError'\n    };\n\n    /**\n     * @returns {PUBNUB}\n     */\n    Subscription.prototype.getPubnub = function() {\n\n        return this.context.getPubnub();\n\n    };\n\n    Subscription.prototype.getCrypto = function() {\n\n        return this.context.getCryptoJS();\n\n    };\n\n    Subscription.prototype.getPlatform = function() {\n\n        return __webpack_require__(11).$get(this.context);\n\n    };\n\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function(options) {\n\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        } else {\n            return this.subscribe(options);\n        }\n\n    };\n\n    Subscription.prototype.addEvents = function(events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n\n    Subscription.prototype.setEvents = function(events) {\n        this.eventFilters = events;\n        return this;\n    };\n\n    Subscription.prototype.getFullEventFilters = function() {\n\n        return this.eventFilters.map(function(event) {\n            return this.getPlatform().apiUrl(event);\n        }.bind(this));\n\n    };\n\n    /**\n     * @private\n     * @param {Array} [options.events] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.subscribe = function(options) {\n\n        options = options || {};\n        if (options.events) this.eventFilters = options.events;\n\n        this.clearTimeout();\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.eventFilters || !this.eventFilters.length) throw new Error('Events are undefined');\n\n                resolve(this.getPlatform().apiCall({\n                    method: 'POST',\n                    url: '/restapi/v1.0/subscription',\n                    post: {\n                        eventFilters: this.getFullEventFilters(),\n                        deliveryMode: {\n                            transportType: 'PubNub'\n                        }\n                    }\n                }));\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.updateSubscription(ajax.data)\n                    .subscribeAtPubnub()\n                    .emit(this.events.subscribeSuccess, ajax.data);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.unsubscribe()\n                    .emit(this.events.subscribeError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @private\n     * @param {Array} [options.events] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.renew = function(options) {\n\n        options = options || {};\n        if (options.events) this.eventFilters = options.events;\n\n        this.clearTimeout();\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.subscription || !this.subscription.id) throw new Error('Subscription ID is required');\n                if (!this.eventFilters || !this.eventFilters.length) throw new Error('Events are undefined');\n\n                resolve();\n\n            }.bind(this))\n            .then(function() {\n\n                return this.getPlatform().apiCall({\n                    method: 'PUT',\n                    url: '/restapi/v1.0/subscription/' + this.subscription.id,\n                    post: {\n                        eventFilters: this.getFullEventFilters()\n                    }\n                });\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.updateSubscription(ajax.data)\n                    .emit(this.events.renewSuccess, ajax.data);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.unsubscribe()\n                    .emit(this.events.renewError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @param {boolean} [options.async]\n     * @returns {Promise}\n     */\n    Subscription.prototype.remove = function(options) {\n\n        options = Utils.extend({\n            async: true\n        }, options);\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.subscription || !this.subscription.id) throw new Error('Subscription ID is required');\n\n                resolve(this.getPlatform().apiCall({\n                    async: !!options.async, // Warning! This is necessary because this method is used in beforeunload hook and has to be synchronous\n                    method: 'DELETE',\n                    url: '/restapi/v1.0/subscription/' + this.subscription.id\n                }));\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.unsubscribe()\n                    .emit(this.events.removeSuccess, ajax);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.emit(this.events.removeError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Subscription.prototype.destroy = function() {\n\n        this.unsubscribe();\n\n        Log.info('RC.core.Subscription: Destroyed');\n\n        return Observable.prototype.destroy.call(this);\n\n    };\n\n    Subscription.prototype.isSubscribed = function() {\n\n        return this.subscription &&\n               this.subscription.deliveryMode &&\n               this.subscription.deliveryMode.subscriberKey &&\n               this.subscription.deliveryMode.address;\n\n    };\n\n    /**\n     * @protected\n     */\n    Subscription.prototype.setTimeout = function() {\n\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - renewHandicapMs;\n\n        this.timeout = setTimeout(function() {\n\n            this.renew({});\n\n        }.bind(this), timeToExpiration);\n\n    };\n\n    /**\n     * @protected\n     */\n    Subscription.prototype.clearTimeout = function() {\n\n        clearTimeout(this.timeout);\n\n    };\n\n    /**\n     * Set new subscription info and re-create timeout\n     * @protected\n     * @param subscription\n     * @returns {Subscription}\n     */\n    Subscription.prototype.updateSubscription = function(subscription) {\n\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n\n    };\n\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     * @protected\n     * @returns {Subscription}\n     */\n    Subscription.prototype.unsubscribe = function() {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed()) this.pubnub.unsubscribe({channel: this.subscription.deliveryMode.address});\n        this.subscription = null;\n        return this;\n    };\n\n    /**\n     * @abstract\n     * @param {Object} message\n     * @returns {Subscription}\n     */\n    Subscription.prototype.notify = function(message) {\n\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n\n            var CryptoJS = this.getCrypto();\n\n            var key = CryptoJS.enc.Base64.parse(this.subscription.deliveryMode.encryptionKey);\n            var data = CryptoJS.enc.Base64.parse(message);\n            var decrypted = CryptoJS.AES.decrypt({ciphertext: data}, key, {mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7}).toString(CryptoJS.enc.Utf8);\n            message = JSON.parse(decrypted);\n\n        }\n\n        this.emit(this.events.notification, message);\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Subscription}\n     */\n    Subscription.prototype.subscribeAtPubnub = function() {\n\n        if (!this.isSubscribed()) return this;\n\n        var PUBNUB = this.getPubnub();\n\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n\n        this.pubnub.ready();\n\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function(message, env, channel) {\n\n                Log.info('RC.core.Subscription: Incoming message', message);\n                this.notify(message);\n\n            }.bind(this),\n            connect: function() {\n                Log.info('RC.core.Subscription: PUBNUB connected');\n            }.bind(this)\n        });\n\n        return this;\n\n    };\n\n    module.exports = {\n        Class: Subscription,\n        /**\n         * @param {Context} context\n         * @returns {Subscription}\n         */\n        $get: function(context) {\n            return new Subscription(context);\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n * istanbul ignore next\n */\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n    'use strict';\n\n    var Observable = __webpack_require__(16).Class;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.PageVisibility\n     */\n    function PageVisibility() {\n\n        Observable.call(this);\n\n        var hidden = \"hidden\",\n            onchange = function(evt) {\n\n                evt = evt || window.event;\n\n                var v = 'visible',\n                    h = 'hidden',\n                    evtMap = {\n                        focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n                    };\n\n                this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n\n                this.emit(this.events.change, this.visible);\n\n            }.bind(this);\n\n        this.visible = true;\n\n        if (typeof document == 'undefined' || typeof window == 'undefined') return;\n\n        // Standards:\n\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        // IE 9 and lower:\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        // All others:\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n\n    }\n\n    PageVisibility.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(PageVisibility.prototype, 'constructor', {value: PageVisibility, enumerable: false});\n\n    PageVisibility.prototype.events = {\n        change: 'change'\n    };\n\n    PageVisibility.prototype.isVisible = function() {\n        return this.visible;\n    };\n\n    module.exports = {\n        Class: PageVisibility,\n        /**\n         * @param {Context} context\n         * @returns {PageVisibility}\n         */\n        $get: function(context) {\n            return new PageVisibility();\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(19);\n\n    /**\n     * @alias RCSDK.core.Helper\n     * @constructor\n     * @param {Context} context\n     */\n    function Helper(context) {\n        this.context = context;\n    }\n\n    Helper.prototype.defaultProperty = 'id';\n\n    /**\n     * @returns {Context}\n     */\n    Helper.prototype.getContext = function() {\n        return this.context;\n    };\n\n    /**\n     * @param {object} [options]\n     * @param {string} [id]\n     */\n    Helper.prototype.createUrl = function(options, id) {\n        return '';\n    };\n\n    /**\n     * @param {IHelperObject} object\n     * @returns {string}\n     */\n    Helper.prototype.getId = function(object) {\n        return object && object[this.defaultProperty];\n    };\n\n    /**\n     *\n     * @param {IHelperObject} object\n     * @returns {boolean}\n     */\n    Helper.prototype.isNew = function(object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n\n    /**\n     *\n     * @param {IHelperObject} object\n     * @returns {IHelperObject}\n     */\n    Helper.prototype.resetAsNew = function(object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n\n    /**\n     * @param {IHelperObject} object\n     * @returns {string}\n     */\n    Helper.prototype.getUri = function(object) {\n        return object && object.uri;\n    };\n\n    /**\n     * @param {Response} ajax\n     * @return {IHelperObject[]}\n     */\n    Helper.prototype.parseMultipartResponse = function(ajax) {\n\n        if (ajax.isMultipart()) {\n\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function(result) {\n                return (!result.error);\n            }).map(function(result) {\n                return result.data;\n            });\n\n        } else { // Single ID\n\n            return [ajax.data];\n\n        }\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     * @param {IHelperObject} [object]\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.loadRequest = function(object, options) {\n\n        return Utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     * @param {IHelperObject} object\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.saveRequest = function(object, options) {\n\n        if (!object && !(options && (options.post || options.body))) throw new Error('No Object');\n\n        return Utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     * @param {IHelperObject} object\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.deleteRequest = function(object, options) {\n\n        options = options || {};\n\n        if (!this.getUri(object) && !(options && options.url)) throw new Error('Object has to be not new or URL must be provided');\n\n        return Utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n\n    };\n\n    /**\n     * If no url was provided, default SYNC url will be returned\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.syncRequest = function(options) {\n\n        options = options || {};\n\n        options.url = options.url || this.createUrl({sync: true});\n        options.query = options.query || options.get || {};\n\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        } else {\n            options.query.syncType = 'FSync';\n        }\n\n        return options;\n\n    };\n\n    Helper.prototype.nextPageExists = function(data) {\n\n        return (data && data.navigation && ('nextPage' in data.navigation));\n\n    };\n\n    /**\n     * @param {IHelperObject[]} array - an array to be indexed\n     * @param {function(object)} [getIdFn] - must return an ID for each array item\n     * @param {boolean} [gather] - if true, then each index will have an array of items, that has same ID, otherwise the first indexed item wins\n     * @returns {*}\n     */\n    Helper.prototype.index = function(array, getIdFn, gather) {\n\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n\n        return array.reduce(function(index, item) {\n\n            var id = getIdFn(item);\n\n            if (!id || (index[id] && !gather)) return index;\n\n            if (gather) {\n                if (!index[id]) index[id] = [];\n                index[id].push(item);\n            } else {\n                index[id] = item;\n            }\n\n            return index;\n\n        }, {});\n\n    };\n\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * @param {IHelperObject[]} target\n     * @param {IHelperObject[]} supplement\n     * @param {function(IHelperObject)} [getIdFn]\n     * @param {boolean} [mergeItems] - if true, properties of _supplement_ item will be applied to _target_ item, otherwise _target_ item will be replaced\n     * @returns {*}\n     */\n    Helper.prototype.merge = function(target, supplement, getIdFn, mergeItems) {\n\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n\n        var supplementIndex = this.index(supplement, getIdFn),\n            updatedIDs = [];\n\n        var result = target.map(function(item) {\n\n            var id = getIdFn(item),\n                newItem = supplementIndex[id];\n\n            if (newItem) updatedIDs.push(id);\n\n            return newItem ? (mergeItems ? Utils.extend(item, newItem) : newItem) : item;\n\n        });\n\n        supplement.forEach(function(item) {\n\n            if (updatedIDs.indexOf(getIdFn(item)) == -1) result.push(item);\n\n        });\n\n        return result;\n\n    };\n\n    module.exports = {\n        Class: Helper,\n        /**\n         * @param {Context} context\n         * @returns {Helper}\n         */\n        $get: function(context) {\n            return new Helper(context);\n        }\n    };\n\n    /**\n     * @typedef {object} IHelperObject\n     * @property {string} id\n     * @property {string} uri\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    var Utils = __webpack_require__(19),\n        Log = __webpack_require__(18);\n\n    /**\n     * @constructor\n     * @alias RCSDK.core.Observable\n     */\n    function Observable() {\n        if (!(this instanceof Observable)) throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', {value: {}, enumerable: false, writable: true});\n        Object.defineProperty(this, 'oneTimeEvents', {value: {}, enumerable: false, writable: true});\n        Object.defineProperty(this, 'oneTimeArguments', {value: {}, enumerable: false, writable: true});\n    }\n\n    // Object.create({}) is not needed\n    // Do not put Object or Function.prototype instead of {}, otherwise all instances will get non-writable 'name' property\n    // Observable.prototype = {};\n    Object.defineProperty(Observable.prototype, 'constructor', {value: Observable, enumerable: false});\n\n    Observable.prototype.hasListeners = function(event) {\n        return (event in this.listeners);\n    };\n\n    Observable.prototype.registerOneTimeEvent = function(event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n\n    Observable.prototype.on = function(events, callback) {\n\n        if (typeof events == 'string') events = [events];\n        if (!events) throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function') throw new Error('Callback must be a function');\n\n        var self = this;\n\n        events.forEach(function(event) {\n\n            if (!self.hasListeners(event)) self.listeners[event] = [];\n\n            self.listeners[event].push(callback);\n\n            if (self.isOneTimeEventFired(event)) { // Fire listener immediately if is inited already\n                Log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n\n        });\n\n        return this;\n\n    };\n\n    Observable.prototype.emit = function(event) {\n\n        if (this.isOneTimeEventFired(event)) {\n            Log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n\n        var self = this,\n            args = Utils.argumentsToArray(arguments).splice(1),\n            result = null;\n\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n\n        if (!this.hasListeners(event)) return null;\n\n        this.listeners[event].some(function(callback) {\n\n            result = callback.apply(self, args);\n            return (result === false);\n\n        });\n\n        return result;\n\n    };\n\n    Observable.prototype.off = function(event, callback) {\n        var self = this;\n        if (!callback) {\n            delete this.listeners[event];\n        } else {\n            if (!this.hasListeners(event)) return this;\n            this.listeners[event].forEach(function(cb, i) {\n\n                if (cb === callback) delete self.listeners[event][i];\n\n            });\n        }\n        return this;\n    };\n\n    Observable.prototype.isOneTimeEvent = function(event) {\n        return (event in this.oneTimeEvents);\n    };\n\n    Observable.prototype.isOneTimeEventFired = function(event) {\n        if (!this.isOneTimeEvent(event)) return false;\n        return (this.oneTimeEvents[event]);\n    };\n\n    Observable.prototype.setOneTimeEventFired = function(event) {\n        this.oneTimeEvents[event] = true;\n    };\n\n    Observable.prototype.setOneTimeEventArgumens = function(event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n\n    Observable.prototype.getOneTimeEventArgumens = function(event) {\n        return this.oneTimeArguments[event];\n    };\n\n    Observable.prototype.offAll = function() {\n        this.listeners = {};\n        this.oneTimeEvents = {};\n        this.oneTimeArguments = {};\n    };\n\n    Observable.prototype.destroy = function() {\n        this.offAll();\n        Log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n\n    /**\n     * @param {string} event\n     * @param {Array} args\n     * @param {function} [callback]\n     */\n    Observable.prototype.emitAndCallback = function(event, args, callback) {\n        args = Utils.argumentsToArray(args);\n        if (event) this.emit.apply(this, [event].concat(args));\n        if (callback) callback.apply(this, args);\n        return this;\n    };\n\n    module.exports = {\n        Class: Observable,\n        /**\n         * @param {Context} context\n         * @returns {Observable}\n         */\n        $get: function(context) {\n            return new Observable(context);\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(19);\n\n    /**\n     * @typedef {object} IValidator\n     * @property {string} field\n     * @property {function} validator\n     */\n\n    /**\n     * @typedef {object} IValidatorResult\n     * @property {boolean} isValid\n     * @property {Object.<number, Error[]>} errors\n     */\n\n    /**\n     * @alias RCSDK.core.Validator\n     * @name Validator\n     */\n    var Validator = module.exports = {\n        /**\n         * @param {IValidator[]} validators\n         * @returns {IValidatorResult}\n         */\n        validate: function(validators) {\n\n            /** @type {IValidatorResult} */\n            var result = {\n                errors: {},\n                isValid: true\n            };\n\n            result.errors = validators.reduce(function(errors, validator) {\n\n                var res = validator.validator();\n\n                if (res.length > 0) {\n                    result.isValid = false;\n                    errors[validator.field] = errors[validator.field] || [];\n                    errors[validator.field] = errors[validator.field].concat(res);\n                }\n\n                return errors;\n\n            }, {});\n\n            return result;\n\n        },\n        /**\n         * It is not recommended to have any kinds of complex validators at front end\n         * @deprecated\n         * @param value\n         * @param multiple\n         * @returns {Function}\n         */\n        email: function(value, multiple) {\n            return function() {\n                if (!value) return [];\n                return Utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n            };\n        },\n        /**\n         * It is not recommended to have any kinds of complex validators at front end\n         * TODO International phone numbers\n         * @deprecated\n         * @param value\n         * @returns {Function}\n         */\n        phone: function(value) {\n            return function() {\n                if (!value) return [];\n                return Utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n            };\n        },\n        required: function(value) {\n            return function() {\n                return !value ? [new Error('Field is required')] : [];\n            };\n        },\n        length: function(value, max, min) {\n            return function() {\n\n                var errors = [];\n\n                if (!value) return errors;\n\n                value = value.toString();\n\n                if (min && value.length < min) errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n                if (max && value.length > max) errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n\n                return errors;\n\n            };\n        },\n        $get: function(context) {\n            return Validator;\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(19);\n\n    /**\n     * @alias RCSDK.core.Log\n     * @name Log\n     */\n    var Log = module.exports = {\n        logDebug: false,\n        logInfo: false,\n        logWarnings: false,\n        logErrors: false,\n        addTimestamps: true,\n        /** @type {Console} */\n        console: console || { // safety\n            log: function() {},\n            warn: function() {},\n            info: function() {},\n            error: function() {}\n        },\n        disableAll: function() {\n            this.logDebug = false;\n            this.logInfo = false;\n            this.logWarnings = false;\n            this.logErrors = false;\n        },\n        enableAll: function() {\n            this.logDebug = true;\n            this.logInfo = true;\n            this.logWarnings = true;\n            this.logErrors = true;\n        },\n        parseArguments: function(args) {\n            args = Utils.argumentsToArray(args);\n            if (this.addTimestamps) args.unshift(new Date().toLocaleString(), '-');\n            return args;\n        },\n        debug: function() {\n            if (this.logDebug) this.console.log.apply(this.console, this.parseArguments(arguments));\n        },\n        info: function() {\n            if (this.logInfo) this.console.info.apply(this.console, this.parseArguments(arguments));\n        },\n        warn: function() {\n            if (this.logWarnings) this.console.warn.apply(this.console, this.parseArguments(arguments));\n        },\n        error: function() {\n            if (this.logErrors) this.console.error.apply(this.console, this.parseArguments(arguments));\n        },\n        $get: function(context) {\n            return Log;\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var hasOwn = Object.prototype.hasOwnProperty,\n        toString = Object.prototype.toString,\n        rdigit = /\\d/,\n        class2type = {};\n\n    // Populate the class2type map\n    'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function(name) {\n        class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n    });\n\n    /**\n     * @alias RCSDK.core.Utils\n     * @name Utils\n     */\n    var Utils = module.exports = {\n\n        /**\n         * Ported from jQuery.fn.extend\n         * Optional first parameter makes deep copy\n         * @param {object} targetObject\n         * @param {object} sourceObject\n         * @returns {object}\n         */\n        extend: function extend(targetObject, sourceObject) {\n\n            var options, name, src, copy, copyIsArray, clone,\n                target = arguments[0] || {},\n                i = 1,\n                length = arguments.length,\n                deep = false;\n\n            // Handle a deep copy situation\n            if (typeof target === \"boolean\") {\n                deep = target;\n\n                // skip the boolean and the target\n                target = arguments[i] || {};\n                i++;\n            }\n\n            // Handle case when target is a string or something (possible in deep copy)\n            if (typeof target !== \"object\" && !this.isFunction(target)) {\n                target = {};\n            }\n\n            for (; i < length; i++) {\n\n                // Only deal with non-null/undefined values\n                if ((options = arguments[i]) !== null) {\n\n                    // Extend the base object\n                    for (name in options) {\n\n                        src = target[name];\n                        copy = options[name];\n\n                        // Prevent never-ending loop\n                        if (target === copy) {\n                            continue;\n                        }\n\n                        // Recurse if we're merging plain objects or arrays\n                        if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n\n                            if (copyIsArray) {\n                                copyIsArray = false;\n                                clone = src && this.isArray(src) ? src : [];\n                            } else {\n                                clone = src && this.isPlainObject(src) ? src : {};\n                            }\n\n                            // Never move original objects, clone them\n                            target[name] = this.extend(deep, clone, copy);\n\n                            // Don't bring in undefined values\n                        } else if (copy !== undefined) {\n\n                            target[name] = copy;\n\n                        }\n                    }\n                }\n            }\n\n            // Return the modified object\n            return target;\n\n        },\n\n        forEach: function(object, cb) {\n\n            for (var i in object) {\n\n                if (!object.hasOwnProperty(i)) continue;\n\n                var res = cb(object[i], i);\n\n                if (res === false) break;\n\n            }\n\n        },\n\n        /**\n         * TODO Replace with something better\n         * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n         * @param {object} parameters\n         * @returns {string}\n         */\n        queryStringify: function(parameters) {\n\n            var array = [],\n                self = this;\n\n            this.forEach(parameters, function(v, i) {\n\n                if (self.isArray(v)) {\n                    v.forEach(function(vv) {\n                        array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                    });\n                } else {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n                }\n\n            });\n\n            return array.join('&');\n\n        },\n\n        /**\n         * TODO Replace with something better\n         * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n         * @param {string} queryString\n         * @returns {object}\n         */\n        parseQueryString: function(queryString) {\n\n            var argsParsed = {},\n                self = this;\n\n            queryString.split('&').forEach(function(arg) {\n\n                arg = decodeURIComponent(arg);\n\n                if (arg.indexOf('=') == -1) {\n\n                    argsParsed[arg.trim()] = true;\n\n                } else {\n\n                    var pair = arg.split('='),\n                        key = pair[0].trim(),\n                        value = pair[1].trim();\n\n                    if (key in argsParsed) {\n                        if (key in argsParsed && !self.isArray(argsParsed[key])) argsParsed[key] = [argsParsed[key]];\n                        argsParsed[key].push(value);\n                    } else {\n                        argsParsed[key] = value;\n                    }\n\n                }\n\n            });\n\n            return argsParsed;\n\n        },\n\n        /**\n         * Returns true if the passed value is valid email address.\n         * @param {string} v\n         * @param {boolean} multiple Checks multiple comma separated emails according to RFC 2822\n         * @returns {boolean}\n         */\n        isEmail: function(v, multiple) {\n            if (!!multiple) {\n                //this Regexp is also suitable for multiple emails (comma separated)\n                return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n            } else {\n                return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n            }\n\n        },\n\n        isPhoneNumber: function(v) {\n            return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n        },\n\n        /**\n         * @param args\n         * @returns {Array}\n         */\n        argumentsToArray: function(args) {\n            return Array.prototype.slice.call(args || [], 0);\n        },\n\n        isDate: function(obj) {\n            return this.type(obj) === \"date\";\n        },\n\n        isFunction: function(obj) {\n            return this.type(obj) === \"function\";\n        },\n\n        isArray: Array.isArray || function(obj) {\n            return this.type(obj) === \"array\";\n        },\n\n        // A crude way of determining if an object is a window\n        isWindow: function(obj) {\n            return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n        },\n\n        isNaN: function(obj) {\n            return obj === null || !rdigit.test(obj) || isNaN(obj);\n        },\n\n        type: function(obj) {\n            return obj === null ?\n                   String(obj) :\n                   class2type[toString.call(obj)] || \"object\";\n        },\n\n        isPlainObject: function(obj) {\n            // Must be an Object.\n            // Because of IE, we also have to check the presence of the constructor property.\n            // Make sure that DOM nodes and window objects don't pass through, as well\n            if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n                return false;\n            }\n\n            // Not own constructor property must be Object\n            if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n                return false;\n            }\n\n            // Own properties are enumerated firstly, so to speed up,\n            // if last one is own, then all properties are own.\n\n            var key;\n            for (key in obj) {}\n\n            return key === undefined || hasOwn.call(obj, key);\n        },\n\n        getProperty: function(obj, property) {\n\n            return property\n                .split(/[.[\\]]/)\n                .reduce(function(res, part) {\n                    if (!res) return undefined;\n                    return part ? res[part] : res;\n                }, obj);\n\n        },\n\n        poll: function(fn, interval, timeout) {\n\n            this.stopPolling(timeout);\n\n            interval = interval || 1000;\n\n            var next = function(delay) {\n\n                delay = delay || interval;\n\n                interval = delay;\n\n                return setTimeout(function() {\n\n                    fn(next, delay);\n\n                }, delay);\n\n            };\n\n            return next();\n\n        },\n\n        stopPolling: function(timeout) {\n            if (timeout) clearTimeout(timeout);\n        },\n\n        parseString: function(s) {\n            return s ? s.toString() : '';\n        },\n\n        parseNumber: function(n) {\n            if (!n) return 0;\n            n = parseFloat(n);\n            return isNaN(n) ? 0 : n;\n        },\n\n        $get: function(context) {\n            return Utils;\n        }\n\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(19);\n\n    /**\n     * @alias RCSDK.core.List\n     * @name List\n     */\n    var List = module.exports = {\n\n        /**\n         * @param {string} property\n         * @returns {function(object)}\n         */\n        propertyExtractor: function(property) {\n            return function(item, options) {\n                return property ? ((item && item[property]) || null) : item;\n            };\n        },\n\n        /**\n         * Non-string types are converted to string\n         * Non-string types are extracted as an empty string if they could be converted to false\n         * If no options.sortBy given the item itself is extracted\n         * Compares strings:\n         * - if (a is less than b) return -1;\n         * - if (a is greater than b) return 1;\n         * - else (a must be equal to b) return 0;\n         * Exceptions in will be suppressed, if any - a is assumed to be less than b\n         * @param {string} a\n         * @param {string} b\n         * @param {IListComparatorOptions} [options]\n         * @returns {number}\n         */\n        stringComparator: function(a, b, options) {\n\n            return Utils.parseString(a).localeCompare(Utils.parseString(b));\n\n        },\n\n        /**\n         * Non-numeric types are extracted as 0 if they could be converted to false\n         * Objects that could not be converted to number are extracted as 0\n         * If no options.sortBy given the item itself is extracted\n         * See parseFloat for more info\n         * Compares numbers:\n         * - if (a is less than b) return -1;\n         * - if (a is greater than b) return 1;\n         * - else (a must be equal to b) return 0;\n         * Function does not check types\n         * Exceptions in will be suppressed, if any - a is assumed to be less than b\n         * @param {number} a\n         * @param {number} b\n         * @param {IListComparatorOptions} [options]\n         * @returns {number}\n         */\n        numberComparator: function(a, b, options) {\n\n            return (Utils.parseNumber(a) - Utils.parseNumber(b));\n\n        },\n\n        /**\n         * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n         * compare function (_compareFn_ option, by default Helper.stringComparator)\n         * Merged options are provided to _extractFn_ and _compareFn_\n         * TODO Check memory leaks for all that options links\n         * @param {IListComparatorOptions} [options]\n         * @returns {function(object, object)}\n         */\n        comparator: function(options) {\n\n            options = Utils.extend({\n                extractFn: this.propertyExtractor((options && options.sortBy) || null),\n                compareFn: this.stringComparator\n            }, options);\n\n            /**\n             * @param {object} item1\n             * @param {object} item2\n             * @returns {number}\n             */\n            function comparator(item1, item2) {\n\n                return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n\n            }\n\n            return comparator;\n\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options\n         * @returns {boolean}\n         */\n        equalsFilter: function(obj, options) {\n            return (options.condition === obj);\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options\n         * @returns {boolean}\n         */\n        containsFilter: function(obj, options) {\n            return (obj && obj.toString().indexOf(options.condition) > -1);\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options - `condition` must be an instance of RegExp\n         * @returns {boolean}\n         */\n        regexpFilter: function(obj, options) {\n            if (!(options.condition instanceof RegExp)) throw new Error('Condition must be an instance of RegExp');\n            return (options.condition.test(obj));\n        },\n\n        /**\n         * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n         * compare function (`filterFn` option, by default Helper.equalsFilter)\n         * Merged options are provided to `extractFn` and `compareFn`\n         * Set `filterBy` to null to force `propertyExtractor` to return object itself\n         * TODO Check memory leaks for all that options links\n         * @param {IListFilterOptions[]} [filterConfigs]\n         * @returns {function(object)}\n         */\n        filter: function(filterConfigs) {\n\n            var self = this;\n\n            filterConfigs = (filterConfigs || []).map(function(opt) {\n\n                return Utils.extend({\n                    condition: '',\n                    extractFn: self.propertyExtractor((opt && opt.filterBy) || null),\n                    filterFn: self.equalsFilter\n                }, opt);\n\n            });\n\n            /**\n             * @param {object} item\n             * @returns {boolean}\n             */\n            function filter(item) {\n\n                return filterConfigs.reduce(function(pass, opt) {\n\n                    if (!pass || !opt.condition) return pass;\n                    return opt.filterFn(opt.extractFn(item, opt), opt);\n\n                }, true);\n\n            }\n\n            return filter;\n\n        },\n\n        $get: function(context) {\n            return List;\n        }\n\n    };\n\n    /**\n     * @typedef {object} IListComparatorOptions\n     * @property {string} sortBy\n     * @property {function(object, IListComparatorOptions)} extractFn\n     * @property {function(object, object)} compareFn\n     */\n\n    /**\n     * @typedef {object} IListFilterOptions\n     * @property {string} filterBy\n     * @property {object} condition\n     * @property {function(object, IListComparatorOptions)} extractFn\n     * @property {function(object, object)} filterFn\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function CountryHelper(context) {\n        Helper.call(this, context);\n    }\n\n    CountryHelper.prototype = Object.create(Helper.prototype);\n\n    CountryHelper.prototype.createUrl = function() {\n        return '/dictionary/country';\n    };\n\n    module.exports = {\n        Class: CountryHelper,\n        /**\n         * @param {Context} context\n         * @returns {CountryHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('CountryHelper', function() {\n                return new CountryHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ICountry\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {string} callingCode\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function DeviceModelHelper(context) {\n        Helper.call(this, context);\n    }\n\n    DeviceModelHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IDeviceModel} device\n     * @returns {string}\n     */\n    DeviceModelHelper.prototype.getId = function(device) {\n\n        if (!device) return null;\n\n        return device.id + (\n                device.addons && device.addons[0]\n                    ? '-' + device.addons[0].id + '-' + device.addons[0].count\n                    : ''\n            );\n\n    };\n\n    /**\n     * Remove extra textual information from device\n     * @exceptionalCase Platform does not understand full device info\n     * @param {IDeviceModel} device\n     * @returns {IDeviceModel}\n     */\n    DeviceModelHelper.prototype.cleanForSaving = function(device) {\n\n        if (!device) return null;\n\n        delete device.name;\n        delete device.deviceClass;\n\n        if (device.addons && device.addons.length > 0) {\n\n            device.addons.forEach(function(addon, i) {\n                delete device.addons[i].name;\n            });\n\n        } else {\n\n            delete device.addons;\n\n        }\n\n        return device;\n\n    };\n\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-1 is done\n     * @type {IDeviceModel[]}\n     */\n    DeviceModelHelper.prototype.devices = [\n        {\n            id: '-1',\n            name: 'Softphone'\n        },\n        {\n            id: '0',\n            name: 'Existing device'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '23',\n            name: 'Polycom IP 321 Basic IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '30',\n            name: 'Polycom IP 550 HD Manager IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '37',\n            name: 'Polycom IP 6000 Conference Phone',\n            deviceClass: 'Conference Phone'\n        },\n        {\n            id: '40',\n            name: 'Polycom IP 335 HD IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '51',\n            name: 'Cisco SPA-303 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 2 Expansion Modules\tDesk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 3 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '3'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '52',\n            name: 'Cisco SPA-122 ATA',\n            deviceClass: 'Analog Adapter'\n        },\n        {\n            id: '53',\n            name: 'Polycom VVX-500 Color Touchscreen',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '54',\n            name: 'Polycom VVX-310 Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '55',\n            name: 'Polycom VVX-410 Color Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        }\n    ];\n\n    module.exports = {\n        Class: DeviceModelHelper,\n        /**\n         * @param {Context} context\n         * @returns {DeviceModelHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('DeviceModelHelper', function() {\n                return new DeviceModelHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IDeviceModel\n     * @property {string} id\n     * @property {string} name\n     * @property {string} deviceClass\n     * @property {string} addons\n     */\n\n    /**\n     * @typedef {Object} IDeviceModelAddon\n     * @property {string} id\n     * @property {string} name\n     * @property {string} count\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function LanguageHelper(context) {\n        Helper.call(this, context);\n    }\n\n    LanguageHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @type {ILanguage[]}\n     */\n    LanguageHelper.prototype.languages = [\n        {\n            id: '1033',\n            name: 'English (US)'\n        },\n        {\n            id: '3084',\n            name: 'French (Canada)'\n        }\n    ];\n\n    module.exports = {\n        Class: LanguageHelper,\n        /**\n         * @param {Context} context\n         * @returns {LanguageHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('LanguageHelper', function() {\n                return new LanguageHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ILanguage\n     * @property {string} id\n     * @property {string} name\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class,\n        List = __webpack_require__(20),\n        Utils = __webpack_require__(19);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function LocationHelper(context) {\n        Helper.call(this, context);\n        this.state = __webpack_require__(26).$get(context);\n    }\n\n    LocationHelper.prototype = Object.create(Helper.prototype);\n\n    LocationHelper.prototype.createUrl = function() {\n        return '/dictionary/location';\n    };\n\n    /**\n     * @param {ILocationFilterOptions} options\n     * @returns {function(ILocation)}\n     */\n    LocationHelper.prototype.filter = function(options) {\n\n        var uniqueNPAs = [];\n\n        options = Utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.stateId,\n                filterFn: function(item, opts) {\n                    return (this.state.getId(item.state) == opts.condition);\n                }.bind(this)\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function(item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    } else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {comparator}\n     */\n    LocationHelper.prototype.comparator = function(options) {\n\n        options = Utils.extend({\n            sortBy: 'npa'\n        }, options);\n\n        if (options.sortBy == 'nxx') {\n\n            /**\n             * @param {ILocation} item\n             * @returns {number}\n             */\n            options.extractFn = function(item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n\n            options.compareFn = List.numberComparator;\n\n        }\n\n        return List.comparator(options);\n\n    };\n\n    module.exports = {\n        Class: LocationHelper,\n        /**\n         * @param {Context} context\n         * @returns {LocationHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('LocationHelper', function() {\n                return new LocationHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ILocation\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {string} npa\n     * @property {string} nxx\n     * @property {IState} state\n     */\n\n    /**\n     * @typedef {object} ILocationFilterOptions\n     * @property {string} stateId\n     * @property {boolean} onlyUniqueNPA\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ShippingMethodHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ShippingMethodHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-3 id done\n     * @type {IShippingMethod[]}\n     */\n    ShippingMethodHelper.prototype.shippingMethods = [\n        {\n            id: '1',\n            name: 'Ground Shipping (5-7 business days)'\n        },\n        {\n            id: '2',\n            name: '2-days Shipping'\n        },\n        {\n            id: '3',\n            name: 'Overnight Shipping'\n        }\n    ];\n\n    module.exports = {\n        Class: ShippingMethodHelper,\n        /**\n         * @param {Context} context\n         * @returns {ShippingMethodHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ShippingMethodHelper', function() {\n                return new ShippingMethodHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IShippingMethod\n     * @property {string} id\n     * @property {string} name\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class,\n        List = __webpack_require__(20),\n        Utils = __webpack_require__(19);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function StateHelper(context) {\n        Helper.call(this, context);\n        this.countryHelper = __webpack_require__(21).$get(context);\n    }\n\n    StateHelper.prototype = Object.create(Helper.prototype);\n\n    StateHelper.prototype.createUrl = function() {\n        return '/dictionary/state';\n    };\n\n    /**\n     * @param {IStateOptions} options\n     * @returns {function(IState)}\n     */\n    StateHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            countryId: ''\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.countryId,\n                filterFn: function(item, opts) {\n                    return (this.countryHelper.getId(item.country) == opts.condition);\n                }.bind(this)\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: StateHelper,\n        /**\n         * @param {Context} context\n         * @returns {StateHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('StateHelper', function() {\n                return new StateHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IState\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {ICountry} country\n     */\n\n    /**\n     * @typedef {object} IStateOptions\n     * @property {string} countryId\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function TimezoneHelper(context) {\n        Helper.call(this, context);\n    }\n\n    TimezoneHelper.prototype = Object.create(Helper.prototype);\n\n    TimezoneHelper.prototype.createUrl = function() {\n        return '/dictionary/timezone';\n    };\n\n    module.exports = {\n        Class: TimezoneHelper,\n        /**\n         * @param {Context} context\n         * @returns {TimezoneHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('TimezoneHelper', function() {\n                return new TimezoneHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ITimezone\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} description\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function AccountHelper(context) {\n        Helper.call(this, context);\n    }\n\n    AccountHelper.prototype = Object.create(Helper.prototype);\n\n    AccountHelper.prototype.createUrl = function() {\n        return '/account/~';\n    };\n\n    module.exports = {\n        Class: AccountHelper,\n        /**\n         * @param {Context} context\n         * @returns {AccountHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('AccountHelper', function() {\n                return new AccountHelper(context);\n            });\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class,\n        Validator = __webpack_require__(17);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function BlockedNumberHelper(context) {\n        Helper.call(this, context);\n    }\n\n    BlockedNumberHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     *\n     * @param {IBlockedNumberOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    BlockedNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' +\n               (options.extensionId ? options.extensionId : '~') +\n               '/blocked-number' +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IBlockedNumber} item\n     */\n    BlockedNumberHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'phoneNumber', validator: Validator.phone(item.phoneNumber)},\n            {field: 'phoneNumber', validator: Validator.required(item.phoneNumber)},\n            {field: 'name', validator: Validator.required(item.name)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: BlockedNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {BlockedNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('BlockedNumberHelper', function() {\n                return new BlockedNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IBlockedNumber\n     * @property {string} name\n     * @property {string} phoneNumber\n     */\n\n    /**\n     * @typedef {object} IBlockedNumberOptions\n     * @property {string} extensionId\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class,\n        Utils = __webpack_require__(19),\n        List = __webpack_require__(20);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function CallHelper(context) {\n        Helper.call(this, context);\n        this.presence = __webpack_require__(39).$get(context);\n        this.contact = __webpack_require__(32).$get(context);\n    }\n\n    CallHelper.prototype = Object.create(Helper.prototype);\n\n\n    /**\n     * @param {ICallOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    CallHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (!('personal' in options) && !('extensionId' in options)) options.personal = true;\n\n        return '/account/~/' +\n               (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n               (options.active ? 'active-calls' : 'call-log') +\n               (id ? '/' + id : '');\n\n    };\n\n    CallHelper.prototype.getSessionId = function(call) {\n        return (call && call.sessionId);\n    };\n\n    CallHelper.prototype.isInProgress = function(call) {\n        return (call && call.result == 'In Progress');\n    };\n\n    CallHelper.prototype.isAlive = function(call) {\n        return (call && call.availability == 'Alive');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isInbound = function(call) {\n        return (call && call.direction == 'Inbound');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isOutbound = function(call) {\n        return !this.isInbound(call);\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isMissed = function(call) {\n        return (call && call.result == 'Missed');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isFindMe = function(call) {\n        return (call && call.action == 'FindMe');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {ICallerInfo}\n     */\n    CallHelper.prototype.getCallerInfo = function(call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {ICallerInfo[]}\n     */\n    CallHelper.prototype.getAllCallerInfos = function(call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n\n    CallHelper.prototype.formatDuration = function(call) {\n\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n\n        var duration = parseInt(call.duration),\n            hours = Math.floor(duration / (60 * 60)),\n            mins = Math.floor((duration % (60 * 60)) / 60),\n            secs = Math.floor(duration % 60);\n\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n\n    };\n\n    /**\n     * @param {ICallFilterOptions} [options]\n     * @returns {function(ICall)}\n     */\n    CallHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n\n        return List.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            {filterBy: 'direction', condition: options.direction},\n            {filterBy: 'type', condition: options.type}\n        ]);\n\n    };\n\n    /**\n     * TODO Compare as dates\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    CallHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'startTime'\n        }, options));\n\n    };\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     * @param {IContact[]} contacts\n     * @param {ICall[]} calls\n     * @param {IContactMatchOptions} [options]\n     */\n    CallHelper.prototype.attachContacts = function(contacts, calls, options) {\n\n        var self = this;\n\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function(callerInfos, call) {\n\n            return callerInfos.concat(self.getAllCallerInfos(call));\n\n        }, []);\n\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n\n    };\n\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     * @param {ICall} outboundRingOutCall\n     * @param {ICall} inboundCall\n     * @param {ICallProcessingOptions} options\n     * @returns {boolean}\n     */\n    CallHelper.prototype.checkMergeability = function(outboundRingOutCall, inboundCall, options) {\n\n        function getTime(dateString) {\n            return (new Date(dateString)).getTime();\n        }\n\n        return (\n        (!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n        // Check directions\n        outboundRingOutCall.direction == 'Outbound' &&\n        inboundCall.direction == 'Inbound' &&\n        // Check that start times are equal or close enough\n        ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n        // Check that numbers match\n        inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n        (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n\n    };\n\n    /**\n     * @param {ICall} outboundRingOutCall\n     * @param {ICall} inboundCall\n     * @param {ICallProcessingOptions} [options]\n     * @returns {Array}\n     */\n    CallHelper.prototype.combineCalls = function(outboundRingOutCall, inboundCall, options) {\n\n        options = options || {};\n\n        var result = [];\n\n        outboundRingOutCall.hasSubsequent = true;\n\n        if (options.merge) {\n\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n\n        } else {\n\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n\n        }\n\n        return result;\n\n    };\n\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     *\n     * @param {ICall[]} calls\n     * @param {ICallProcessingOptions} options\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.processCalls = function(calls, options) {\n\n        var processedCalls = [],\n            callsToMerge = [],\n            self = this;\n\n        // Iterate through calls\n        calls.forEach(function(call) {\n\n            var merged = false;\n\n            call.subsequent = false;\n            call.hasSubsequent = false;\n\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function(secondCall) {\n\n                if (call === secondCall) return false;\n\n                if (self.checkMergeability(call, secondCall, options)) {\n\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n\n                    merged = true;\n\n                }\n\n                return merged;\n\n            });\n\n        });\n\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function(call) {\n\n            if (callsToMerge.indexOf(call) == -1) processedCalls.push(call);\n\n        });\n\n        return processedCalls;\n\n    };\n\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     * @param {IPresenceCall[]} activeCalls\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.parsePresenceCalls = function(activeCalls) {\n\n        return activeCalls.map(function(activeCall) {\n\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: {phoneNumber: activeCall.from},\n                to: {phoneNumber: activeCall.to},\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n\n        }, this);\n\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {string}\n     */\n    CallHelper.prototype.getSignature = function(call) {\n\n        function cleanup(phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        }\n\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n\n    };\n\n    /**\n     * @param {ICall[]} presenceCalls\n     * @param {IPresence} presence\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.mergePresenceCalls = function(presenceCalls, presence) {\n\n        var currentDate = new Date(),\n\n            activeCalls = this\n                .parsePresenceCalls(presence && presence.activeCalls || [])\n                .map(function(call) {\n                    // delete property to make sure it is skipped during merge\n                    delete call.startTime;\n                    return call;\n                });\n\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n\n        presenceCalls.forEach(function(call) {\n            if (!call.startTime) call.startTime = currentDate.toISOString();\n        });\n\n        return presenceCalls;\n\n    };\n\n    /**\n     * @param {ICall[]} presenceCalls\n     * @param {ICall[]} calls\n     * @param {ICall[]} activeCalls\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.mergeAll = function(presenceCalls, calls, activeCalls) {\n\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n\n    };\n\n    module.exports = {\n        Class: CallHelper,\n        /**\n         * @param {Context} context\n         * @returns {CallHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('CallHelper', function() {\n                return new CallHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ICall\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} sessionId\n     * @property {string} startTime\n     * @property {string} duration\n     * @property {string} type\n     * @property {string} direction\n     * @property {string} action\n     * @property {string} result\n     * @property {ICallerInfo} to\n     * @property {ICallerInfo} from\n     */\n\n    /**\n     * @typedef {object} ICallOptions\n     * @property {string} extensionId\n     * @property {boolean} active\n     * @property {boolean} personal\n     */\n\n    /**\n     * @typedef {object} ICallProcessingOptions\n     * @property {boolean} strict\n     * @property {boolean} merge\n     * @property {number} maxStartTimeDiscrepancy\n     */\n\n    /**\n     * @typedef {object} ICallFilterOptions\n     * @property {string} extensionId\n     * @property {string} direction\n     * @property {string} type\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/CallerInfo.html\n     * @typedef {Object} ICallerInfo\n     * @property {string} phoneNumber\n     * @property {string} extensionNumber\n     * @property {string} name\n     * @property {string} location\n     * @property {IContact} [contact] - corresponding contact (added by attachContacts methods)\n     * @property {string} [contactPhone] - contact's phone as written in contact (added by attachContacts methods)\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ConferencingHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ConferencingHelper.prototype = Object.create(Helper.prototype);\n\n    ConferencingHelper.prototype.createUrl = function() {\n        return '/account/~/extension/~/conferencing';\n    };\n\n    module.exports = {\n        Class: ConferencingHelper,\n        /**\n         * @param {Context} context\n         * @returns {ConferencingHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ConferencingHelper', function() {\n                return new ConferencingHelper(context);\n            });\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(19),\n        Validator = __webpack_require__(17),\n        Helper = __webpack_require__(15).Class,\n        List = __webpack_require__(20);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ContactHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ContactHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IContactOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    ContactHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        var root = '/account/~/extension/' +\n                   (options.extensionId ? options.extensionId : '~') +\n                   '/address-book';\n\n        if (options.sync) return root + '-sync';\n\n        return root +\n               (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * Returns all values of the given fields if value exists\n     * @param {(IContact|object)} where\n     * @param {Array} fields\n     * @param {boolean} [asHash]\n     * @protected\n     * @returns {Object}\n     */\n    ContactHelper.prototype.getFieldValues = function(where, fields, asHash) {\n\n        return fields.reduce(function(result, field) {\n\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                } else {\n                    result.push(where[field]);\n                }\n            }\n\n            return result;\n\n        }, asHash ? {} : []);\n\n    };\n\n    /**\n     * @param {IContact} contact\n     * @returns {string}\n     */\n    ContactHelper.prototype.getFullName = function(contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getEmails = function(contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getPhones = function(contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getFaxes = function(contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getAddresses = function(contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @returns {boolean}\n     */\n    ContactHelper.prototype.isAlive = function(contact) {\n        return (contact.availability == 'Alive');\n    };\n\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     * @param {IContact} contact\n     * @param {string} string\n     * @param {IContactMatchOptions} [options]\n     * @returns {(string|null)}\n     */\n    ContactHelper.prototype.match = function(contact, string, options) {\n\n        options = Utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function(value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n\n        string = options.transformFn(string, options);\n\n        var found = null;\n\n        if (!string) return found;\n\n        function matchWith(value) {\n\n            // skip unnecessary cycles if match has been found\n            if (found) return;\n\n            var transformed = options.transformFn(value, options);\n\n            if (!transformed) return;\n\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n\n            if (match) found = value;\n\n        }\n\n        // Search in fields\n        options.fields.forEach(function(field) {\n            matchWith(contact[field]);\n        });\n\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found) this.addressFields.forEach(function(field) {\n\n            // skip unnecessary cycles if match has been found or no field value\n            if (!contact[field] || found) return;\n\n            this.addressSubFields.forEach(function(subField) {\n                matchWith(contact[field][subField]);\n            });\n\n        }, this);\n\n        return found;\n\n    };\n\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     * @param {IContact} contact\n     * @param {string} phone\n     * @param {IContactMatchOptions} [options]\n     * @returns {string|null}\n     */\n    ContactHelper.prototype.matchAsPhone = function(contact, phone, options) {\n\n        return this.match(contact, phone, Utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function(value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n\n    };\n\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     * @param {ICallerInfo[]} callerInfos\n     * @param {IContact[]} contacts\n     * @param {IContactMatchOptions} [options]\n     */\n    ContactHelper.prototype.attachToCallerInfos = function(callerInfos, contacts, options) {\n\n        var self = this,\n            callerInfoIndex = this.index(callerInfos, function(callerInfo) { return callerInfo.phoneNumber; }, true);\n\n        Utils.forEach(callerInfoIndex, function(indexedCallerInfos, phoneNumber) {\n\n            var foundContact = null,\n                foundPhone = null;\n\n            contacts.some(function(contact) {\n\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n\n                if (foundPhone) foundContact = contact;\n\n                return foundPhone;\n\n            });\n\n            if (foundContact) {\n\n                indexedCallerInfos.forEach(function(callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n\n            }\n\n        });\n\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ContactHelper.prototype.comparator = function(options) {\n\n        var self = this;\n\n        return List.comparator(Utils.extend({\n            extractFn: function(contact, options) {\n                return self.getFullName(contact);\n            }\n        }, options));\n\n    };\n\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     * @param {IContactOptions} [options]\n     * @returns {function(IContact)}\n     */\n    ContactHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n\n        return List.filter([\n            {condition: options.alive, filterFn: this.isAlive},\n            {condition: options.startsWith, filterFn: function(item, opts) { return self.match(item, opts.condition); }},\n            {condition: options.phonesOnly, filterFn: function(item, opts) { return (self.getPhones(item).length > 0); }},\n            {condition: options.faxesOnly, filterFn: function(item, opts) { return (self.getFaxes(item).length > 0); }}\n        ]);\n\n    };\n\n    /**\n     * @param {IContact} item\n     */\n    ContactHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'firstName', validator: Validator.required(item.firstName)},\n            {field: 'lastName', validator: Validator.required(item.lastName)},\n            {field: 'email', validator: Validator.email(item.email)},\n            {field: 'email2', validator: Validator.email(item.email2)},\n            {field: 'email3', validator: Validator.email(item.email3)}\n        ]);\n\n    };\n\n    ContactHelper.prototype.phoneFields = [\n        'homePhone',\n        'homePhone2',\n        'businessPhone',\n        'businessPhone2',\n        'mobilePhone',\n        'companyPhone',\n        'assistantPhone',\n        'carPhone',\n        'otherPhone',\n        'callbackPhone'\n    ];\n\n    ContactHelper.prototype.faxFields = [\n        'businessFax',\n        'otherFax'\n    ];\n\n    ContactHelper.prototype.addressFields = [\n        'homeAddress',\n        'businessAddress',\n        'otherAddress'\n    ];\n\n    ContactHelper.prototype.addressSubFields = [\n        'street',\n        'city',\n        'state',\n        'zip'\n    ];\n\n    ContactHelper.prototype.nameFields = [\n        'firstName',\n        'middleName',\n        'lastName',\n        'nickName'\n    ];\n\n    ContactHelper.prototype.otherFields = [\n        'company',\n        'jobTitle',\n        'webPage',\n        'notes'\n    ];\n\n    ContactHelper.prototype.emailFields = [\n        'email',\n        'email2',\n        'email3'\n    ];\n\n    module.exports = {\n        Class: ContactHelper,\n        /**\n         * @param {Context} context\n         * @returns {ContactHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ContactHelper', function() {\n                return new ContactHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IContactOptions\n     * @property {string} extensionId\n     * @property {string} groupId\n     */\n\n    /**\n     * @typedef {object} IContactFilterOptions\n     * @property {string} startsWith\n     * @property {boolean} alive\n     */\n\n    /**\n     * @typedef {object} IContactMatchOptions\n     * @property {function(object, IContactMatchOptions)} transformFn\n     * @property {boolean} strict - if false look for as sub string\n     * @property {boolean} inAddresses - look in addresses as well\n     * @property {string[]} fields - in which fields to look for\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactAddressInfo\n     * @typedef {Object} IContactAddress\n     * @property {string} country\n     * @property {string} street\n     * @property {string} city\n     * @property {string} state\n     * @property {string} zip\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ContactInfo\n     * @typedef {Object} IContactBrief\n     * @property {string} firstName\n     * @property {string} lastName\n     * @property {string} company\n     * @property {string} email\n     * @property {IContactAddress} businessAddress\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactInfo\n     * @typedef {Object} IContact\n     *\n     * Shared:\n     * @property {string} id\n     * @property {string} uri\n     *\n     * Names:\n     * @property {string} firstName\n     * @property {string} lastName\n     * @property {string} company\n     * @property {string} nickName\n     * @property {string} middleName\n     *\n     * Emails:\n     * @property {string} email\n     * @property {string} email2\n     * @property {string} email3\n     *\n     * Addresses:\n     * @property {IContactAddress} businessAddress\n     * @property {IContactAddress} homeAddress\n     * @property {IContactAddress} otherAddress\n     *\n     * Phones:\n     * @property {string} homePhone\n     * @property {string} homePhone2\n     * @property {string} businessPhone\n     * @property {string} businessPhone2\n     * @property {string} mobilePhone\n     * @property {string} companyPhone\n     * @property {string} assistantPhone\n     * @property {string} carPhone\n     * @property {string} otherPhone\n     * @property {string} callbackPhone\n     *\n     * @property {string} businessFax\n     * @property {string} otherFax\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class,\n        Validator = __webpack_require__(17);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ContactGroupHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ContactGroupHelper.prototype = Object.create(Helper.prototype);\n    ContactGroupHelper.prototype.createUrl = function(options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n\n    /**\n     * @param {IContactGroup} item\n     */\n    ContactGroupHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'groupName', validator: Validator.required(item && item.groupName)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: ContactGroupHelper,\n        /**\n         * @param {Context} context\n         * @returns {ContactGroupHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ContactGroupHelper', function() {\n                return new ContactGroupHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IContactGroup\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} notes\n     * @property {string} groupName\n     * @property {number} contactsCount\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class,\n        Validator = __webpack_require__(17);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function DeviceHelper(context) {\n        Helper.call(this, context);\n        this.extension = __webpack_require__(35).$get(context);\n        this.deviceModel = __webpack_require__(22).$get(context);\n    }\n\n    DeviceHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IDeviceOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    DeviceHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (options.order) return '/account/~/order';\n\n        return '/account/~' +\n               (options.extensionId ? '/extension/' + options.extensionId : '') +\n               '/device' +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IDevice} item\n     */\n    DeviceHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'emergencyServiceAddress-street', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)},\n            {field: 'emergencyServiceAddress-city', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)},\n            {field: 'emergencyServiceAddress-state', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)},\n            {field: 'emergencyServiceAddress-country', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)},\n            {field: 'emergencyServiceAddress-zip', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)},\n            {field: 'emergencyServiceAddress-customerName', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)},\n            {field: 'extension', validator: Validator.required(this.extension.getId(item && item.extension))},\n            {field: 'model', validator: Validator.required(this.deviceModel.getId(item && item.model))}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: DeviceHelper,\n        /**\n         * @param {Context} context\n         * @returns {DeviceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('DeviceHelper', function() {\n                return new DeviceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IDevice\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} type\n     * @property {string} name\n     * @property {string} serial\n     * @property {IDeviceModel} model\n     * @property {IExtensionShort} extension TODO IExtension?\n     * @property {IDeviceAddress} emergencyServiceAddress\n     * @property {IDeviceShipping} shipping\n     * @property {IDevicePhoneLine[]} phoneLines\n     */\n\n    /**\n     * @typedef {Object} IDeviceOrder\n     * @property {IDevice[]} devices\n     */\n\n    /**\n     * @typedef {Object} IDeviceAddress\n     * @property {string} street\n     * @property {string} street2\n     * @property {string} city\n     * @property {string} state\n     * @property {string} country\n     * @property {string} zip\n     * @property {string} customerName\n     */\n\n    /**\n     * @typedef {Object} IDeviceShipping\n     * @property {IDeviceAddress} address\n     * @property {IShippingMethod} method\n     * @property {string} status\n     */\n\n    /**\n     * @typedef {Object} IDevicePhoneLine\n     * @property {string} lineType\n     * @property {IPhoneNumber} phoneInfo\n     */\n\n    /**\n     * @typedef {Object} IDeviceOptions\n     * @property {string} extensionId\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class,\n        List = __webpack_require__(20),\n        Utils = __webpack_require__(19);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ExtensionHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ExtensionHelper.prototype = Object.create(Helper.prototype);\n\n    ExtensionHelper.prototype.type = {\n        department: 'Department',\n        user: 'User',\n        announcement: 'Announcement',\n        voicemail: 'Voicemail'\n    };\n\n    /**\n     *\n     * @param {IExtensionOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    ExtensionHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~' +\n               (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isUser = function(extension) {\n        return extension && extension.type == this.type.user;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isDepartment = function(extension) {\n        return extension && extension.type == this.type.department;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isAnnouncement = function(extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isVoicemail = function(extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ExtensionHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: List.numberComparator\n        }, options));\n\n    };\n\n    /**\n     * @param {IExtensionFilterOptions} [options]\n     * @returns {function(IExtension)}\n     */\n    ExtensionHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            search: '',\n            type: ''\n        }, options);\n\n        return List.filter([\n            {filterBy: 'type', condition: options.type},\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: List.containsFilter,\n                extractFn: function(item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                           (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: ExtensionHelper,\n        /**\n         * @param {Context} context\n         * @returns {ExtensionHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ExtensionHelper', function() {\n                return new ExtensionHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IExtensionOptions\n     * @property {string} departmentId\n     */\n\n    /**\n     * @typedef {object} IExtensionFilterOptions\n     * @property {string} search\n     * @property {string} type\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ShortExtensionInfo\n     * @typedef {object} IExtensionShort\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} extensionNumber\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ExtensionInfo\n     * @typedef {object} IExtension\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} extensionNumber\n     * @property {string} name\n     * @property {string} type\n     * @property {IContactBrief} contact\n     * @property {IExtensionRegionalSettings} regionalSettings\n     * @property {IServiceFeature[]} serviceFeatures\n     * @property {string} status\n     * @property {string} setupWizardState\n     */\n\n    /**\n     * @typedef {object} IExtensionRegionalSettings\n     * @property {ITimezone} timezone\n     * @property {ILanguage} language\n     * @property {ICountry} homeCountry\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class,\n        Utils = __webpack_require__(19),\n        List = __webpack_require__(20);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ForwardingNumberHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ForwardingNumberHelper.prototype = Object.create(Helper.prototype);\n\n\n    ForwardingNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n\n    };\n\n    ForwardingNumberHelper.prototype.getId = function(forwardingNumber) {\n        return forwardingNumber.id || (forwardingNumber.phoneNumber);\n    };\n\n    ForwardingNumberHelper.prototype.hasFeature = function(phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ForwardingNumberHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'label'\n        }, options));\n\n    };\n\n    /**\n     * @param options\n     * @returns {function(IForwardingNumber)}\n     */\n    ForwardingNumberHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            features: []\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.features.length, filterFn: function(item) {\n\n                return options.features.some(function(feature) {\n                    return self.hasFeature(item, feature);\n                });\n\n            }\n            }\n        ]);\n\n    };\n\n\n    module.exports = {\n        Class: ForwardingNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {ForwardingNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ForwardingNumberHelper', function() {\n                return new ForwardingNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     *\n     * @typedef {object} IForwardingNumber\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} label\n     * @property {string} phoneNumber\n     * @property {string} flipNumber\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class,\n        Validator = __webpack_require__(17),\n        Utils = __webpack_require__(19),\n        List = __webpack_require__(20);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function MessageHelper(context) {\n        Helper.call(this, context);\n        this.platform = __webpack_require__(11).$get(context);\n        this.contact = __webpack_require__(32).$get(context);\n    }\n\n    MessageHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     *\n     * @param {IMessageOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    MessageHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n\n        if (options.fax) return root + '/fax';\n        if (options.sms) return root + '/sms';\n        if (options.pager) return root + '/company-pager';\n        if (options.sync) return root + '/message-sync';\n\n        return root + '/message-store' + (id ? '/' + id : '');\n\n    };\n\n    MessageHelper.prototype.isInbound = function(message) {\n        return (message && message.direction == 'Inbound');\n    };\n\n    MessageHelper.prototype.isOutbound = function(message) {\n        return !this.isInbound(message);\n    };\n\n    MessageHelper.prototype.isSMS = function(message) {\n        return (message && message.type == 'SMS');\n    };\n\n    MessageHelper.prototype.isPager = function(message) {\n        return (message && message.type == 'Pager');\n    };\n\n    MessageHelper.prototype.isVoiceMail = function(message) {\n        return (message && message.type == 'VoiceMail');\n    };\n\n    MessageHelper.prototype.isFax = function(message) {\n        return (message && message.type == 'Fax');\n    };\n\n    MessageHelper.prototype.isAlive = function(message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n\n    MessageHelper.prototype.isRead = function(message) {\n        return (message.readStatus == 'Read');\n    };\n\n    MessageHelper.prototype.setIsRead = function(message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n\n    MessageHelper.prototype.getAttachmentUrl = function(message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {addMethod: 'GET', addServer: true, addToken: true}) : '';\n    };\n\n    MessageHelper.prototype.getAttachmentContentType = function(message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n\n    /**\n     * @returns {Subscription}\n     */\n    MessageHelper.prototype.getSubscription = function(options) {\n\n        return (__webpack_require__(13).$get(this.context)).setEvents([this.createUrl(options)]);\n\n    };\n\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     * @returns {ICallerInfo[]}\n     */\n    MessageHelper.prototype.getCallerInfos = function(message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     * @returns {ICallerInfo[]}\n     */\n    MessageHelper.prototype.getAllCallerInfos = function(message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n\n    /**\n     * TODO Compare as dates\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    MessageHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n\n    };\n\n    /**\n     * @param {IMessageFilterOptions} [options]\n     * @returns {function(IMessage)}\n     */\n    MessageHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n\n        return List.filter([\n            {condition: options.alive, filterFn: this.isAlive},\n            {filterBy: 'type', condition: options.type},\n            {filterBy: 'direction', condition: options.direction},\n            {filterBy: 'conversationId', condition: options.conversationId},\n            {filterBy: 'readStatus', condition: options.readStatus},\n            {filterBy: 'subject', condition: options.search, filterFn: List.containsFilter}\n        ]);\n\n    };\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     * @param {IContact[]} contacts\n     * @param {IMessage[]} messages\n     * @param {IContactMatchOptions} [options]\n     */\n    MessageHelper.prototype.attachContacts = function(contacts, messages, options) {\n\n        var self = this;\n\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function(callerInfos, message) {\n\n            return callerInfos.concat(self.getAllCallerInfos(message));\n\n        }, []);\n\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n\n    };\n\n    /**\n     *\n     * @param message\n     * @returns {IMessageShort}\n     */\n    MessageHelper.prototype.shorten = function(message) {\n\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n\n    };\n\n\n    /**\n     * @param {IMessage} item\n     */\n    MessageHelper.prototype.validateSMS = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(Utils.getProperty(item, 'to[0].phoneNumber'))},\n            {field: 'from', validator: Validator.required(Utils.getProperty(item, 'from.phoneNumber'))},\n            {field: 'subject', validator: Validator.required(Utils.getProperty(item, 'subject'))},\n            {field: 'subject', validator: Validator.length(Utils.getProperty(item, 'subject'), 160)}\n        ]);\n\n    };\n\n    /**\n     * @param {IMessage} item\n     */\n    MessageHelper.prototype.validatePager = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(Utils.getProperty(item, 'to.extensionNumber'))},\n            {field: 'from', validator: Validator.required(Utils.getProperty(item, 'from.extensionNumber'))},\n            {field: 'subject', validator: Validator.required(Utils.getProperty(item, 'subject'))},\n            {field: 'subject', validator: Validator.length(Utils.getProperty(item, 'subject'), 160)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: MessageHelper,\n        /**\n         * @param {Context} context\n         * @returns {MessageHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('MessageHelper', function() {\n                return new MessageHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IMessage\n     * @property {string} id\n     * @property {string} uri\n     * @property {ICallerInfo[]} to\n     * @property {ICallerInfo} from\n     * @property {string} type\n     * @property {string} creationTime\n     * @property {string} readStatus\n     * @property {string} priority\n     * @property {IMessageAttachment} attachments\n     * @property {string} direction\n     * @property {string} availability\n     * @property {string} subject\n     * @property {string} messageStatus\n     * @property {string} conversationId\n     * @property {string} lastModifiedTime\n     */\n\n    /**\n     * @typedef {object} IMessageShort\n     * @property {ICallerInfo[]} to\n     * @property {ICallerInfo} from\n     * @property {string} text\n     */\n\n    /**\n     * @typedef {object} IMessageOptions\n     * @property {boolean} fax\n     * @property {boolean} sync\n     * @property {boolean} sms\n     * @property {boolean} pager\n     * @property {string} extensionId\n     */\n\n    /**\n     * @typedef {object} IMessageFilterOptions\n     * @property {boolean} alive\n     * @property {string} conversationId\n     * @property {string} direction\n     * @property {string} readStatus\n     * @property {string} type\n     */\n\n    /**\n     * @typedef {object} IMessageFaxAttachment\n     * @property {string} contentType\n     * @property {string} content\n     * @property {string} fileName\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch18s01.html#MessageAttachmentInfo\n     * @typedef {Object} IMessageAttachment\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} contentType\n     * @property {string} vmDuration\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var List = __webpack_require__(20),\n        Utils = __webpack_require__(19),\n        Helper = __webpack_require__(15).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function PhoneNumberHelper(context) {\n        Helper.call(this, context);\n        this.extension = __webpack_require__(35).$get(context);\n    }\n\n    PhoneNumberHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IPhoneNumberOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    PhoneNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (options.lookup) return '/number-pool/lookup';\n\n        return '/account/~' +\n               (options.extensionId ? '/extension/' + options.extensionId : '') +\n               '/phone-number' +\n               (id ? '/' + id : '');\n\n    };\n\n    PhoneNumberHelper.prototype.isSMS = function(phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n\n    PhoneNumberHelper.prototype.hasFeature = function(phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n\n    PhoneNumberHelper.prototype.reserve = function(phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n\n    PhoneNumberHelper.prototype.unreserve = function(phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(IPhoneNumber, IPhoneNumber)}\n     */\n    PhoneNumberHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            /**\n             * @param {IPhoneNumber} item\n             * @returns {string}\n             */\n            extractFn: function(item) {\n                return item.usageType + '-' +\n                       item.paymentType + '-' +\n                       item.type;\n            }\n        }, options));\n\n    };\n\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     * @param {IPhoneNumberFilterOptions} options\n     * @returns {function(IForwardingNumber)}\n     */\n    PhoneNumberHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n\n        return List.filter([\n            {filterBy: 'usageType', condition: options.usageType},\n            {filterBy: 'paymentType', condition: options.paymentType},\n            {filterBy: 'type', condition: options.type},\n            {\n                condition: options.features.length, filterFn: function(item) {\n\n                return options.features.some(function(feature) {\n                    return self.hasFeature(item, feature);\n                });\n\n            }\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: PhoneNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {PhoneNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('PhoneNumberHelper', function() {\n                return new PhoneNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IPhoneNumber\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} phoneNumber\n     * @property {string} paymentType - External, TollFree, Local\n     * @property {string} location\n     * @property {string} type - VoiceFax, FaxOnly, VoiceOnly\n     * @property {string} usageType - CompanyNumber, DirectNumber, CompanyFaxNumber, ForwardedNumber\n     * @property {array} features - CallerId, SmsSender\n     * @property {string} reservedTill - Date\n     * @property {string} error\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberOptions\n     * @property {string} extensionId\n     * @property {true} lookup\n     * @property {string} countryId\n     * @property {string} paymentType\n     * @property {string} npa\n     * @property {string} nxx\n     * @property {string} line\n     * @property {string} exclude\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberFilterOptions\n     * @property {string} paymentType\n     * @property {string} usageType\n     * @property {string} type\n     * @property {string[]} features\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberOrder\n     * @property {IPhoneNumber[]} records\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class,\n        Utils = __webpack_require__(19);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function PresenceHelper(context) {\n        Helper.call(this, context);\n        this.extension = __webpack_require__(35).$get(context);\n    }\n\n    PresenceHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IPresenceOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    PresenceHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n\n    };\n\n    /**\n     * @param {IPresence} presence\n     * @returns {string}\n     */\n    PresenceHelper.prototype.getId = function(presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n\n    /**\n     * @param {IPresence} presence\n     * @returns {boolean}\n     */\n    PresenceHelper.prototype.isAvailable = function(presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n\n    /**\n     * @param {IPresenceOptions} [options]\n     * @param {string} [id]\n     * @returns {Subscription}\n     */\n    PresenceHelper.prototype.getSubscription = function(options, id) {\n\n        return __webpack_require__(13).$get(this.context).setEvents([this.createUrl(options, id)]);\n\n    };\n\n    /**\n     *\n     * @param {Subscription} subscription\n     * @param {IPresence[]} presences\n     * @param {IPresenceOptions} options\n     * @returns {*}\n     */\n    PresenceHelper.prototype.updateSubscription = function(subscription, presences, options) {\n\n        var events = presences.map(this.getId, this).map(function(id) {\n            return this.createUrl(options, id);\n        }, this);\n\n        subscription.addEvents(events);\n\n        return subscription;\n\n    };\n\n    /**\n     * @param {IExtension[]} extensions\n     * @param {IPresence[]} presences\n     * @param {bool} [merge]\n     * @returns {*}\n     */\n    PresenceHelper.prototype.attachToExtensions = function(extensions, presences, merge) {\n\n        var index = this.index(presences);\n\n        extensions.forEach(/** @param {IExtension} extension */ function(extension) {\n\n            var presence = index[this.extension.getId(extension)];\n\n            if (presence) {\n                if ('presence' in extension && merge) {\n                    Utils.extend(extension.presence, presence);\n                } else {\n                    extension.presence = presence;\n                }\n            }\n\n        }, this);\n\n    };\n\n    /**\n     * @param {IPresenceCall} presenceCall\n     * @returns {boolean}\n     */\n    PresenceHelper.prototype.isCallInProgress = function(presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n\n    module.exports = {\n        Class: PresenceHelper,\n        /**\n         * @param {Context} context\n         * @returns {PresenceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('PresenceHelper', function() {\n                return new PresenceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IPresence\n     * @property {IExtension} extension\n     * @property {IPresenceCall[]} activeCalls\n     * @property {string} presenceStatus - Offline, Busy, Available\n     * @property {string} telephonyStatus - NoCall, CallConnected, Ringing, OnHold\n     * @property {string} userStatus - Offline, Busy, Available\n     * @property {string} dndStatus - TakeAllCalls, DoNotAcceptAnyCalls, DoNotAcceptDepartmentCalls, TakeDepartmentCallsOnly\n     * @property {boolean} allowSeeMyPresence\n     * @property {boolean} ringOnMonitoredCall\n     * @property {boolean} pickUpCallsOnHold\n     * @property {number} extensionId\n     * @property {number} sequence\n     */\n\n    /**\n     * @typedef {Object} IPresenceCall\n     * @property {string} direction\n     * @property {string} from\n     * @property {string} to\n     * @property {string} sessionId\n     * @property {string} id\n     * @property {string} telephonyStatus\n     */\n\n    /**\n     * @typedef {Object} IPresenceOptions\n     * @property {boolean} detailed\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class,\n        Validator = __webpack_require__(17);\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function RingoutHelper(context) {\n        Helper.call(this, context);\n        this.extension = __webpack_require__(35).$get(context);\n    }\n\n    RingoutHelper.prototype = Object.create(Helper.prototype);\n\n    RingoutHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n\n    };\n\n    RingoutHelper.prototype.resetAsNew = function(object) {\n        object = Helper.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n\n    RingoutHelper.prototype.isInProgress = function(ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n\n    RingoutHelper.prototype.isSuccess = function(ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n\n    RingoutHelper.prototype.isError = function(ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n\n    /**\n     * @param {IRingout} item\n     */\n    RingoutHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(item && item.to && item.to.phoneNumber)},\n            {field: 'from', validator: Validator.required(item && item.from && item.from.phoneNumber)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: RingoutHelper,\n        /**\n         * @param {Context} context\n         * @returns {RingoutHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('RingoutHelper', function() {\n                return new RingoutHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IRingout\n     * @property {ICallerInfo} [from] (!) ONLY PHONE NUMBER\n     * @property {ICallerInfo} [to] (!) ONLY PHONE NUMBER\n     * @property {ICallerInfo} [callerId] (!) ONLY PHONE NUMBER\n     * @property {boolean} [playPrompt]\n     * @property {{callStatus:boolean, callerStatus:boolean, calleeStatus:boolean}} [status]\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = __webpack_require__(15).Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ServiceHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ServiceHelper.prototype = Object.create(Helper.prototype);\n\n    ServiceHelper.prototype.createUrl = function() {\n        return '/account/~/service-info';\n    };\n\n    /**\n     * @param {string} feature\n     * @param {IServiceFeature[]} serviceFeatures\n     * @returns {*}\n     */\n    ServiceHelper.prototype.isEnabled = function(feature, serviceFeatures) {\n\n        return serviceFeatures.reduce(function(value, f) {\n\n            if (f.featureName == feature) value = f.enabled;\n            return value;\n\n        }, false);\n\n    };\n\n    function isServiceFeatureEnabledMethod(feature) {\n        return function(serviceFeatures) {\n            return this.isEnabled(feature, serviceFeatures);\n        };\n    }\n\n    ServiceHelper.prototype.isSmsEnabled = isServiceFeatureEnabledMethod('SMS');\n    ServiceHelper.prototype.isSmsReceivingEnabled = isServiceFeatureEnabledMethod('SMSReceiving');\n    ServiceHelper.prototype.isPresenceEnabled = isServiceFeatureEnabledMethod('Presence');\n    ServiceHelper.prototype.isRingOutEnabled = isServiceFeatureEnabledMethod('RingOut');\n    ServiceHelper.prototype.isInternationalCallingEnabled = isServiceFeatureEnabledMethod('InternationalCalling');\n    ServiceHelper.prototype.isDndEnabled = isServiceFeatureEnabledMethod('DND');\n    ServiceHelper.prototype.isFaxEnabled = isServiceFeatureEnabledMethod('Fax');\n    ServiceHelper.prototype.isFaxReceivingEnabled = isServiceFeatureEnabledMethod('FaxReceiving');\n    ServiceHelper.prototype.isVoicemailEnabled = isServiceFeatureEnabledMethod('Voicemail');\n    ServiceHelper.prototype.isPagerEnabled = isServiceFeatureEnabledMethod('Pager');\n    ServiceHelper.prototype.isPagerReceivingEnabled = isServiceFeatureEnabledMethod('PagerReceiving');\n    ServiceHelper.prototype.isVoipCallingEnabled = isServiceFeatureEnabledMethod('VoipCalling');\n    ServiceHelper.prototype.isVideoConferencingEnabled = isServiceFeatureEnabledMethod('VideoConferencing');\n    ServiceHelper.prototype.isSalesForceEnabled = isServiceFeatureEnabledMethod('SalesForce');\n    ServiceHelper.prototype.isIntercomEnabled = isServiceFeatureEnabledMethod('Intercom');\n    ServiceHelper.prototype.isPagingEnabled = isServiceFeatureEnabledMethod('Paging');\n    ServiceHelper.prototype.isConferencingEnabled = isServiceFeatureEnabledMethod('Conferencing');\n    ServiceHelper.prototype.isFreeSoftPhoneLinesEnabled = isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n    ServiceHelper.prototype.isHipaaComplianceEnabled = isServiceFeatureEnabledMethod('HipaaCompliance');\n    ServiceHelper.prototype.isCallParkEnabled = isServiceFeatureEnabledMethod('CallPark');\n    ServiceHelper.prototype.isOnDemandCallRecordingEnabled = isServiceFeatureEnabledMethod('OnDemandCallRecording');\n\n    module.exports = {\n        Class: ServiceHelper,\n        /**\n         * @param {Context} context\n         * @returns {ServiceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('serviceHelper', function() {\n                return new ServiceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IServiceFeature\n     * @property {string} featureName\n     * @property {boolean} enabled\n     */\n\n    /**\n     * @typedef {object} IService\n     * @property {IServiceFeature[]} serviceFeatures\n     * @property {string} servicePlanName\n     */\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    function PubnubMock(options) {}\n\n    PubnubMock.prototype.ready = function() {};\n\n    PubnubMock.prototype.unsubscribe = function(options) {};\n\n    PubnubMock.prototype.subscribe = function(options) {\n        this.onMessage = options.message;\n    };\n\n    PubnubMock.prototype.receiveMessage = function(msg) {\n        this.onMessage(msg, 'env', 'channel');\n    };\n\n    /**\n     * @alias RCSDK.core.pubnub.Mock\n     * @type {PUBNUB}\n     */\n    module.exports = {\n        /**\n         * @param {Context} context\n         * @returns {PUBNUB}\n         */\n        $get: function(context) {\n\n            return {\n                init: function(options) {\n                    return new PubnubMock(options);\n                }\n            };\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n * istanbul ignore next\n */\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Log = __webpack_require__(18),\n        Utils = __webpack_require__(19);\n\n    /**\n     * @constructor\n     * @alias RCSDK.core.ajax.XhrMock\n     * @extends XMLHttpRequest\n     */\n    function XhrMock(context) {\n        // Service\n        this.responses = __webpack_require__(10).$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n        this.context = context;\n    }\n\n    XhrMock.prototype.getResponseHeader = function(header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n\n    XhrMock.prototype.setRequestHeader = function(header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n\n    XhrMock.prototype.getAllResponseHeaders = function() {\n        var res = [];\n        Utils.forEach(this.responseHeaders, function(value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n\n    XhrMock.prototype.open = function(method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n\n    XhrMock.prototype.send = function(data) {\n\n        var contentType = this.getRequestHeader('Content-Type');\n\n        this.data = data;\n\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json') this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded') this.data = Utils.parseQueryString(this.data);\n        }\n\n        Log.debug('API REQUEST', this.method, this.url);\n\n        var currentResponse = this.responses.find(this);\n\n        if (!currentResponse) {\n            setTimeout(function() {\n                if (this.onerror) this.onerror(new Error('Unknown request: ' + this.url));\n            }.bind(this), 1);\n            return;\n        }\n\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n\n        var res = currentResponse.response(this),\n            Promise = this.context.getPromise(),\n            onLoad = function(res) {\n\n                if (this.getResponseHeader('Content-Type') == 'application/json') res = JSON.stringify(res);\n\n                this.responseText = res;\n\n                setTimeout(function() {\n                    if (this.onload) this.onload();\n                }.bind(this), 1);\n\n            }.bind(this);\n\n        if (res instanceof Promise) {\n\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n\n        } else onLoad(res);\n\n    };\n\n    XhrMock.prototype.abort = function() {\n        Log.debug('XhrMock.destroy(): Aborted');\n    };\n\n    XhrMock.prototype.getRequestHeader = function(header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n\n    XhrMock.prototype.setResponseHeader = function(header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n\n    XhrMock.prototype.setStatus = function(status) {\n        this.status = status;\n        return this;\n    };\n\n    module.exports = {\n        Class: XhrMock,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {XhrMock}\n         */\n        $get: function(context) {\n\n            return new XhrMock(context);\n\n        }\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = __webpack_require__(19);\n\n    /**\n     * @constructor\n     * @alias RCSDK.core.Headers\n     */\n    function Headers() {\n        /** @private */\n        this.headers = {};\n    }\n\n    Object.defineProperty(Headers.prototype, 'constructor', {value: Headers, enumerable: false});\n\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n\n    /**\n     * @param {string} name\n     * @param {string} value\n     * @returns {Headers}\n     */\n    Headers.prototype.setHeader = function(name, value) {\n\n        this.headers[name.toLowerCase()] = value;\n\n        return this;\n\n    };\n\n    /**\n     * @param {string} name\n     * @returns {string}\n     */\n    Headers.prototype.getHeader = function(name) {\n\n        return this.headers[name.toLowerCase()];\n\n    };\n\n    /**\n     * @param {string} name\n     * @returns {boolean}\n     */\n    Headers.prototype.hasHeader = function(name) {\n\n        return (name.toLowerCase() in this.headers);\n\n    };\n\n    /**\n     * @param {object} headers\n     * @returns {Headers}\n     */\n    Headers.prototype.setHeaders = function(headers) {\n\n        Utils.forEach(headers, function(value, name) {\n            this.setHeader(name, value);\n        }.bind(this));\n\n        return this;\n\n    };\n\n    /**\n     * @param {string} type\n     * @returns {boolean}\n     */\n    Headers.prototype.isContentType = function(type) {\n        return this.getContentType().indexOf(type) > -1;\n    };\n\n    /**\n     * @returns {string}\n     */\n    Headers.prototype.getContentType = function() {\n        return this.getHeader(Headers.contentType) || '';\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Headers.prototype.isMultipart = function() {\n        return this.isContentType(Headers.multipartContentType);\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Headers.prototype.isUrlEncoded = function() {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Headers.prototype.isJson = function() {\n        return this.isContentType(Headers.jsonContentType);\n    };\n\n    module.exports = {\n        Class: Headers\n    };\n\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=rc-sdk.js.map"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 28ec8665cf7b4091a010\n **/","/**\n * Browser-compatible version\n */\ndefine(function(require, exports, module) {\n\n    'use strict';\n\n    var promise = require('es6-promise');\n\n    module.exports = require('./RCSDK')({\n        CryptoJS: require('crypto-js'),\n        localStorage: window.localStorage,\n        Promise: (promise && 'Promise' in promise) ? promise.Promise : window.Promise,\n        PUBNUB: require('pubnub'),\n        XHR: window.XMLHttpRequest\n    });\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/browser.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"crypto-js\",\"commonjs\":\"crypto-js\",\"commonjs2\":\"crypto-js\",\"root\":\"CryptoJS\"}\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}\n ** module id = 4\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * @param {IInjections} injections\n     * @returns {RCSDK}\n     */\n    module.exports = function(injections) {\n\n        /**\n         * @name RCSDK\n         * @param {IOptions} [options]\n         * @constructor\n         */\n        function RCSDK(options) {\n\n            options = options || {};\n\n            /** @private */\n            this._context = require('./core/Context').$get(injections);\n\n            this.getCache()\n                .setPrefix(options.cachePrefix || '');\n\n            this.getPlatform()\n                .setServer(options.server)\n                .setCredentials(options.appKey, options.appSecret);\n\n            //TODO Link Platform events with Subscriptions and the rest\n\n        }\n\n        RCSDK.version = '1.2.1';\n\n        // Internals\n\n        /** @returns {Context} */\n        RCSDK.prototype.getContext = function() { return this._context; };\n\n        // Core\n\n        /**\n         * This is for internal use only\n         * @protected\n         * @returns {Request}\n         */\n        RCSDK.prototype.getRequest = function() { return require('./core/http/Request').$get(this.getContext()); };\n\n        /**\n         * This is for internal use only\n         * @protected\n         * @returns {Response}\n         */\n        RCSDK.prototype.getResponse = function(status, statusText, body, headers) {\n            return require('./core/http/Response').$get(this.getContext(), status, statusText, body, headers);\n        };\n\n        /**\n         * @returns {AjaxObserver}\n         */\n        RCSDK.prototype.getAjaxObserver = function() { return require('./core/AjaxObserver').$get(this.getContext()); };\n\n        /**\n         * This is for internal use only\n         * @protected\n         * @returns {XhrResponse}\n         */\n        RCSDK.prototype.getXhrResponse = function() { return require('./core/xhr/XhrResponse').$get(this.getContext()); };\n\n        /**\n         * @returns {Platform}\n         */\n        RCSDK.prototype.getPlatform = function() { return require('./core/Platform').$get(this.getContext()); };\n\n        /**\n         * @returns {Cache}\n         */\n        RCSDK.prototype.getCache = function() { return require('./core/Cache').$get(this.getContext()); };\n\n        /**\n         * @returns {Subscription}\n         */\n        RCSDK.prototype.getSubscription = function() { return require('./core/Subscription').$get(this.getContext()); };\n\n        /**\n         * @returns {PageVisibility}\n         */\n        RCSDK.prototype.getPageVisibility = function() { return require('./core/PageVisibility').$get(this.getContext()); };\n\n        /**\n         * @returns {Helper}\n         */\n        RCSDK.prototype.getHelper = function() { return require('./core/Helper').$get(this.getContext()); };\n\n        /**\n         * @returns {Observable}\n         */\n        RCSDK.prototype.getObservable = function() { return require('./core/Observable').$get(this.getContext()); };\n\n        /**\n         * @returns {Validator}\n         */\n        RCSDK.prototype.getValidator = function() { return require('./core/Validator').$get(this.getContext()); };\n\n        /**\n         * @returns {Log}\n         */\n        RCSDK.prototype.getLog = function() { return require('./core/Log').$get(this.getContext()); };\n\n        /**\n         * @returns {Utils}\n         */\n        RCSDK.prototype.getUtils = function() { return require('./core/Utils').$get(this.getContext()); };\n\n        /**\n         * @returns {List}\n         */\n        RCSDK.prototype.getList = function() { return require('./core/List').$get(this.getContext()); };\n\n        // Helpers\n\n        /**\n         * @returns {CountryHelper}\n         */\n        RCSDK.prototype.getCountryHelper = function() { return require('./helpers/Country').$get(this.getContext()); };\n\n        /**\n         * @returns {DeviceModelHelper}\n         */\n        RCSDK.prototype.getDeviceModelHelper = function() { return require('./helpers/DeviceModel').$get(this.getContext()); };\n\n        /**\n         * @returns {LanguageHelper}\n         */\n        RCSDK.prototype.getLanguageHelper = function() { return require('./helpers/Language').$get(this.getContext()); };\n\n        /**\n         * @returns {LocationHelper}\n         */\n        RCSDK.prototype.getLocationHelper = function() { return require('./helpers/Location').$get(this.getContext()); };\n\n        /**\n         * @returns {ShippingMethodHelper}\n         */\n        RCSDK.prototype.getShippingMethodHelper = function() { return require('./helpers/ShippingMethod').$get(this.getContext()); };\n\n        /**\n         * @returns {StateHelper}\n         */\n        RCSDK.prototype.getStateHelper = function() { return require('./helpers/State').$get(this.getContext()); };\n\n        /**\n         * @returns {TimezoneHelper}\n         */\n        RCSDK.prototype.getTimezoneHelper = function() { return require('./helpers/Timezone').$get(this.getContext()); };\n\n        /**\n         * @returns {AccountHelper}\n         */\n        RCSDK.prototype.getAccountHelper = function() { return require('./helpers/Account').$get(this.getContext()); };\n\n        /**\n         * @returns {BlockedNumberHelper}\n         */\n        RCSDK.prototype.getBlockedNumberHelper = function() { return require('./helpers/BlockedNumber').$get(this.getContext()); };\n\n        /**\n         * @returns {CallHelper}\n         */\n        RCSDK.prototype.getCallHelper = function() { return require('./helpers/Call').$get(this.getContext()); };\n\n        /**\n         * @returns {ConferencingHelper}\n         */\n        RCSDK.prototype.getConferencingHelper = function() { return require('./helpers/Conferencing').$get(this.getContext()); };\n\n        /**\n         * @returns {ContactHelper}\n         */\n        RCSDK.prototype.getContactHelper = function() { return require('./helpers/Contact').$get(this.getContext()); };\n\n        /**\n         * @returns {ContactGroupHelper}\n         */\n        RCSDK.prototype.getContactGroupHelper = function() { return require('./helpers/ContactGroup').$get(this.getContext()); };\n\n        /**\n         * @returns {DeviceHelper}\n         */\n        RCSDK.prototype.getDeviceHelper = function() { return require('./helpers/Device').$get(this.getContext()); };\n\n        /**\n         * @returns {ExtensionHelper}\n         */\n        RCSDK.prototype.getExtensionHelper = function() { return require('./helpers/Extension').$get(this.getContext()); };\n\n        /**\n         * @returns {ForwardingNumberHelper}\n         */\n        RCSDK.prototype.getForwardingNumberHelper = function() { return require('./helpers/ForwardingNumber').$get(this.getContext()); };\n\n        /**\n         * @returns {MessageHelper}\n         */\n        RCSDK.prototype.getMessageHelper = function() { return require('./helpers/Message').$get(this.getContext()); };\n\n        /**\n         * @returns {PhoneNumberHelper}\n         */\n        RCSDK.prototype.getPhoneNumberHelper = function() { return require('./helpers/PhoneNumber').$get(this.getContext()); };\n\n        /**\n         * @returns {PresenceHelper}\n         */\n        RCSDK.prototype.getPresenceHelper = function() { return require('./helpers/Presence').$get(this.getContext()); };\n\n        /**\n         * @returns {RingoutHelper}\n         */\n        RCSDK.prototype.getRingoutHelper = function() { return require('./helpers/Ringout').$get(this.getContext()); };\n\n        /**\n         * @returns {ServiceHelper}\n         */\n        RCSDK.prototype.getServiceHelper = function() { return require('./helpers/Service').$get(this.getContext()); };\n\n        if (!injections\n            || !('CryptoJS' in injections)\n            || !('localStorage' in injections)\n            || !('Promise' in injections)\n            || !('PUBNUB' in injections)\n            || !('XHR' in injections)) throw new Error('Injections object is not complete');\n\n        injections.XHR = (injections.XHR || function() {\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\"); } catch (e1) {}\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\"); } catch (e2) {}\n            try { return new ActiveXObject(\"Msxml2.XMLHTTP\"); } catch (e3) {}\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        });\n\n        return RCSDK;\n\n    };\n\n    /**\n     * @typedef {Object} IInjections\n     * @property {PUBNUB} PUBNUB\n     * @property {CryptoJS} CryptoJS\n     * @property {Storage} localStorage\n     * @property {XMLHttpRequest} XHR\n     * @property {Promise} Promise\n     */\n\n    /**\n     * @typedef {Object} IOptions\n     * @property {string} server\n     * @property {string} appKey\n     * @property {string} appSecret\n     * @property {string} [cachePrefix]\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/RCSDK.js\n ** module id = 5\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * @constructor\n     * @param {IInjections} injections\n     */\n    function Context(injections) {\n        /** @private */\n        this.singletons = {};\n        /** @type {IInjections} */\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n\n    /**\n     * @param {string} name\n     * @param {function} factory\n     * @returns {*}\n     */\n    Context.prototype.createSingleton = function(name, factory) {\n\n        if (!this.singletons[name]) this.singletons[name] = factory();\n        return this.singletons[name];\n\n    };\n\n    Context.prototype.usePubnubStub = function(flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n\n    Context.prototype.useAjaxStub = function(flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n\n    /**\n     * @returns {CryptoJS}\n     */\n    Context.prototype.getCryptoJS = function() {\n        return this.injections.CryptoJS;\n    };\n\n    /**\n     * @returns {PUBNUB}\n     */\n    Context.prototype.getPubnub = function() {\n        return this.stubPubnub ? require('./pubnub/PubnubMock').$get(this) : this.injections.PUBNUB;\n    };\n\n    /**\n     * @returns {Storage}\n     * @abstract\n     */\n    Context.prototype.getLocalStorage = function() {\n        return this.createSingleton('localStorage', function() {\n            return (typeof this.injections.localStorage == 'function')\n                ? new this.injections.localStorage() // this is NPM dom-storage constructor\n                : this.injections.localStorage; // this is window.localStorage\n        }.bind(this));\n    };\n\n    /**\n     * @returns {function(new:Promise)}\n     */\n    Context.prototype.getPromise = function() {\n        return this.injections.Promise;\n    };\n\n    /**\n     * @returns {XMLHttpRequest}\n     */\n    Context.prototype.getXHR = function() {\n        return this.stubAjax ? require('./xhr/XhrMock').$get(this) : new this.injections.XHR();\n    };\n\n    module.exports = {\n        Class: Context,\n        /**\n         * @param {IInjections} injections\n         */\n        $get: function(injections) {\n            return new Context(injections);\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Context.js\n ** module id = 6\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Headers = require('./Headers').Class,\n        Response = require('./Response'),\n        Utils = require('../Utils'),\n        Log = require('../Log');\n\n    /**\n     * @typedef {Object} IAjaxOptions\n     * @property {string} url\n     * @property {string} method?\n     * @property {boolean} async?\n     * @property {Object} body?\n     * @property {Object} query?\n     * @property {Object} headers?\n     * @property {Object} post? // @deprecated\n     * @property {Object} get? // @deprecated\n     */\n\n    /**\n     * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Request\n     * @param {Context} [context]\n     */\n    function Request(context) {\n        Headers.call(this);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        /** @type {XMLHttpRequest} */\n        this.xhr = null;\n        /** @type {AjaxObserver} */\n        this.observer = require('../AjaxObserver').$get(context);\n    }\n\n    Request.prototype = Object.create(Headers.prototype);\n    Object.defineProperty(Request.prototype, 'constructor', {value: Request, enumerable: false});\n\n    /**\n     * @returns {boolean}\n     */\n    Request.prototype.isLoaded = function() {\n        return !!this.xhr;\n    };\n\n    /**\n     * @param {IAjaxOptions} [options]\n     * @returns {Request}\n     */\n    Request.prototype.setOptions = function(options) {\n\n        options = options || {};\n\n        // backwards compatibility\n        if (!('body' in options) && options.post) options.body = options.post;\n        if (!('query' in options) && options.get) options.query = options.get;\n\n        if ('method' in options) this.method = options.method;\n        if ('url' in options) this.url = options.url;\n        if ('query' in options) this.query = options.query;\n        if ('body' in options) this.body = options.body;\n        if ('headers' in options) this.setHeaders(options.headers);\n        if ('async' in options) this.async = !!options.async;\n\n        return this;\n\n    };\n\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     * @returns {Request}\n     */\n    Request.prototype.checkOptions = function() {\n\n        if (!this.url) throw new Error('Url is not defined');\n\n        if (!this.hasHeader('Accept')) this.setHeader('Accept', Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type')) this.setHeader('Content-Type', Headers.jsonContentType);\n\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0) throw new Error('Method has wrong value');\n\n        return this;\n\n    };\n\n    Request.prototype.getEncodedBody = function() {\n\n        if (this.method === 'GET') return null;\n\n        if (typeof this.body === 'string') {\n            return this.body;\n        } else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        } else if (this.isUrlEncoded()) {\n            return Utils.queryStringify(this.body);\n        } else {\n            return this.body;\n        }\n\n    };\n\n    /**\n     * @returns {Promise}\n     */\n    Request.prototype.send = function() {\n\n        this.observer.emit(this.observer.events.beforeRequest, this);\n\n        var responsePromise = new (this.context.getPromise())(function(resolve, reject) {\n\n            this.checkOptions();\n\n            var xhr = this.getXHR(),\n                url = this.url + (!!this.query ? ((this.url.indexOf('?') > -1 ? '&' : '?') + Utils.queryStringify(this.query)) : '');\n\n            xhr.open(this.method, url, this.async);\n\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n\n            xhr.onload = function() {\n\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = Response\n                    .$get(this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = this;\n                    reject(e);\n                } else {\n                    resolve(response);\n                }\n\n            }.bind(this);\n\n            xhr.onerror = function(event) { // CORS or network issue\n                var e = new Error('The request cannot be sent');\n                e.request = this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            }.bind(this);\n\n            Utils.forEach(this.headers, function(value, header) {\n                if (!!value) xhr.setRequestHeader(header, value);\n            });\n\n            xhr.send(this.getEncodedBody());\n\n            this.xhr = xhr;\n\n        }.bind(this));\n\n        return responsePromise\n            .then(function(response) {\n\n                this.observer.emit(this.observer.events.requestSuccess, response, this);\n\n                return response;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.observer.emit(this.observer.events.requestError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @returns {XMLHttpRequest}\n     */\n    Request.prototype.getXHR = function() {\n        return this.context.getXHR();\n    };\n\n    Request.prototype.destroy = function() {\n        if (this.xhr) this.xhr.abort();\n    };\n\n    module.exports = {\n        Class: Request,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {Request}\n         */\n        $get: function(context) {\n            return new Request(context);\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/http/Request.js\n ** module id = 7\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Headers = require('./Headers').Class,\n        Utils = require('../Utils'),\n        Log = require('../Log'),\n        boundarySeparator = '--',\n        headerSeparator = ':',\n        bodySeparator = '\\n\\n';\n\n    /**\n     * @typedef {Object} IResponseOptions\n     * @property {string} url\n     * @property {string} method?\n     * @property {boolean} async?\n     * @property {Object} post?\n     * @property {Object} get?\n     * @property {Object} headers?\n     */\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Response\n     * @param {Context} [context]\n     * @param {number} [status]\n     * @param {string} [statusText]\n     * @param {string} [body]\n     * @param {object|string} [headers]\n     */\n    function Response(context, status, statusText, body, headers) {\n\n        Headers.call(this);\n\n        if (typeof(body) === 'string') {\n\n            body = body.replace(/\\r/g, '');\n\n            if (!headers) {\n\n                var tmp = body.split(bodySeparator);\n\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(bodySeparator);\n\n            }\n\n        }\n\n        /** @type {Response[]|object} */\n        this.data = null;\n\n        /** @type {object} */\n        this.json = null;\n\n        /** @type {Response[]} */\n        this.responses = [];\n\n        /** @type {Error} */\n        this.error = null;\n\n        if (status == 1223) status = 204; //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n\n        this.context = context;\n\n        try {\n\n            // Step 1. Parse headers\n\n            if (typeof(headers) === 'string') {\n\n                (headers || '')\n                    .split('\\n')\n                    .forEach(/** @param {string} header */ function(header) {\n\n                        if (!header) return;\n\n                        /** @type {string[]} */\n                        var parts = header.split(headerSeparator),\n                            name = parts.shift().trim();\n\n                        this.setHeader(name, parts.join(headerSeparator).trim());\n\n                    }, this);\n\n            } else {\n\n                this.setHeaders(headers);\n\n            }\n\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n\n            if (!this.hasHeader(Headers.contentType)) this.setHeader(Headers.contentType, Headers.jsonContentType);\n\n            // Step 2. Parse body\n\n            if (this.isJson() && !!this.body && typeof(this.body) === 'string') { // Handle 204 No Content -- response may be empty\n\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n\n                if (!this.checkStatus()) this.error = new Error(this.getError());\n\n            } else if (this.isMultipart()) { // Handle 207 Multi-Status\n\n                // Step 2.1. Split multipart response\n\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1],\n                    parts = this.body.split(boundarySeparator + boundary);\n\n                if (parts[0].trim() === '') parts.shift();\n                if (parts[parts.length - 1].trim() == boundarySeparator) parts.pop();\n\n                // Step 2.2. Parse status info\n\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n\n                // Step 2.3. Parse all other parts\n\n                this.responses = parts.map(function(part, i) {\n\n                    var status = statusInfo.data.response[i].status;\n\n                    return new Response(this.context, status, '', part);\n\n                }, this);\n\n                this.data = this.responses; // backwards compatibility\n\n            } else { //TODO Add more parsers\n\n                this.data = this.body;\n\n            }\n\n        } catch (e) { // Capture parse errors\n\n            Log.error('Response.parseResponse(): Unable to parse data');\n            Log.error(e.stack || e);\n            Log.error(this.body);\n\n            this.error = e;\n\n        }\n\n    }\n\n    Response.prototype = Object.create(Headers.prototype);\n    Object.defineProperty(Response.prototype, 'constructor', {value: Response, enumerable: false});\n\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function() {\n        return (this.status == 401);\n    };\n\n    Response.prototype.checkStatus = function() {\n        return this.status >= 200 && this.status < 300;\n    };\n\n    Response.prototype.getError = function() {\n        return this.data.message ||\n               this.data.error_description ||\n               this.data.description ||\n               'Unknown error';\n    };\n\n    module.exports = {\n        Class: Response,\n        /**\n         * @static\n         * @param {Context} [context]\n         * @param {number} [status]\n         * @param {string} [statusText]\n         * @param {string} [body]\n         * @param {object|string} [headers]\n         * @returns {Response}\n         */\n        $get: function(context, status, statusText, body, headers) {\n            return new Response(context, status, statusText, body, headers);\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/http/Response.js\n ** module id = 8\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = require('./Observable').Class;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.AjaxObserver\n     */\n    function AjaxObserver() {\n\n        Observable.call(this);\n\n    }\n\n    AjaxObserver.prototype = Object.create(Observable.prototype);\n\n    AjaxObserver.prototype.events = {\n        beforeRequest: 'beforeRequest', // parameters: ajax\n        requestSuccess: 'requestSuccess', // means that response was successfully fetched from server\n        requestError: 'requestError' // means that request failed completely\n    };\n\n    module.exports = {\n        Class: AjaxObserver,\n        /**\n         * @param {Context} context\n         * @returns {AjaxObserver}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('AjaxObserver', function() {\n                return new AjaxObserver();\n            });\n\n        }\n    };\n\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/AjaxObserver.js\n ** module id = 9\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * Ajax Response Manager\n     * @constructor\n     * @alias RCSDK.core.XhrResponse\n     */\n    function XhrResponse() {\n        /** @type {IXhrResponse[]} */\n        this.responses = [];\n    }\n\n    /**\n     * @param {IXhrResponse} response\n     */\n    XhrResponse.prototype.add = function(response) {\n        this.responses.push(response);\n    };\n\n    XhrResponse.prototype.clear = function() {\n        this.responses = [];\n    };\n\n    /**\n     * @param {XhrMock} ajax\n     * @returns {IXhrResponse}\n     */\n    XhrResponse.prototype.find = function(ajax) {\n\n        var currentResponse = null;\n\n        this.responses.forEach(function(response) {\n\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n\n        });\n\n        return currentResponse;\n\n    };\n\n    module.exports = {\n        Class: XhrResponse,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {XhrResponse}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('XhrResponse', function() {\n                return new XhrResponse(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IXhrResponse\n     * @property {string} path\n     * @property {function(Ajax)} response Response mock function\n     * @property {function(Ajax)} test? This will be executed to determine, whether this mock is applicable\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/xhr/XhrResponse.js\n ** module id = 10\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('./Utils'),\n        Observable = require('./Observable').Class,\n        Log = require('./Log'),\n        forcedTokenType = 'forced';\n\n    /**\n     * @typedef {Object} PlatformAuthInfo\n     * @property {string} token_type\n     * @property {string} access_token\n     * @property {string} expires_in\n     * @property {int} expireTime\n     * @property {string} refresh_token\n     * @property {string} refresh_token_expires_in\n     * @property {int} refreshExpireTime\n     * @property {string} scope\n     */\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Platform\n     * @param {Context} context\n     */\n    function Platform(context) {\n        Observable.call(this);\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        /** @type {Promise} */\n        this.refreshPromise = null;\n        this.context = context;\n    }\n\n    Platform.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Platform.prototype, 'constructor', {value: Platform, enumerable: false});\n\n    Platform.prototype.cacheId = 'platform';\n\n    Platform.prototype.pollInterval = 250;\n\n    Platform.prototype.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n\n    Platform.prototype.events = {\n        accessViolation: 'accessViolation',\n        logoutSuccess: 'logoutSuccess',\n        logoutError: 'logoutError',\n        authorizeSuccess: 'authorizeSuccess',\n        authorizeError: 'authorizeError',\n        refreshSuccess: 'refreshSuccess',\n        refreshError: 'refreshError'\n    };\n\n    /**\n     * @returns {Cache}\n     */\n    Platform.prototype.getStorage = function() {\n\n        return require('./Cache').$get(this.context);\n\n    };\n\n    /**\n     * @returns {Request}\n     */\n    Platform.prototype.getRequest = function() {\n\n        return require('./http/Request').$get(this.context);\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.clearStorage = function() {\n\n        this.getStorage().clean();\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.setCredentials = function(appKey, appSecret) {\n\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n\n        if (apiKey == ':') return this;\n\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.setServer = function(server) {\n\n        this.server = server || '';\n\n        return this;\n\n    };\n\n    /**\n     * @param {boolean} [remember]\n     * @returns {Platform|boolean}\n     */\n    Platform.prototype.remember = function(remember) {\n\n        var key = this.cacheId + '-remember';\n\n        if (remember !== undefined) {\n\n            this.getStorage().setItem(key, remember);\n            return this;\n\n        }\n\n        return this.getStorage().getItem(key) || false;\n\n    };\n\n    /**\n     * @param {string} options.username\n     * @param {string} options.password\n     * @param {string} [options.extension]\n     * @param {boolean} [options.remember]\n     * @returns {Promise}\n     */\n    Platform.prototype.authorize = function(options) {\n\n        options = options || {};\n\n        options.remember = options.remember || false;\n\n        return this\n            .authCall({\n                url: '/restapi/oauth/token',\n                post: {\n                    \"grant_type\": \"password\",\n                    \"username\": options.username,\n                    \"extension\": options.extension || '',\n                    \"password\": options.password,\n                    \"access_token_ttl\": this.accessTokenTtl,\n                    \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n                }\n            })\n            .then(function(response) {\n\n                this.setCache(response.data)\n                    .remember(options.remember)\n                    .emitAndCallback(this.events.authorizeSuccess, []);\n\n                return response;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.clearStorage()\n                    .emitAndCallback(this.events.authorizeError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Platform.prototype.isPaused = function() {\n        var storage = this.getStorage(),\n            cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n\n    Platform.prototype.pause = function() {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function() {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n\n    /**\n     * Gets resolved into Ajax or null if refresh resolved from elsewhere\n     * @returns {Promise}\n     */\n    Platform.prototype.refresh = function() {\n\n        var refresh = new (this.context.getPromise())(function(resolve, reject) {\n\n            if (this.isPaused()) {\n                return resolve(this.refreshPolling(null));\n            } else {\n                this.pause();\n            }\n\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function() {\n\n                var authData = this.getAuthData();\n\n                Log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n\n                if (!authData || !authData.refresh_token) return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime) return reject(new Error('Refresh token has expired'));\n                if (!this.isPaused()) return reject(new Error('Queue was resumed before refresh call'));\n\n                resolve(this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": this.accessTokenTtl,\n                        \"refresh_token_ttl\": this.remember() ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n                    }\n                }));\n\n            }.bind(this), this.refreshDelayMs);\n\n        }.bind(this));\n\n        return refresh\n            .then(function(response) {\n\n                // This means refresh has happened elsewhere and we are here because of timeout\n                if (!response || !response.data) return response;\n\n                Log.info('Platform.refresh(): Token was refreshed');\n\n                if (!response.data.refresh_token || !response.data.access_token) {\n                    var e = new Error('Malformed OAuth response');\n                    e.ajax = response;\n                    throw e;\n                }\n\n                this.setCache(response.data)\n                    .resume();\n\n                return response;\n\n            }.bind(this))\n            .then(function(result) {\n\n                this.emit(this.events.refreshSuccess, result);\n                return result;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                if (this.clearCacheOnRefreshError) this.clearStorage();\n\n                this.emitAndCallback(this.events.accessViolation, [e])\n                    .emitAndCallback(this.events.refreshError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function() {\n\n        this.pause();\n\n        return this\n            .authCall({\n                url: '/restapi/oauth/revoke',\n                post: {\n                    token: this.getToken()\n                }\n            })\n            .then(function(response) {\n\n                this.resume()\n                    .clearStorage()\n                    .emit(this.events.logoutSuccess, response);\n\n                return response;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.resume()\n                    .emitAndCallback(this.events.accessViolation, [e])\n                    .emitAndCallback(this.events.logoutError, [e]);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Platform.prototype.refreshPolling = function(result) {\n\n        if (this.refreshPromise) return this.refreshPromise;\n\n        this.refreshPromise = new (this.context.getPromise())(function(resolve, reject) {\n\n            Log.warn('Platform.refresh(): Refresh is already in progress polling started');\n\n            Utils.poll(function(next) {\n\n                if (this.isPaused()) return next();\n\n                this.refreshPromise = null;\n                this.resume();\n\n                if (this.isTokenValid()) {\n                    resolve(result);\n                } else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n\n            }.bind(this), this.pollInterval);\n\n        }.bind(this));\n\n        return this.refreshPromise;\n\n    };\n\n    Platform.prototype.getToken = function() {\n\n        return this.getAuthData().access_token;\n\n    };\n\n    Platform.prototype.getTokenType = function() {\n\n        return this.getAuthData().token_type;\n\n    };\n\n    /**\n     * @returns {PlatformAuthInfo}\n     */\n    Platform.prototype.getAuthData = function() {\n\n        return this.getStorage().getItem(this.cacheId) || {\n                token_type: '',\n                access_token: '',\n                expires_in: 0,\n                refresh_token: '',\n                refresh_token_expires_in: 0\n            };\n\n    };\n\n    /**\n     * Check if there is a valid (not expired) access token\n     * @returns {boolean}\n     */\n    Platform.prototype.isTokenValid = function() {\n\n        var authData = this.getAuthData();\n        return (authData.token_type == forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n\n    };\n\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     * @returns {Promise}\n     */\n    Platform.prototype.isAuthorized = function() {\n\n        if (this.isTokenValid()) return this.context.getPromise().resolve(true);\n        return this.refresh();\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.cancelAccessToken = function() {\n\n        return this.setCache(Utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n\n    };\n\n    /**\n     * @param {object} authData\n     * @returns {Platform}\n     */\n    Platform.prototype.setCache = function(authData) {\n\n        var oldAuthData = this.getAuthData();\n\n        Log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n\n        this.getStorage().setItem(this.cacheId, authData);\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Platform}\n     */\n    Platform.prototype.forceAuthentication = function() {\n\n        this.setCache({\n            token_type: forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n\n        return this;\n\n    };\n\n    /**\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.apiCall = function(options) {\n\n        options = options || {};\n        options.url = this.apiUrl(options.url, {addServer: true});\n\n        return this\n            .isAuthorized() // Refresh will occur inside\n            .then(function() {\n\n                var token = this.getToken();\n\n                return this.getRequest()\n                    .setOptions(options)\n                    .setHeader('Authorization', this.getTokenType() + (token ? ' ' + token : ''))\n                    .send();\n\n            }.bind(this))\n            .catch(function(e) {\n\n                if (!e.ajax || !e.ajax.isUnauthorized()) throw e;\n\n                this.cancelAccessToken();\n\n                return this\n                    .refresh()\n                    .then(function() {\n\n                        // Re-send with same options\n                        return this.apiCall(options);\n\n                    }.bind(this));\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @param {string} url\n     * @param {IAjaxOptions} [options]\n     * @returns {Promise}\n     */\n    Platform.prototype.get = function(url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n\n    /**\n     * @param {string} url\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.post = function(url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n\n    /**\n     * @param {string} url\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.put = function(url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n\n    /**\n     * @param {string} url\n     * @param {IAjaxOptions} [options]\n     * @returns {Promise}\n     */\n    Platform.prototype['delete'] = function(url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n\n    /**\n     * @param {IAjaxOptions} options\n     * @returns {Promise}\n     */\n    Platform.prototype.authCall = function(options) {\n\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, {addServer: true});\n\n        return this.getRequest()\n            .setOptions(options)\n            .setHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setHeader('Accept', 'application/json')\n            .setHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n\n    };\n\n    /**\n     *\n     * @param url\n     * @param {{addMethod?: string, addToken?: boolean, addServer?: boolean}} [options]\n     * @returns {string}\n     */\n    Platform.prototype.apiUrl = function(url, options) {\n\n        url = url || '';\n        options = options || {};\n\n        var builtUrl = '';\n\n        if (options.addServer && url.indexOf('http://') == -1 && url.indexOf('https://') == -1) builtUrl += this.server;\n\n        if (url.indexOf(this.urlPrefix) == -1) builtUrl += this.urlPrefix + '/' + this.apiVersion;\n\n        if (url.indexOf(this.accountPrefix) > -1) builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n\n        builtUrl += url;\n\n        if (options.addMethod || options.addToken) builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n\n        if (options.addMethod) builtUrl += '_method=' + options.addMethod;\n        if (options.addToken) builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n\n        return builtUrl;\n\n    };\n\n    module.exports = {\n        Class: Platform,\n        /**\n         * @param {Context} context\n         * @returns {Platform}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('Platform', function() {\n                return new Platform(context);\n            });\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Platform.js\n ** module id = 11\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = require('./Observable').Class,\n        Utils = require('./Utils');\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Cache\n     * @param {Context} context\n     */\n    function Cache(context) {\n        Observable.call(this);\n        this.setPrefix();\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n\n    Cache.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Cache.prototype, 'constructor', {value: Cache, enumerable: false});\n\n    Cache.prototype.setPrefix = function(prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n\n    Cache.prototype.prefixKey = function(key) {\n        return this.prefix + key;\n    };\n\n    Cache.prototype.setItem = function(key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n\n    Cache.prototype.removeItem = function(key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n\n    Cache.prototype.getItem = function(key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item) return null;\n        return JSON.parse(item);\n    };\n\n    Cache.prototype.clean = function() {\n\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key)) continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n\n        return this;\n\n    };\n\n    module.exports = {\n        Class: Cache,\n        /**\n         * @param {Context} context\n         * @returns {Cache}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('Cache', function() {\n                return new Cache(context);\n            });\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Cache.js\n ** module id = 12\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Observable = require('./Observable').Class,\n        Log = require('./Log'),\n        Utils = require('./Utils'),\n        renewHandicapMs = 60 * 1000;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.Subscription\n     * @param {Context} context\n     */\n    function Subscription(context) {\n        Observable.call(this);\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '', // 2014-03-12T19:54:35.613Z\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '', // 2014-03-12T19:54:35.613Z\n            status: '', // Active\n            uri: ''\n        };\n        /** @type {PUBNUB} */\n        this.pubnub = null;\n        this.context = context;\n    }\n\n    Subscription.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(Subscription.prototype, 'constructor', {value: Subscription, enumerable: false});\n\n    Subscription.prototype.events = {\n        notification: 'notification',\n        removeSuccess: 'removeSuccess',\n        removeError: 'removeError',\n        renewSuccess: 'renewSuccess',\n        renewError: 'renewError',\n        subscribeSuccess: 'subscribeSuccess',\n        subscribeError: 'subscribeError'\n    };\n\n    /**\n     * @returns {PUBNUB}\n     */\n    Subscription.prototype.getPubnub = function() {\n\n        return this.context.getPubnub();\n\n    };\n\n    Subscription.prototype.getCrypto = function() {\n\n        return this.context.getCryptoJS();\n\n    };\n\n    Subscription.prototype.getPlatform = function() {\n\n        return require('./Platform').$get(this.context);\n\n    };\n\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function(options) {\n\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        } else {\n            return this.subscribe(options);\n        }\n\n    };\n\n    Subscription.prototype.addEvents = function(events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n\n    Subscription.prototype.setEvents = function(events) {\n        this.eventFilters = events;\n        return this;\n    };\n\n    Subscription.prototype.getFullEventFilters = function() {\n\n        return this.eventFilters.map(function(event) {\n            return this.getPlatform().apiUrl(event);\n        }.bind(this));\n\n    };\n\n    /**\n     * @private\n     * @param {Array} [options.events] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.subscribe = function(options) {\n\n        options = options || {};\n        if (options.events) this.eventFilters = options.events;\n\n        this.clearTimeout();\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.eventFilters || !this.eventFilters.length) throw new Error('Events are undefined');\n\n                resolve(this.getPlatform().apiCall({\n                    method: 'POST',\n                    url: '/restapi/v1.0/subscription',\n                    post: {\n                        eventFilters: this.getFullEventFilters(),\n                        deliveryMode: {\n                            transportType: 'PubNub'\n                        }\n                    }\n                }));\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.updateSubscription(ajax.data)\n                    .subscribeAtPubnub()\n                    .emit(this.events.subscribeSuccess, ajax.data);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.unsubscribe()\n                    .emit(this.events.subscribeError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @private\n     * @param {Array} [options.events] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.renew = function(options) {\n\n        options = options || {};\n        if (options.events) this.eventFilters = options.events;\n\n        this.clearTimeout();\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.subscription || !this.subscription.id) throw new Error('Subscription ID is required');\n                if (!this.eventFilters || !this.eventFilters.length) throw new Error('Events are undefined');\n\n                resolve();\n\n            }.bind(this))\n            .then(function() {\n\n                return this.getPlatform().apiCall({\n                    method: 'PUT',\n                    url: '/restapi/v1.0/subscription/' + this.subscription.id,\n                    post: {\n                        eventFilters: this.getFullEventFilters()\n                    }\n                });\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.updateSubscription(ajax.data)\n                    .emit(this.events.renewSuccess, ajax.data);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.unsubscribe()\n                    .emit(this.events.renewError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    /**\n     * @param {boolean} [options.async]\n     * @returns {Promise}\n     */\n    Subscription.prototype.remove = function(options) {\n\n        options = Utils.extend({\n            async: true\n        }, options);\n\n        return new (this.context.getPromise())(\n            function(resolve, reject) {\n\n                if (!this.subscription || !this.subscription.id) throw new Error('Subscription ID is required');\n\n                resolve(this.getPlatform().apiCall({\n                    async: !!options.async, // Warning! This is necessary because this method is used in beforeunload hook and has to be synchronous\n                    method: 'DELETE',\n                    url: '/restapi/v1.0/subscription/' + this.subscription.id\n                }));\n\n            }.bind(this))\n            .then(function(ajax) {\n\n                this.unsubscribe()\n                    .emit(this.events.removeSuccess, ajax);\n\n                return ajax;\n\n            }.bind(this))\n            .catch(function(e) {\n\n                this.emit(this.events.removeError, e);\n\n                throw e;\n\n            }.bind(this));\n\n    };\n\n    Subscription.prototype.destroy = function() {\n\n        this.unsubscribe();\n\n        Log.info('RC.core.Subscription: Destroyed');\n\n        return Observable.prototype.destroy.call(this);\n\n    };\n\n    Subscription.prototype.isSubscribed = function() {\n\n        return this.subscription &&\n               this.subscription.deliveryMode &&\n               this.subscription.deliveryMode.subscriberKey &&\n               this.subscription.deliveryMode.address;\n\n    };\n\n    /**\n     * @protected\n     */\n    Subscription.prototype.setTimeout = function() {\n\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - renewHandicapMs;\n\n        this.timeout = setTimeout(function() {\n\n            this.renew({});\n\n        }.bind(this), timeToExpiration);\n\n    };\n\n    /**\n     * @protected\n     */\n    Subscription.prototype.clearTimeout = function() {\n\n        clearTimeout(this.timeout);\n\n    };\n\n    /**\n     * Set new subscription info and re-create timeout\n     * @protected\n     * @param subscription\n     * @returns {Subscription}\n     */\n    Subscription.prototype.updateSubscription = function(subscription) {\n\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n\n    };\n\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     * @protected\n     * @returns {Subscription}\n     */\n    Subscription.prototype.unsubscribe = function() {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed()) this.pubnub.unsubscribe({channel: this.subscription.deliveryMode.address});\n        this.subscription = null;\n        return this;\n    };\n\n    /**\n     * @abstract\n     * @param {Object} message\n     * @returns {Subscription}\n     */\n    Subscription.prototype.notify = function(message) {\n\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n\n            var CryptoJS = this.getCrypto();\n\n            var key = CryptoJS.enc.Base64.parse(this.subscription.deliveryMode.encryptionKey);\n            var data = CryptoJS.enc.Base64.parse(message);\n            var decrypted = CryptoJS.AES.decrypt({ciphertext: data}, key, {mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7}).toString(CryptoJS.enc.Utf8);\n            message = JSON.parse(decrypted);\n\n        }\n\n        this.emit(this.events.notification, message);\n\n        return this;\n\n    };\n\n    /**\n     * @returns {Subscription}\n     */\n    Subscription.prototype.subscribeAtPubnub = function() {\n\n        if (!this.isSubscribed()) return this;\n\n        var PUBNUB = this.getPubnub();\n\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n\n        this.pubnub.ready();\n\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function(message, env, channel) {\n\n                Log.info('RC.core.Subscription: Incoming message', message);\n                this.notify(message);\n\n            }.bind(this),\n            connect: function() {\n                Log.info('RC.core.Subscription: PUBNUB connected');\n            }.bind(this)\n        });\n\n        return this;\n\n    };\n\n    module.exports = {\n        Class: Subscription,\n        /**\n         * @param {Context} context\n         * @returns {Subscription}\n         */\n        $get: function(context) {\n            return new Subscription(context);\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Subscription.js\n ** module id = 13\n ** module chunks = 0\n **/","/**\n * istanbul ignore next\n */\ndefine(function(require, exports, module) {\n    'use strict';\n\n    var Observable = require('./Observable').Class;\n\n    /**\n     * @constructor\n     * @extends Observable\n     * @alias RCSDK.core.PageVisibility\n     */\n    function PageVisibility() {\n\n        Observable.call(this);\n\n        var hidden = \"hidden\",\n            onchange = function(evt) {\n\n                evt = evt || window.event;\n\n                var v = 'visible',\n                    h = 'hidden',\n                    evtMap = {\n                        focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n                    };\n\n                this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n\n                this.emit(this.events.change, this.visible);\n\n            }.bind(this);\n\n        this.visible = true;\n\n        if (typeof document == 'undefined' || typeof window == 'undefined') return;\n\n        // Standards:\n\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        // IE 9 and lower:\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        // All others:\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n\n    }\n\n    PageVisibility.prototype = Object.create(Observable.prototype);\n    Object.defineProperty(PageVisibility.prototype, 'constructor', {value: PageVisibility, enumerable: false});\n\n    PageVisibility.prototype.events = {\n        change: 'change'\n    };\n\n    PageVisibility.prototype.isVisible = function() {\n        return this.visible;\n    };\n\n    module.exports = {\n        Class: PageVisibility,\n        /**\n         * @param {Context} context\n         * @returns {PageVisibility}\n         */\n        $get: function(context) {\n            return new PageVisibility();\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/PageVisibility.js\n ** module id = 14\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('./Utils');\n\n    /**\n     * @alias RCSDK.core.Helper\n     * @constructor\n     * @param {Context} context\n     */\n    function Helper(context) {\n        this.context = context;\n    }\n\n    Helper.prototype.defaultProperty = 'id';\n\n    /**\n     * @returns {Context}\n     */\n    Helper.prototype.getContext = function() {\n        return this.context;\n    };\n\n    /**\n     * @param {object} [options]\n     * @param {string} [id]\n     */\n    Helper.prototype.createUrl = function(options, id) {\n        return '';\n    };\n\n    /**\n     * @param {IHelperObject} object\n     * @returns {string}\n     */\n    Helper.prototype.getId = function(object) {\n        return object && object[this.defaultProperty];\n    };\n\n    /**\n     *\n     * @param {IHelperObject} object\n     * @returns {boolean}\n     */\n    Helper.prototype.isNew = function(object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n\n    /**\n     *\n     * @param {IHelperObject} object\n     * @returns {IHelperObject}\n     */\n    Helper.prototype.resetAsNew = function(object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n\n    /**\n     * @param {IHelperObject} object\n     * @returns {string}\n     */\n    Helper.prototype.getUri = function(object) {\n        return object && object.uri;\n    };\n\n    /**\n     * @param {Response} ajax\n     * @return {IHelperObject[]}\n     */\n    Helper.prototype.parseMultipartResponse = function(ajax) {\n\n        if (ajax.isMultipart()) {\n\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function(result) {\n                return (!result.error);\n            }).map(function(result) {\n                return result.data;\n            });\n\n        } else { // Single ID\n\n            return [ajax.data];\n\n        }\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     * @param {IHelperObject} [object]\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.loadRequest = function(object, options) {\n\n        return Utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     * @param {IHelperObject} object\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.saveRequest = function(object, options) {\n\n        if (!object && !(options && (options.post || options.body))) throw new Error('No Object');\n\n        return Utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n\n    };\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     * @param {IHelperObject} object\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.deleteRequest = function(object, options) {\n\n        options = options || {};\n\n        if (!this.getUri(object) && !(options && options.url)) throw new Error('Object has to be not new or URL must be provided');\n\n        return Utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n\n    };\n\n    /**\n     * If no url was provided, default SYNC url will be returned\n     * @param {IAjaxOptions} [options]\n     * @return {IAjaxOptions}\n     */\n    Helper.prototype.syncRequest = function(options) {\n\n        options = options || {};\n\n        options.url = options.url || this.createUrl({sync: true});\n        options.query = options.query || options.get || {};\n\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        } else {\n            options.query.syncType = 'FSync';\n        }\n\n        return options;\n\n    };\n\n    Helper.prototype.nextPageExists = function(data) {\n\n        return (data && data.navigation && ('nextPage' in data.navigation));\n\n    };\n\n    /**\n     * @param {IHelperObject[]} array - an array to be indexed\n     * @param {function(object)} [getIdFn] - must return an ID for each array item\n     * @param {boolean} [gather] - if true, then each index will have an array of items, that has same ID, otherwise the first indexed item wins\n     * @returns {*}\n     */\n    Helper.prototype.index = function(array, getIdFn, gather) {\n\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n\n        return array.reduce(function(index, item) {\n\n            var id = getIdFn(item);\n\n            if (!id || (index[id] && !gather)) return index;\n\n            if (gather) {\n                if (!index[id]) index[id] = [];\n                index[id].push(item);\n            } else {\n                index[id] = item;\n            }\n\n            return index;\n\n        }, {});\n\n    };\n\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * @param {IHelperObject[]} target\n     * @param {IHelperObject[]} supplement\n     * @param {function(IHelperObject)} [getIdFn]\n     * @param {boolean} [mergeItems] - if true, properties of _supplement_ item will be applied to _target_ item, otherwise _target_ item will be replaced\n     * @returns {*}\n     */\n    Helper.prototype.merge = function(target, supplement, getIdFn, mergeItems) {\n\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n\n        var supplementIndex = this.index(supplement, getIdFn),\n            updatedIDs = [];\n\n        var result = target.map(function(item) {\n\n            var id = getIdFn(item),\n                newItem = supplementIndex[id];\n\n            if (newItem) updatedIDs.push(id);\n\n            return newItem ? (mergeItems ? Utils.extend(item, newItem) : newItem) : item;\n\n        });\n\n        supplement.forEach(function(item) {\n\n            if (updatedIDs.indexOf(getIdFn(item)) == -1) result.push(item);\n\n        });\n\n        return result;\n\n    };\n\n    module.exports = {\n        Class: Helper,\n        /**\n         * @param {Context} context\n         * @returns {Helper}\n         */\n        $get: function(context) {\n            return new Helper(context);\n        }\n    };\n\n    /**\n     * @typedef {object} IHelperObject\n     * @property {string} id\n     * @property {string} uri\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Helper.js\n ** module id = 15\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    var Utils = require('./Utils'),\n        Log = require('./Log');\n\n    /**\n     * @constructor\n     * @alias RCSDK.core.Observable\n     */\n    function Observable() {\n        if (!(this instanceof Observable)) throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', {value: {}, enumerable: false, writable: true});\n        Object.defineProperty(this, 'oneTimeEvents', {value: {}, enumerable: false, writable: true});\n        Object.defineProperty(this, 'oneTimeArguments', {value: {}, enumerable: false, writable: true});\n    }\n\n    // Object.create({}) is not needed\n    // Do not put Object or Function.prototype instead of {}, otherwise all instances will get non-writable 'name' property\n    // Observable.prototype = {};\n    Object.defineProperty(Observable.prototype, 'constructor', {value: Observable, enumerable: false});\n\n    Observable.prototype.hasListeners = function(event) {\n        return (event in this.listeners);\n    };\n\n    Observable.prototype.registerOneTimeEvent = function(event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n\n    Observable.prototype.on = function(events, callback) {\n\n        if (typeof events == 'string') events = [events];\n        if (!events) throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function') throw new Error('Callback must be a function');\n\n        var self = this;\n\n        events.forEach(function(event) {\n\n            if (!self.hasListeners(event)) self.listeners[event] = [];\n\n            self.listeners[event].push(callback);\n\n            if (self.isOneTimeEventFired(event)) { // Fire listener immediately if is inited already\n                Log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n\n        });\n\n        return this;\n\n    };\n\n    Observable.prototype.emit = function(event) {\n\n        if (this.isOneTimeEventFired(event)) {\n            Log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n\n        var self = this,\n            args = Utils.argumentsToArray(arguments).splice(1),\n            result = null;\n\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n\n        if (!this.hasListeners(event)) return null;\n\n        this.listeners[event].some(function(callback) {\n\n            result = callback.apply(self, args);\n            return (result === false);\n\n        });\n\n        return result;\n\n    };\n\n    Observable.prototype.off = function(event, callback) {\n        var self = this;\n        if (!callback) {\n            delete this.listeners[event];\n        } else {\n            if (!this.hasListeners(event)) return this;\n            this.listeners[event].forEach(function(cb, i) {\n\n                if (cb === callback) delete self.listeners[event][i];\n\n            });\n        }\n        return this;\n    };\n\n    Observable.prototype.isOneTimeEvent = function(event) {\n        return (event in this.oneTimeEvents);\n    };\n\n    Observable.prototype.isOneTimeEventFired = function(event) {\n        if (!this.isOneTimeEvent(event)) return false;\n        return (this.oneTimeEvents[event]);\n    };\n\n    Observable.prototype.setOneTimeEventFired = function(event) {\n        this.oneTimeEvents[event] = true;\n    };\n\n    Observable.prototype.setOneTimeEventArgumens = function(event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n\n    Observable.prototype.getOneTimeEventArgumens = function(event) {\n        return this.oneTimeArguments[event];\n    };\n\n    Observable.prototype.offAll = function() {\n        this.listeners = {};\n        this.oneTimeEvents = {};\n        this.oneTimeArguments = {};\n    };\n\n    Observable.prototype.destroy = function() {\n        this.offAll();\n        Log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n\n    /**\n     * @param {string} event\n     * @param {Array} args\n     * @param {function} [callback]\n     */\n    Observable.prototype.emitAndCallback = function(event, args, callback) {\n        args = Utils.argumentsToArray(args);\n        if (event) this.emit.apply(this, [event].concat(args));\n        if (callback) callback.apply(this, args);\n        return this;\n    };\n\n    module.exports = {\n        Class: Observable,\n        /**\n         * @param {Context} context\n         * @returns {Observable}\n         */\n        $get: function(context) {\n            return new Observable(context);\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Observable.js\n ** module id = 16\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('./Utils');\n\n    /**\n     * @typedef {object} IValidator\n     * @property {string} field\n     * @property {function} validator\n     */\n\n    /**\n     * @typedef {object} IValidatorResult\n     * @property {boolean} isValid\n     * @property {Object.<number, Error[]>} errors\n     */\n\n    /**\n     * @alias RCSDK.core.Validator\n     * @name Validator\n     */\n    var Validator = module.exports = {\n        /**\n         * @param {IValidator[]} validators\n         * @returns {IValidatorResult}\n         */\n        validate: function(validators) {\n\n            /** @type {IValidatorResult} */\n            var result = {\n                errors: {},\n                isValid: true\n            };\n\n            result.errors = validators.reduce(function(errors, validator) {\n\n                var res = validator.validator();\n\n                if (res.length > 0) {\n                    result.isValid = false;\n                    errors[validator.field] = errors[validator.field] || [];\n                    errors[validator.field] = errors[validator.field].concat(res);\n                }\n\n                return errors;\n\n            }, {});\n\n            return result;\n\n        },\n        /**\n         * It is not recommended to have any kinds of complex validators at front end\n         * @deprecated\n         * @param value\n         * @param multiple\n         * @returns {Function}\n         */\n        email: function(value, multiple) {\n            return function() {\n                if (!value) return [];\n                return Utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n            };\n        },\n        /**\n         * It is not recommended to have any kinds of complex validators at front end\n         * TODO International phone numbers\n         * @deprecated\n         * @param value\n         * @returns {Function}\n         */\n        phone: function(value) {\n            return function() {\n                if (!value) return [];\n                return Utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n            };\n        },\n        required: function(value) {\n            return function() {\n                return !value ? [new Error('Field is required')] : [];\n            };\n        },\n        length: function(value, max, min) {\n            return function() {\n\n                var errors = [];\n\n                if (!value) return errors;\n\n                value = value.toString();\n\n                if (min && value.length < min) errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n                if (max && value.length > max) errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n\n                return errors;\n\n            };\n        },\n        $get: function(context) {\n            return Validator;\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Validator.js\n ** module id = 17\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('./Utils');\n\n    /**\n     * @alias RCSDK.core.Log\n     * @name Log\n     */\n    var Log = module.exports = {\n        logDebug: false,\n        logInfo: false,\n        logWarnings: false,\n        logErrors: false,\n        addTimestamps: true,\n        /** @type {Console} */\n        console: console || { // safety\n            log: function() {},\n            warn: function() {},\n            info: function() {},\n            error: function() {}\n        },\n        disableAll: function() {\n            this.logDebug = false;\n            this.logInfo = false;\n            this.logWarnings = false;\n            this.logErrors = false;\n        },\n        enableAll: function() {\n            this.logDebug = true;\n            this.logInfo = true;\n            this.logWarnings = true;\n            this.logErrors = true;\n        },\n        parseArguments: function(args) {\n            args = Utils.argumentsToArray(args);\n            if (this.addTimestamps) args.unshift(new Date().toLocaleString(), '-');\n            return args;\n        },\n        debug: function() {\n            if (this.logDebug) this.console.log.apply(this.console, this.parseArguments(arguments));\n        },\n        info: function() {\n            if (this.logInfo) this.console.info.apply(this.console, this.parseArguments(arguments));\n        },\n        warn: function() {\n            if (this.logWarnings) this.console.warn.apply(this.console, this.parseArguments(arguments));\n        },\n        error: function() {\n            if (this.logErrors) this.console.error.apply(this.console, this.parseArguments(arguments));\n        },\n        $get: function(context) {\n            return Log;\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Log.js\n ** module id = 18\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var hasOwn = Object.prototype.hasOwnProperty,\n        toString = Object.prototype.toString,\n        rdigit = /\\d/,\n        class2type = {};\n\n    // Populate the class2type map\n    'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function(name) {\n        class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n    });\n\n    /**\n     * @alias RCSDK.core.Utils\n     * @name Utils\n     */\n    var Utils = module.exports = {\n\n        /**\n         * Ported from jQuery.fn.extend\n         * Optional first parameter makes deep copy\n         * @param {object} targetObject\n         * @param {object} sourceObject\n         * @returns {object}\n         */\n        extend: function extend(targetObject, sourceObject) {\n\n            var options, name, src, copy, copyIsArray, clone,\n                target = arguments[0] || {},\n                i = 1,\n                length = arguments.length,\n                deep = false;\n\n            // Handle a deep copy situation\n            if (typeof target === \"boolean\") {\n                deep = target;\n\n                // skip the boolean and the target\n                target = arguments[i] || {};\n                i++;\n            }\n\n            // Handle case when target is a string or something (possible in deep copy)\n            if (typeof target !== \"object\" && !this.isFunction(target)) {\n                target = {};\n            }\n\n            for (; i < length; i++) {\n\n                // Only deal with non-null/undefined values\n                if ((options = arguments[i]) !== null) {\n\n                    // Extend the base object\n                    for (name in options) {\n\n                        src = target[name];\n                        copy = options[name];\n\n                        // Prevent never-ending loop\n                        if (target === copy) {\n                            continue;\n                        }\n\n                        // Recurse if we're merging plain objects or arrays\n                        if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n\n                            if (copyIsArray) {\n                                copyIsArray = false;\n                                clone = src && this.isArray(src) ? src : [];\n                            } else {\n                                clone = src && this.isPlainObject(src) ? src : {};\n                            }\n\n                            // Never move original objects, clone them\n                            target[name] = this.extend(deep, clone, copy);\n\n                            // Don't bring in undefined values\n                        } else if (copy !== undefined) {\n\n                            target[name] = copy;\n\n                        }\n                    }\n                }\n            }\n\n            // Return the modified object\n            return target;\n\n        },\n\n        forEach: function(object, cb) {\n\n            for (var i in object) {\n\n                if (!object.hasOwnProperty(i)) continue;\n\n                var res = cb(object[i], i);\n\n                if (res === false) break;\n\n            }\n\n        },\n\n        /**\n         * TODO Replace with something better\n         * @see https://github.com/joyent/node/blob/maste.r/lib/querystring.js\n         * @param {object} parameters\n         * @returns {string}\n         */\n        queryStringify: function(parameters) {\n\n            var array = [],\n                self = this;\n\n            this.forEach(parameters, function(v, i) {\n\n                if (self.isArray(v)) {\n                    v.forEach(function(vv) {\n                        array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                    });\n                } else {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n                }\n\n            });\n\n            return array.join('&');\n\n        },\n\n        /**\n         * TODO Replace with something better\n         * @see https://github.com/joyent/node/blob/maste.r/lib/querystring.js\n         * @param {string} queryString\n         * @returns {object}\n         */\n        parseQueryString: function(queryString) {\n\n            var argsParsed = {},\n                self = this;\n\n            queryString.split('&').forEach(function(arg) {\n\n                arg = decodeURIComponent(arg);\n\n                if (arg.indexOf('=') == -1) {\n\n                    argsParsed[arg.trim()] = true;\n\n                } else {\n\n                    var pair = arg.split('='),\n                        key = pair[0].trim(),\n                        value = pair[1].trim();\n\n                    if (key in argsParsed) {\n                        if (key in argsParsed && !self.isArray(argsParsed[key])) argsParsed[key] = [argsParsed[key]];\n                        argsParsed[key].push(value);\n                    } else {\n                        argsParsed[key] = value;\n                    }\n\n                }\n\n            });\n\n            return argsParsed;\n\n        },\n\n        /**\n         * Returns true if the passed value is valid email address.\n         * @param {string} v\n         * @param {boolean} multiple Checks multiple comma separated emails according to RFC 2822\n         * @returns {boolean}\n         */\n        isEmail: function(v, multiple) {\n            if (!!multiple) {\n                //this Regexp is also suitable for multiple emails (comma separated)\n                return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n            } else {\n                return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n            }\n\n        },\n\n        isPhoneNumber: function(v) {\n            return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n        },\n\n        /**\n         * @param args\n         * @returns {Array}\n         */\n        argumentsToArray: function(args) {\n            return Array.prototype.slice.call(args || [], 0);\n        },\n\n        isDate: function(obj) {\n            return this.type(obj) === \"date\";\n        },\n\n        isFunction: function(obj) {\n            return this.type(obj) === \"function\";\n        },\n\n        isArray: Array.isArray || function(obj) {\n            return this.type(obj) === \"array\";\n        },\n\n        // A crude way of determining if an object is a window\n        isWindow: function(obj) {\n            return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n        },\n\n        isNaN: function(obj) {\n            return obj === null || !rdigit.test(obj) || isNaN(obj);\n        },\n\n        type: function(obj) {\n            return obj === null ?\n                   String(obj) :\n                   class2type[toString.call(obj)] || \"object\";\n        },\n\n        isPlainObject: function(obj) {\n            // Must be an Object.\n            // Because of IE, we also have to check the presence of the constructor property.\n            // Make sure that DOM nodes and window objects don't pass through, as well\n            if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n                return false;\n            }\n\n            // Not own constructor property must be Object\n            if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n                return false;\n            }\n\n            // Own properties are enumerated firstly, so to speed up,\n            // if last one is own, then all properties are own.\n\n            var key;\n            for (key in obj) {}\n\n            return key === undefined || hasOwn.call(obj, key);\n        },\n\n        getProperty: function(obj, property) {\n\n            return property\n                .split(/[.[\\]]/)\n                .reduce(function(res, part) {\n                    if (!res) return undefined;\n                    return part ? res[part] : res;\n                }, obj);\n\n        },\n\n        poll: function(fn, interval, timeout) {\n\n            this.stopPolling(timeout);\n\n            interval = interval || 1000;\n\n            var next = function(delay) {\n\n                delay = delay || interval;\n\n                interval = delay;\n\n                return setTimeout(function() {\n\n                    fn(next, delay);\n\n                }, delay);\n\n            };\n\n            return next();\n\n        },\n\n        stopPolling: function(timeout) {\n            if (timeout) clearTimeout(timeout);\n        },\n\n        parseString: function(s) {\n            return s ? s.toString() : '';\n        },\n\n        parseNumber: function(n) {\n            if (!n) return 0;\n            n = parseFloat(n);\n            return isNaN(n) ? 0 : n;\n        },\n\n        $get: function(context) {\n            return Utils;\n        }\n\n    };\n\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/Utils.js\n ** module id = 19\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('./Utils');\n\n    /**\n     * @alias RCSDK.core.List\n     * @name List\n     */\n    var List = module.exports = {\n\n        /**\n         * @param {string} property\n         * @returns {function(object)}\n         */\n        propertyExtractor: function(property) {\n            return function(item, options) {\n                return property ? ((item && item[property]) || null) : item;\n            };\n        },\n\n        /**\n         * Non-string types are converted to string\n         * Non-string types are extracted as an empty string if they could be converted to false\n         * If no options.sortBy given the item itself is extracted\n         * Compares strings:\n         * - if (a is less than b) return -1;\n         * - if (a is greater than b) return 1;\n         * - else (a must be equal to b) return 0;\n         * Exceptions in will be suppressed, if any - a is assumed to be less than b\n         * @param {string} a\n         * @param {string} b\n         * @param {IListComparatorOptions} [options]\n         * @returns {number}\n         */\n        stringComparator: function(a, b, options) {\n\n            return Utils.parseString(a).localeCompare(Utils.parseString(b));\n\n        },\n\n        /**\n         * Non-numeric types are extracted as 0 if they could be converted to false\n         * Objects that could not be converted to number are extracted as 0\n         * If no options.sortBy given the item itself is extracted\n         * See parseFloat for more info\n         * Compares numbers:\n         * - if (a is less than b) return -1;\n         * - if (a is greater than b) return 1;\n         * - else (a must be equal to b) return 0;\n         * Function does not check types\n         * Exceptions in will be suppressed, if any - a is assumed to be less than b\n         * @param {number} a\n         * @param {number} b\n         * @param {IListComparatorOptions} [options]\n         * @returns {number}\n         */\n        numberComparator: function(a, b, options) {\n\n            return (Utils.parseNumber(a) - Utils.parseNumber(b));\n\n        },\n\n        /**\n         * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n         * compare function (_compareFn_ option, by default Helper.stringComparator)\n         * Merged options are provided to _extractFn_ and _compareFn_\n         * TODO Check memory leaks for all that options links\n         * @param {IListComparatorOptions} [options]\n         * @returns {function(object, object)}\n         */\n        comparator: function(options) {\n\n            options = Utils.extend({\n                extractFn: this.propertyExtractor((options && options.sortBy) || null),\n                compareFn: this.stringComparator\n            }, options);\n\n            /**\n             * @param {object} item1\n             * @param {object} item2\n             * @returns {number}\n             */\n            function comparator(item1, item2) {\n\n                return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n\n            }\n\n            return comparator;\n\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options\n         * @returns {boolean}\n         */\n        equalsFilter: function(obj, options) {\n            return (options.condition === obj);\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options\n         * @returns {boolean}\n         */\n        containsFilter: function(obj, options) {\n            return (obj && obj.toString().indexOf(options.condition) > -1);\n        },\n\n        /**\n         * @param {string} obj\n         * @param {IListFilterOptions} options - `condition` must be an instance of RegExp\n         * @returns {boolean}\n         */\n        regexpFilter: function(obj, options) {\n            if (!(options.condition instanceof RegExp)) throw new Error('Condition must be an instance of RegExp');\n            return (options.condition.test(obj));\n        },\n\n        /**\n         * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n         * compare function (`filterFn` option, by default Helper.equalsFilter)\n         * Merged options are provided to `extractFn` and `compareFn`\n         * Set `filterBy` to null to force `propertyExtractor` to return object itself\n         * TODO Check memory leaks for all that options links\n         * @param {IListFilterOptions[]} [filterConfigs]\n         * @returns {function(object)}\n         */\n        filter: function(filterConfigs) {\n\n            var self = this;\n\n            filterConfigs = (filterConfigs || []).map(function(opt) {\n\n                return Utils.extend({\n                    condition: '',\n                    extractFn: self.propertyExtractor((opt && opt.filterBy) || null),\n                    filterFn: self.equalsFilter\n                }, opt);\n\n            });\n\n            /**\n             * @param {object} item\n             * @returns {boolean}\n             */\n            function filter(item) {\n\n                return filterConfigs.reduce(function(pass, opt) {\n\n                    if (!pass || !opt.condition) return pass;\n                    return opt.filterFn(opt.extractFn(item, opt), opt);\n\n                }, true);\n\n            }\n\n            return filter;\n\n        },\n\n        $get: function(context) {\n            return List;\n        }\n\n    };\n\n    /**\n     * @typedef {object} IListComparatorOptions\n     * @property {string} sortBy\n     * @property {function(object, IListComparatorOptions)} extractFn\n     * @property {function(object, object)} compareFn\n     */\n\n    /**\n     * @typedef {object} IListFilterOptions\n     * @property {string} filterBy\n     * @property {object} condition\n     * @property {function(object, IListComparatorOptions)} extractFn\n     * @property {function(object, object)} filterFn\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/List.js\n ** module id = 20\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function CountryHelper(context) {\n        Helper.call(this, context);\n    }\n\n    CountryHelper.prototype = Object.create(Helper.prototype);\n\n    CountryHelper.prototype.createUrl = function() {\n        return '/dictionary/country';\n    };\n\n    module.exports = {\n        Class: CountryHelper,\n        /**\n         * @param {Context} context\n         * @returns {CountryHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('CountryHelper', function() {\n                return new CountryHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ICountry\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {string} callingCode\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Country.js\n ** module id = 21\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function DeviceModelHelper(context) {\n        Helper.call(this, context);\n    }\n\n    DeviceModelHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IDeviceModel} device\n     * @returns {string}\n     */\n    DeviceModelHelper.prototype.getId = function(device) {\n\n        if (!device) return null;\n\n        return device.id + (\n                device.addons && device.addons[0]\n                    ? '-' + device.addons[0].id + '-' + device.addons[0].count\n                    : ''\n            );\n\n    };\n\n    /**\n     * Remove extra textual information from device\n     * @exceptionalCase Platform does not understand full device info\n     * @param {IDeviceModel} device\n     * @returns {IDeviceModel}\n     */\n    DeviceModelHelper.prototype.cleanForSaving = function(device) {\n\n        if (!device) return null;\n\n        delete device.name;\n        delete device.deviceClass;\n\n        if (device.addons && device.addons.length > 0) {\n\n            device.addons.forEach(function(addon, i) {\n                delete device.addons[i].name;\n            });\n\n        } else {\n\n            delete device.addons;\n\n        }\n\n        return device;\n\n    };\n\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-1 is done\n     * @type {IDeviceModel[]}\n     */\n    DeviceModelHelper.prototype.devices = [\n        {\n            id: '-1',\n            name: 'Softphone'\n        },\n        {\n            id: '0',\n            name: 'Existing device'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '23',\n            name: 'Polycom IP 321 Basic IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '30',\n            name: 'Polycom IP 550 HD Manager IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '37',\n            name: 'Polycom IP 6000 Conference Phone',\n            deviceClass: 'Conference Phone'\n        },\n        {\n            id: '40',\n            name: 'Polycom IP 335 HD IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '51',\n            name: 'Cisco SPA-303 Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '16',\n            name: 'Cisco SPA-508G Desk Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '19',\n            name: 'Cisco SPA-525G2 Desk Phone with 2 Expansion Modules\tDesk Phone',\n            addons: [\n                {\n                    id: '2',\n                    name: 'Cisco Sidecar',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 1 Expansion Module',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '1'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 2 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '2'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone with 3 Expansion Modules',\n            deviceClass: 'Desk Phone',\n            addons: [\n                {\n                    id: '1',\n                    name: 'Plolycom Expansion',\n                    count: '3'\n                }\n            ]\n        },\n        {\n            id: '34',\n            name: 'Polycom IP 650 HD Executive IP phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '52',\n            name: 'Cisco SPA-122 ATA',\n            deviceClass: 'Analog Adapter'\n        },\n        {\n            id: '53',\n            name: 'Polycom VVX-500 Color Touchscreen',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '54',\n            name: 'Polycom VVX-310 Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        },\n        {\n            id: '55',\n            name: 'Polycom VVX-410 Color Gigabit Ethernet Phone',\n            deviceClass: 'Desk Phone'\n        }\n    ];\n\n    module.exports = {\n        Class: DeviceModelHelper,\n        /**\n         * @param {Context} context\n         * @returns {DeviceModelHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('DeviceModelHelper', function() {\n                return new DeviceModelHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IDeviceModel\n     * @property {string} id\n     * @property {string} name\n     * @property {string} deviceClass\n     * @property {string} addons\n     */\n\n    /**\n     * @typedef {Object} IDeviceModelAddon\n     * @property {string} id\n     * @property {string} name\n     * @property {string} count\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/DeviceModel.js\n ** module id = 22\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function LanguageHelper(context) {\n        Helper.call(this, context);\n    }\n\n    LanguageHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @type {ILanguage[]}\n     */\n    LanguageHelper.prototype.languages = [\n        {\n            id: '1033',\n            name: 'English (US)'\n        },\n        {\n            id: '3084',\n            name: 'French (Canada)'\n        }\n    ];\n\n    module.exports = {\n        Class: LanguageHelper,\n        /**\n         * @param {Context} context\n         * @returns {LanguageHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('LanguageHelper', function() {\n                return new LanguageHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ILanguage\n     * @property {string} id\n     * @property {string} name\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Language.js\n ** module id = 23\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        List = require('../core/List'),\n        Utils = require('../core/Utils');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function LocationHelper(context) {\n        Helper.call(this, context);\n        this.state = require('./State').$get(context);\n    }\n\n    LocationHelper.prototype = Object.create(Helper.prototype);\n\n    LocationHelper.prototype.createUrl = function() {\n        return '/dictionary/location';\n    };\n\n    /**\n     * @param {ILocationFilterOptions} options\n     * @returns {function(ILocation)}\n     */\n    LocationHelper.prototype.filter = function(options) {\n\n        var uniqueNPAs = [];\n\n        options = Utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.stateId,\n                filterFn: function(item, opts) {\n                    return (this.state.getId(item.state) == opts.condition);\n                }.bind(this)\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function(item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    } else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {comparator}\n     */\n    LocationHelper.prototype.comparator = function(options) {\n\n        options = Utils.extend({\n            sortBy: 'npa'\n        }, options);\n\n        if (options.sortBy == 'nxx') {\n\n            /**\n             * @param {ILocation} item\n             * @returns {number}\n             */\n            options.extractFn = function(item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n\n            options.compareFn = List.numberComparator;\n\n        }\n\n        return List.comparator(options);\n\n    };\n\n    module.exports = {\n        Class: LocationHelper,\n        /**\n         * @param {Context} context\n         * @returns {LocationHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('LocationHelper', function() {\n                return new LocationHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ILocation\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {string} npa\n     * @property {string} nxx\n     * @property {IState} state\n     */\n\n    /**\n     * @typedef {object} ILocationFilterOptions\n     * @property {string} stateId\n     * @property {boolean} onlyUniqueNPA\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Location.js\n ** module id = 24\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ShippingMethodHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ShippingMethodHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * TODO Remove when http://jira.ringcentral.com/browse/SDK-3 id done\n     * @type {IShippingMethod[]}\n     */\n    ShippingMethodHelper.prototype.shippingMethods = [\n        {\n            id: '1',\n            name: 'Ground Shipping (5-7 business days)'\n        },\n        {\n            id: '2',\n            name: '2-days Shipping'\n        },\n        {\n            id: '3',\n            name: 'Overnight Shipping'\n        }\n    ];\n\n    module.exports = {\n        Class: ShippingMethodHelper,\n        /**\n         * @param {Context} context\n         * @returns {ShippingMethodHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ShippingMethodHelper', function() {\n                return new ShippingMethodHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IShippingMethod\n     * @property {string} id\n     * @property {string} name\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/ShippingMethod.js\n ** module id = 25\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        List = require('../core/List'),\n        Utils = require('../core/Utils');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function StateHelper(context) {\n        Helper.call(this, context);\n        this.countryHelper = require('./Country').$get(context);\n    }\n\n    StateHelper.prototype = Object.create(Helper.prototype);\n\n    StateHelper.prototype.createUrl = function() {\n        return '/dictionary/state';\n    };\n\n    /**\n     * @param {IStateOptions} options\n     * @returns {function(IState)}\n     */\n    StateHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            countryId: ''\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.countryId,\n                filterFn: function(item, opts) {\n                    return (this.countryHelper.getId(item.country) == opts.condition);\n                }.bind(this)\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: StateHelper,\n        /**\n         * @param {Context} context\n         * @returns {StateHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('StateHelper', function() {\n                return new StateHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IState\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} isoCode\n     * @property {ICountry} country\n     */\n\n    /**\n     * @typedef {object} IStateOptions\n     * @property {string} countryId\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/State.js\n ** module id = 26\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function TimezoneHelper(context) {\n        Helper.call(this, context);\n    }\n\n    TimezoneHelper.prototype = Object.create(Helper.prototype);\n\n    TimezoneHelper.prototype.createUrl = function() {\n        return '/dictionary/timezone';\n    };\n\n    module.exports = {\n        Class: TimezoneHelper,\n        /**\n         * @param {Context} context\n         * @returns {TimezoneHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('TimezoneHelper', function() {\n                return new TimezoneHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ITimezone\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} name\n     * @property {string} description\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Timezone.js\n ** module id = 27\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function AccountHelper(context) {\n        Helper.call(this, context);\n    }\n\n    AccountHelper.prototype = Object.create(Helper.prototype);\n\n    AccountHelper.prototype.createUrl = function() {\n        return '/account/~';\n    };\n\n    module.exports = {\n        Class: AccountHelper,\n        /**\n         * @param {Context} context\n         * @returns {AccountHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('AccountHelper', function() {\n                return new AccountHelper(context);\n            });\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Account.js\n ** module id = 28\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Validator = require('../core/Validator');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function BlockedNumberHelper(context) {\n        Helper.call(this, context);\n    }\n\n    BlockedNumberHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     *\n     * @param {IBlockedNumberOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    BlockedNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' +\n               (options.extensionId ? options.extensionId : '~') +\n               '/blocked-number' +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IBlockedNumber} item\n     */\n    BlockedNumberHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'phoneNumber', validator: Validator.phone(item.phoneNumber)},\n            {field: 'phoneNumber', validator: Validator.required(item.phoneNumber)},\n            {field: 'name', validator: Validator.required(item.name)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: BlockedNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {BlockedNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('BlockedNumberHelper', function() {\n                return new BlockedNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IBlockedNumber\n     * @property {string} name\n     * @property {string} phoneNumber\n     */\n\n    /**\n     * @typedef {object} IBlockedNumberOptions\n     * @property {string} extensionId\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/BlockedNumber.js\n ** module id = 29\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Utils = require('../core/Utils'),\n        List = require('../core/List');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function CallHelper(context) {\n        Helper.call(this, context);\n        this.presence = require('./Presence').$get(context);\n        this.contact = require('./Contact').$get(context);\n    }\n\n    CallHelper.prototype = Object.create(Helper.prototype);\n\n\n    /**\n     * @param {ICallOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    CallHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (!('personal' in options) && !('extensionId' in options)) options.personal = true;\n\n        return '/account/~/' +\n               (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n               (options.active ? 'active-calls' : 'call-log') +\n               (id ? '/' + id : '');\n\n    };\n\n    CallHelper.prototype.getSessionId = function(call) {\n        return (call && call.sessionId);\n    };\n\n    CallHelper.prototype.isInProgress = function(call) {\n        return (call && call.result == 'In Progress');\n    };\n\n    CallHelper.prototype.isAlive = function(call) {\n        return (call && call.availability == 'Alive');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isInbound = function(call) {\n        return (call && call.direction == 'Inbound');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isOutbound = function(call) {\n        return !this.isInbound(call);\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isMissed = function(call) {\n        return (call && call.result == 'Missed');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {boolean}\n     */\n    CallHelper.prototype.isFindMe = function(call) {\n        return (call && call.action == 'FindMe');\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {ICallerInfo}\n     */\n    CallHelper.prototype.getCallerInfo = function(call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {ICallerInfo[]}\n     */\n    CallHelper.prototype.getAllCallerInfos = function(call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n\n    CallHelper.prototype.formatDuration = function(call) {\n\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n\n        var duration = parseInt(call.duration),\n            hours = Math.floor(duration / (60 * 60)),\n            mins = Math.floor((duration % (60 * 60)) / 60),\n            secs = Math.floor(duration % 60);\n\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n\n    };\n\n    /**\n     * @param {ICallFilterOptions} [options]\n     * @returns {function(ICall)}\n     */\n    CallHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n\n        return List.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            {filterBy: 'direction', condition: options.direction},\n            {filterBy: 'type', condition: options.type}\n        ]);\n\n    };\n\n    /**\n     * TODO Compare as dates\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    CallHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'startTime'\n        }, options));\n\n    };\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     * @param {IContact[]} contacts\n     * @param {ICall[]} calls\n     * @param {IContactMatchOptions} [options]\n     */\n    CallHelper.prototype.attachContacts = function(contacts, calls, options) {\n\n        var self = this;\n\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function(callerInfos, call) {\n\n            return callerInfos.concat(self.getAllCallerInfos(call));\n\n        }, []);\n\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n\n    };\n\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     * @param {ICall} outboundRingOutCall\n     * @param {ICall} inboundCall\n     * @param {ICallProcessingOptions} options\n     * @returns {boolean}\n     */\n    CallHelper.prototype.checkMergeability = function(outboundRingOutCall, inboundCall, options) {\n\n        function getTime(dateString) {\n            return (new Date(dateString)).getTime();\n        }\n\n        return (\n        (!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n        // Check directions\n        outboundRingOutCall.direction == 'Outbound' &&\n        inboundCall.direction == 'Inbound' &&\n        // Check that start times are equal or close enough\n        ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n        // Check that numbers match\n        inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n        (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n\n    };\n\n    /**\n     * @param {ICall} outboundRingOutCall\n     * @param {ICall} inboundCall\n     * @param {ICallProcessingOptions} [options]\n     * @returns {Array}\n     */\n    CallHelper.prototype.combineCalls = function(outboundRingOutCall, inboundCall, options) {\n\n        options = options || {};\n\n        var result = [];\n\n        outboundRingOutCall.hasSubsequent = true;\n\n        if (options.merge) {\n\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n\n        } else {\n\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n\n        }\n\n        return result;\n\n    };\n\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     *\n     * @param {ICall[]} calls\n     * @param {ICallProcessingOptions} options\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.processCalls = function(calls, options) {\n\n        var processedCalls = [],\n            callsToMerge = [],\n            self = this;\n\n        // Iterate through calls\n        calls.forEach(function(call) {\n\n            var merged = false;\n\n            call.subsequent = false;\n            call.hasSubsequent = false;\n\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function(secondCall) {\n\n                if (call === secondCall) return false;\n\n                if (self.checkMergeability(call, secondCall, options)) {\n\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n\n                    merged = true;\n\n                }\n\n                return merged;\n\n            });\n\n        });\n\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function(call) {\n\n            if (callsToMerge.indexOf(call) == -1) processedCalls.push(call);\n\n        });\n\n        return processedCalls;\n\n    };\n\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     * @param {IPresenceCall[]} activeCalls\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.parsePresenceCalls = function(activeCalls) {\n\n        return activeCalls.map(function(activeCall) {\n\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: {phoneNumber: activeCall.from},\n                to: {phoneNumber: activeCall.to},\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n\n        }, this);\n\n    };\n\n    /**\n     * @param {ICall} call\n     * @returns {string}\n     */\n    CallHelper.prototype.getSignature = function(call) {\n\n        function cleanup(phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        }\n\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n\n    };\n\n    /**\n     * @param {ICall[]} presenceCalls\n     * @param {IPresence} presence\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.mergePresenceCalls = function(presenceCalls, presence) {\n\n        var currentDate = new Date(),\n\n            activeCalls = this\n                .parsePresenceCalls(presence && presence.activeCalls || [])\n                .map(function(call) {\n                    // delete property to make sure it is skipped during merge\n                    delete call.startTime;\n                    return call;\n                });\n\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n\n        presenceCalls.forEach(function(call) {\n            if (!call.startTime) call.startTime = currentDate.toISOString();\n        });\n\n        return presenceCalls;\n\n    };\n\n    /**\n     * @param {ICall[]} presenceCalls\n     * @param {ICall[]} calls\n     * @param {ICall[]} activeCalls\n     * @returns {ICall[]}\n     */\n    CallHelper.prototype.mergeAll = function(presenceCalls, calls, activeCalls) {\n\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n\n    };\n\n    module.exports = {\n        Class: CallHelper,\n        /**\n         * @param {Context} context\n         * @returns {CallHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('CallHelper', function() {\n                return new CallHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} ICall\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} sessionId\n     * @property {string} startTime\n     * @property {string} duration\n     * @property {string} type\n     * @property {string} direction\n     * @property {string} action\n     * @property {string} result\n     * @property {ICallerInfo} to\n     * @property {ICallerInfo} from\n     */\n\n    /**\n     * @typedef {object} ICallOptions\n     * @property {string} extensionId\n     * @property {boolean} active\n     * @property {boolean} personal\n     */\n\n    /**\n     * @typedef {object} ICallProcessingOptions\n     * @property {boolean} strict\n     * @property {boolean} merge\n     * @property {number} maxStartTimeDiscrepancy\n     */\n\n    /**\n     * @typedef {object} ICallFilterOptions\n     * @property {string} extensionId\n     * @property {string} direction\n     * @property {string} type\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/CallerInfo.html\n     * @typedef {Object} ICallerInfo\n     * @property {string} phoneNumber\n     * @property {string} extensionNumber\n     * @property {string} name\n     * @property {string} location\n     * @property {IContact} [contact] - corresponding contact (added by attachContacts methods)\n     * @property {string} [contactPhone] - contact's phone as written in contact (added by attachContacts methods)\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Call.js\n ** module id = 30\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ConferencingHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ConferencingHelper.prototype = Object.create(Helper.prototype);\n\n    ConferencingHelper.prototype.createUrl = function() {\n        return '/account/~/extension/~/conferencing';\n    };\n\n    module.exports = {\n        Class: ConferencingHelper,\n        /**\n         * @param {Context} context\n         * @returns {ConferencingHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ConferencingHelper', function() {\n                return new ConferencingHelper(context);\n            });\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Conferencing.js\n ** module id = 31\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('../core/Utils'),\n        Validator = require('../core/Validator'),\n        Helper = require('../core/Helper').Class,\n        List = require('../core/List');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ContactHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ContactHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IContactOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    ContactHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        var root = '/account/~/extension/' +\n                   (options.extensionId ? options.extensionId : '~') +\n                   '/address-book';\n\n        if (options.sync) return root + '-sync';\n\n        return root +\n               (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * Returns all values of the given fields if value exists\n     * @param {(IContact|object)} where\n     * @param {Array} fields\n     * @param {boolean} [asHash]\n     * @protected\n     * @returns {Object}\n     */\n    ContactHelper.prototype.getFieldValues = function(where, fields, asHash) {\n\n        return fields.reduce(function(result, field) {\n\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                } else {\n                    result.push(where[field]);\n                }\n            }\n\n            return result;\n\n        }, asHash ? {} : []);\n\n    };\n\n    /**\n     * @param {IContact} contact\n     * @returns {string}\n     */\n    ContactHelper.prototype.getFullName = function(contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getEmails = function(contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getPhones = function(contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getFaxes = function(contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @param {boolean} [asHash]\n     * @returns {IContact}\n     */\n    ContactHelper.prototype.getAddresses = function(contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n\n    /**\n     * @param {IContact} contact\n     * @returns {boolean}\n     */\n    ContactHelper.prototype.isAlive = function(contact) {\n        return (contact.availability == 'Alive');\n    };\n\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     * @param {IContact} contact\n     * @param {string} string\n     * @param {IContactMatchOptions} [options]\n     * @returns {(string|null)}\n     */\n    ContactHelper.prototype.match = function(contact, string, options) {\n\n        options = Utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function(value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n\n        string = options.transformFn(string, options);\n\n        var found = null;\n\n        if (!string) return found;\n\n        function matchWith(value) {\n\n            // skip unnecessary cycles if match has been found\n            if (found) return;\n\n            var transformed = options.transformFn(value, options);\n\n            if (!transformed) return;\n\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n\n            if (match) found = value;\n\n        }\n\n        // Search in fields\n        options.fields.forEach(function(field) {\n            matchWith(contact[field]);\n        });\n\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found) this.addressFields.forEach(function(field) {\n\n            // skip unnecessary cycles if match has been found or no field value\n            if (!contact[field] || found) return;\n\n            this.addressSubFields.forEach(function(subField) {\n                matchWith(contact[field][subField]);\n            });\n\n        }, this);\n\n        return found;\n\n    };\n\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     * @param {IContact} contact\n     * @param {string} phone\n     * @param {IContactMatchOptions} [options]\n     * @returns {string|null}\n     */\n    ContactHelper.prototype.matchAsPhone = function(contact, phone, options) {\n\n        return this.match(contact, phone, Utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function(value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n\n    };\n\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     * @param {ICallerInfo[]} callerInfos\n     * @param {IContact[]} contacts\n     * @param {IContactMatchOptions} [options]\n     */\n    ContactHelper.prototype.attachToCallerInfos = function(callerInfos, contacts, options) {\n\n        var self = this,\n            callerInfoIndex = this.index(callerInfos, function(callerInfo) { return callerInfo.phoneNumber; }, true);\n\n        Utils.forEach(callerInfoIndex, function(indexedCallerInfos, phoneNumber) {\n\n            var foundContact = null,\n                foundPhone = null;\n\n            contacts.some(function(contact) {\n\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n\n                if (foundPhone) foundContact = contact;\n\n                return foundPhone;\n\n            });\n\n            if (foundContact) {\n\n                indexedCallerInfos.forEach(function(callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n\n            }\n\n        });\n\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ContactHelper.prototype.comparator = function(options) {\n\n        var self = this;\n\n        return List.comparator(Utils.extend({\n            extractFn: function(contact, options) {\n                return self.getFullName(contact);\n            }\n        }, options));\n\n    };\n\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     * @param {IContactOptions} [options]\n     * @returns {function(IContact)}\n     */\n    ContactHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n\n        return List.filter([\n            {condition: options.alive, filterFn: this.isAlive},\n            {condition: options.startsWith, filterFn: function(item, opts) { return self.match(item, opts.condition); }},\n            {condition: options.phonesOnly, filterFn: function(item, opts) { return (self.getPhones(item).length > 0); }},\n            {condition: options.faxesOnly, filterFn: function(item, opts) { return (self.getFaxes(item).length > 0); }}\n        ]);\n\n    };\n\n    /**\n     * @param {IContact} item\n     */\n    ContactHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'firstName', validator: Validator.required(item.firstName)},\n            {field: 'lastName', validator: Validator.required(item.lastName)},\n            {field: 'email', validator: Validator.email(item.email)},\n            {field: 'email2', validator: Validator.email(item.email2)},\n            {field: 'email3', validator: Validator.email(item.email3)}\n        ]);\n\n    };\n\n    ContactHelper.prototype.phoneFields = [\n        'homePhone',\n        'homePhone2',\n        'businessPhone',\n        'businessPhone2',\n        'mobilePhone',\n        'companyPhone',\n        'assistantPhone',\n        'carPhone',\n        'otherPhone',\n        'callbackPhone'\n    ];\n\n    ContactHelper.prototype.faxFields = [\n        'businessFax',\n        'otherFax'\n    ];\n\n    ContactHelper.prototype.addressFields = [\n        'homeAddress',\n        'businessAddress',\n        'otherAddress'\n    ];\n\n    ContactHelper.prototype.addressSubFields = [\n        'street',\n        'city',\n        'state',\n        'zip'\n    ];\n\n    ContactHelper.prototype.nameFields = [\n        'firstName',\n        'middleName',\n        'lastName',\n        'nickName'\n    ];\n\n    ContactHelper.prototype.otherFields = [\n        'company',\n        'jobTitle',\n        'webPage',\n        'notes'\n    ];\n\n    ContactHelper.prototype.emailFields = [\n        'email',\n        'email2',\n        'email3'\n    ];\n\n    module.exports = {\n        Class: ContactHelper,\n        /**\n         * @param {Context} context\n         * @returns {ContactHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ContactHelper', function() {\n                return new ContactHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IContactOptions\n     * @property {string} extensionId\n     * @property {string} groupId\n     */\n\n    /**\n     * @typedef {object} IContactFilterOptions\n     * @property {string} startsWith\n     * @property {boolean} alive\n     */\n\n    /**\n     * @typedef {object} IContactMatchOptions\n     * @property {function(object, IContactMatchOptions)} transformFn\n     * @property {boolean} strict - if false look for as sub string\n     * @property {boolean} inAddresses - look in addresses as well\n     * @property {string[]} fields - in which fields to look for\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactAddressInfo\n     * @typedef {Object} IContactAddress\n     * @property {string} country\n     * @property {string} street\n     * @property {string} city\n     * @property {string} state\n     * @property {string} zip\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ContactInfo\n     * @typedef {Object} IContactBrief\n     * @property {string} firstName\n     * @property {string} lastName\n     * @property {string} company\n     * @property {string} email\n     * @property {IContactAddress} businessAddress\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactInfo\n     * @typedef {Object} IContact\n     *\n     * Shared:\n     * @property {string} id\n     * @property {string} uri\n     *\n     * Names:\n     * @property {string} firstName\n     * @property {string} lastName\n     * @property {string} company\n     * @property {string} nickName\n     * @property {string} middleName\n     *\n     * Emails:\n     * @property {string} email\n     * @property {string} email2\n     * @property {string} email3\n     *\n     * Addresses:\n     * @property {IContactAddress} businessAddress\n     * @property {IContactAddress} homeAddress\n     * @property {IContactAddress} otherAddress\n     *\n     * Phones:\n     * @property {string} homePhone\n     * @property {string} homePhone2\n     * @property {string} businessPhone\n     * @property {string} businessPhone2\n     * @property {string} mobilePhone\n     * @property {string} companyPhone\n     * @property {string} assistantPhone\n     * @property {string} carPhone\n     * @property {string} otherPhone\n     * @property {string} callbackPhone\n     *\n     * @property {string} businessFax\n     * @property {string} otherFax\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Contact.js\n ** module id = 32\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Validator = require('../core/Validator');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ContactGroupHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ContactGroupHelper.prototype = Object.create(Helper.prototype);\n    ContactGroupHelper.prototype.createUrl = function(options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n\n    /**\n     * @param {IContactGroup} item\n     */\n    ContactGroupHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'groupName', validator: Validator.required(item && item.groupName)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: ContactGroupHelper,\n        /**\n         * @param {Context} context\n         * @returns {ContactGroupHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ContactGroupHelper', function() {\n                return new ContactGroupHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IContactGroup\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} notes\n     * @property {string} groupName\n     * @property {number} contactsCount\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/ContactGroup.js\n ** module id = 33\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Validator = require('../core/Validator');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function DeviceHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n        this.deviceModel = require('./DeviceModel').$get(context);\n    }\n\n    DeviceHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IDeviceOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    DeviceHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (options.order) return '/account/~/order';\n\n        return '/account/~' +\n               (options.extensionId ? '/extension/' + options.extensionId : '') +\n               '/device' +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IDevice} item\n     */\n    DeviceHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'emergencyServiceAddress-street', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)},\n            {field: 'emergencyServiceAddress-city', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)},\n            {field: 'emergencyServiceAddress-state', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)},\n            {field: 'emergencyServiceAddress-country', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)},\n            {field: 'emergencyServiceAddress-zip', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)},\n            {field: 'emergencyServiceAddress-customerName', validator: Validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)},\n            {field: 'extension', validator: Validator.required(this.extension.getId(item && item.extension))},\n            {field: 'model', validator: Validator.required(this.deviceModel.getId(item && item.model))}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: DeviceHelper,\n        /**\n         * @param {Context} context\n         * @returns {DeviceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('DeviceHelper', function() {\n                return new DeviceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IDevice\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} type\n     * @property {string} name\n     * @property {string} serial\n     * @property {IDeviceModel} model\n     * @property {IExtensionShort} extension TODO IExtension?\n     * @property {IDeviceAddress} emergencyServiceAddress\n     * @property {IDeviceShipping} shipping\n     * @property {IDevicePhoneLine[]} phoneLines\n     */\n\n    /**\n     * @typedef {Object} IDeviceOrder\n     * @property {IDevice[]} devices\n     */\n\n    /**\n     * @typedef {Object} IDeviceAddress\n     * @property {string} street\n     * @property {string} street2\n     * @property {string} city\n     * @property {string} state\n     * @property {string} country\n     * @property {string} zip\n     * @property {string} customerName\n     */\n\n    /**\n     * @typedef {Object} IDeviceShipping\n     * @property {IDeviceAddress} address\n     * @property {IShippingMethod} method\n     * @property {string} status\n     */\n\n    /**\n     * @typedef {Object} IDevicePhoneLine\n     * @property {string} lineType\n     * @property {IPhoneNumber} phoneInfo\n     */\n\n    /**\n     * @typedef {Object} IDeviceOptions\n     * @property {string} extensionId\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Device.js\n ** module id = 34\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        List = require('../core/List'),\n        Utils = require('../core/Utils');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ExtensionHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ExtensionHelper.prototype = Object.create(Helper.prototype);\n\n    ExtensionHelper.prototype.type = {\n        department: 'Department',\n        user: 'User',\n        announcement: 'Announcement',\n        voicemail: 'Voicemail'\n    };\n\n    /**\n     *\n     * @param {IExtensionOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    ExtensionHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~' +\n               (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n               (id ? '/' + id : '');\n\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isUser = function(extension) {\n        return extension && extension.type == this.type.user;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isDepartment = function(extension) {\n        return extension && extension.type == this.type.department;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isAnnouncement = function(extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n\n    /**\n     * @param {IExtension} extension\n     * @returns {boolean}\n     */\n    ExtensionHelper.prototype.isVoicemail = function(extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ExtensionHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: List.numberComparator\n        }, options));\n\n    };\n\n    /**\n     * @param {IExtensionFilterOptions} [options]\n     * @returns {function(IExtension)}\n     */\n    ExtensionHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            search: '',\n            type: ''\n        }, options);\n\n        return List.filter([\n            {filterBy: 'type', condition: options.type},\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: List.containsFilter,\n                extractFn: function(item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                           (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: ExtensionHelper,\n        /**\n         * @param {Context} context\n         * @returns {ExtensionHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ExtensionHelper', function() {\n                return new ExtensionHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IExtensionOptions\n     * @property {string} departmentId\n     */\n\n    /**\n     * @typedef {object} IExtensionFilterOptions\n     * @property {string} search\n     * @property {string} type\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ShortExtensionInfo\n     * @typedef {object} IExtensionShort\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} extensionNumber\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ExtensionInfo\n     * @typedef {object} IExtension\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} extensionNumber\n     * @property {string} name\n     * @property {string} type\n     * @property {IContactBrief} contact\n     * @property {IExtensionRegionalSettings} regionalSettings\n     * @property {IServiceFeature[]} serviceFeatures\n     * @property {string} status\n     * @property {string} setupWizardState\n     */\n\n    /**\n     * @typedef {object} IExtensionRegionalSettings\n     * @property {ITimezone} timezone\n     * @property {ILanguage} language\n     * @property {ICountry} homeCountry\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Extension.js\n ** module id = 35\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Utils = require('../core/Utils'),\n        List = require('../core/List');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ForwardingNumberHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ForwardingNumberHelper.prototype = Object.create(Helper.prototype);\n\n\n    ForwardingNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n\n    };\n\n    ForwardingNumberHelper.prototype.getId = function(forwardingNumber) {\n        return forwardingNumber.id || (forwardingNumber.phoneNumber);\n    };\n\n    ForwardingNumberHelper.prototype.hasFeature = function(phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    ForwardingNumberHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'label'\n        }, options));\n\n    };\n\n    /**\n     * @param options\n     * @returns {function(IForwardingNumber)}\n     */\n    ForwardingNumberHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            features: []\n        }, options);\n\n        return List.filter([\n            {\n                condition: options.features.length, filterFn: function(item) {\n\n                return options.features.some(function(feature) {\n                    return self.hasFeature(item, feature);\n                });\n\n            }\n            }\n        ]);\n\n    };\n\n\n    module.exports = {\n        Class: ForwardingNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {ForwardingNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('ForwardingNumberHelper', function() {\n                return new ForwardingNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     *\n     * @typedef {object} IForwardingNumber\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} label\n     * @property {string} phoneNumber\n     * @property {string} flipNumber\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/ForwardingNumber.js\n ** module id = 36\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Validator = require('../core/Validator'),\n        Utils = require('../core/Utils'),\n        List = require('../core/List');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function MessageHelper(context) {\n        Helper.call(this, context);\n        this.platform = require('../core/Platform').$get(context);\n        this.contact = require('./Contact').$get(context);\n    }\n\n    MessageHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     *\n     * @param {IMessageOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    MessageHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n\n        if (options.fax) return root + '/fax';\n        if (options.sms) return root + '/sms';\n        if (options.pager) return root + '/company-pager';\n        if (options.sync) return root + '/message-sync';\n\n        return root + '/message-store' + (id ? '/' + id : '');\n\n    };\n\n    MessageHelper.prototype.isInbound = function(message) {\n        return (message && message.direction == 'Inbound');\n    };\n\n    MessageHelper.prototype.isOutbound = function(message) {\n        return !this.isInbound(message);\n    };\n\n    MessageHelper.prototype.isSMS = function(message) {\n        return (message && message.type == 'SMS');\n    };\n\n    MessageHelper.prototype.isPager = function(message) {\n        return (message && message.type == 'Pager');\n    };\n\n    MessageHelper.prototype.isVoiceMail = function(message) {\n        return (message && message.type == 'VoiceMail');\n    };\n\n    MessageHelper.prototype.isFax = function(message) {\n        return (message && message.type == 'Fax');\n    };\n\n    MessageHelper.prototype.isAlive = function(message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n\n    MessageHelper.prototype.isRead = function(message) {\n        return (message.readStatus == 'Read');\n    };\n\n    MessageHelper.prototype.setIsRead = function(message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n\n    MessageHelper.prototype.getAttachmentUrl = function(message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {addMethod: 'GET', addServer: true, addToken: true}) : '';\n    };\n\n    MessageHelper.prototype.getAttachmentContentType = function(message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n\n    /**\n     * @returns {Subscription}\n     */\n    MessageHelper.prototype.getSubscription = function(options) {\n\n        return (require('../core/Subscription').$get(this.context)).setEvents([this.createUrl(options)]);\n\n    };\n\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     * @returns {ICallerInfo[]}\n     */\n    MessageHelper.prototype.getCallerInfos = function(message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     * @returns {ICallerInfo[]}\n     */\n    MessageHelper.prototype.getAllCallerInfos = function(message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n\n    /**\n     * TODO Compare as dates\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(object, object)}\n     */\n    MessageHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n\n    };\n\n    /**\n     * @param {IMessageFilterOptions} [options]\n     * @returns {function(IMessage)}\n     */\n    MessageHelper.prototype.filter = function(options) {\n\n        options = Utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n\n        return List.filter([\n            {condition: options.alive, filterFn: this.isAlive},\n            {filterBy: 'type', condition: options.type},\n            {filterBy: 'direction', condition: options.direction},\n            {filterBy: 'conversationId', condition: options.conversationId},\n            {filterBy: 'readStatus', condition: options.readStatus},\n            {filterBy: 'subject', condition: options.search, filterFn: List.containsFilter}\n        ]);\n\n    };\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     * @param {IContact[]} contacts\n     * @param {IMessage[]} messages\n     * @param {IContactMatchOptions} [options]\n     */\n    MessageHelper.prototype.attachContacts = function(contacts, messages, options) {\n\n        var self = this;\n\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function(callerInfos, message) {\n\n            return callerInfos.concat(self.getAllCallerInfos(message));\n\n        }, []);\n\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n\n    };\n\n    /**\n     *\n     * @param message\n     * @returns {IMessageShort}\n     */\n    MessageHelper.prototype.shorten = function(message) {\n\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n\n    };\n\n\n    /**\n     * @param {IMessage} item\n     */\n    MessageHelper.prototype.validateSMS = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(Utils.getProperty(item, 'to[0].phoneNumber'))},\n            {field: 'from', validator: Validator.required(Utils.getProperty(item, 'from.phoneNumber'))},\n            {field: 'subject', validator: Validator.required(Utils.getProperty(item, 'subject'))},\n            {field: 'subject', validator: Validator.length(Utils.getProperty(item, 'subject'), 160)}\n        ]);\n\n    };\n\n    /**\n     * @param {IMessage} item\n     */\n    MessageHelper.prototype.validatePager = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(Utils.getProperty(item, 'to.extensionNumber'))},\n            {field: 'from', validator: Validator.required(Utils.getProperty(item, 'from.extensionNumber'))},\n            {field: 'subject', validator: Validator.required(Utils.getProperty(item, 'subject'))},\n            {field: 'subject', validator: Validator.length(Utils.getProperty(item, 'subject'), 160)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: MessageHelper,\n        /**\n         * @param {Context} context\n         * @returns {MessageHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('MessageHelper', function() {\n                return new MessageHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IMessage\n     * @property {string} id\n     * @property {string} uri\n     * @property {ICallerInfo[]} to\n     * @property {ICallerInfo} from\n     * @property {string} type\n     * @property {string} creationTime\n     * @property {string} readStatus\n     * @property {string} priority\n     * @property {IMessageAttachment} attachments\n     * @property {string} direction\n     * @property {string} availability\n     * @property {string} subject\n     * @property {string} messageStatus\n     * @property {string} conversationId\n     * @property {string} lastModifiedTime\n     */\n\n    /**\n     * @typedef {object} IMessageShort\n     * @property {ICallerInfo[]} to\n     * @property {ICallerInfo} from\n     * @property {string} text\n     */\n\n    /**\n     * @typedef {object} IMessageOptions\n     * @property {boolean} fax\n     * @property {boolean} sync\n     * @property {boolean} sms\n     * @property {boolean} pager\n     * @property {string} extensionId\n     */\n\n    /**\n     * @typedef {object} IMessageFilterOptions\n     * @property {boolean} alive\n     * @property {string} conversationId\n     * @property {string} direction\n     * @property {string} readStatus\n     * @property {string} type\n     */\n\n    /**\n     * @typedef {object} IMessageFaxAttachment\n     * @property {string} contentType\n     * @property {string} content\n     * @property {string} fileName\n     */\n\n    /**\n     * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch18s01.html#MessageAttachmentInfo\n     * @typedef {Object} IMessageAttachment\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} contentType\n     * @property {string} vmDuration\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Message.js\n ** module id = 37\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var List = require('../core/List'),\n        Utils = require('../core/Utils'),\n        Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function PhoneNumberHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n    }\n\n    PhoneNumberHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IPhoneNumberOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    PhoneNumberHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        if (options.lookup) return '/number-pool/lookup';\n\n        return '/account/~' +\n               (options.extensionId ? '/extension/' + options.extensionId : '') +\n               '/phone-number' +\n               (id ? '/' + id : '');\n\n    };\n\n    PhoneNumberHelper.prototype.isSMS = function(phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n\n    PhoneNumberHelper.prototype.hasFeature = function(phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n\n    PhoneNumberHelper.prototype.reserve = function(phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n\n    PhoneNumberHelper.prototype.unreserve = function(phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n\n    /**\n     * @param {IListComparatorOptions} [options]\n     * @returns {function(IPhoneNumber, IPhoneNumber)}\n     */\n    PhoneNumberHelper.prototype.comparator = function(options) {\n\n        return List.comparator(Utils.extend({\n            /**\n             * @param {IPhoneNumber} item\n             * @returns {string}\n             */\n            extractFn: function(item) {\n                return item.usageType + '-' +\n                       item.paymentType + '-' +\n                       item.type;\n            }\n        }, options));\n\n    };\n\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     * @param {IPhoneNumberFilterOptions} options\n     * @returns {function(IForwardingNumber)}\n     */\n    PhoneNumberHelper.prototype.filter = function(options) {\n\n        var self = this;\n\n        options = Utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n\n        return List.filter([\n            {filterBy: 'usageType', condition: options.usageType},\n            {filterBy: 'paymentType', condition: options.paymentType},\n            {filterBy: 'type', condition: options.type},\n            {\n                condition: options.features.length, filterFn: function(item) {\n\n                return options.features.some(function(feature) {\n                    return self.hasFeature(item, feature);\n                });\n\n            }\n            }\n        ]);\n\n    };\n\n    module.exports = {\n        Class: PhoneNumberHelper,\n        /**\n         * @param {Context} context\n         * @returns {PhoneNumberHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('PhoneNumberHelper', function() {\n                return new PhoneNumberHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IPhoneNumber\n     * @property {string} id\n     * @property {string} uri\n     * @property {string} phoneNumber\n     * @property {string} paymentType - External, TollFree, Local\n     * @property {string} location\n     * @property {string} type - VoiceFax, FaxOnly, VoiceOnly\n     * @property {string} usageType - CompanyNumber, DirectNumber, CompanyFaxNumber, ForwardedNumber\n     * @property {array} features - CallerId, SmsSender\n     * @property {string} reservedTill - Date\n     * @property {string} error\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberOptions\n     * @property {string} extensionId\n     * @property {true} lookup\n     * @property {string} countryId\n     * @property {string} paymentType\n     * @property {string} npa\n     * @property {string} nxx\n     * @property {string} line\n     * @property {string} exclude\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberFilterOptions\n     * @property {string} paymentType\n     * @property {string} usageType\n     * @property {string} type\n     * @property {string[]} features\n     */\n\n    /**\n     * @typedef {object} IPhoneNumberOrder\n     * @property {IPhoneNumber[]} records\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/PhoneNumber.js\n ** module id = 38\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Utils = require('../core/Utils');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function PresenceHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n    }\n\n    PresenceHelper.prototype = Object.create(Helper.prototype);\n\n    /**\n     * @param {IPresenceOptions} [options]\n     * @param {string} [id]\n     * @returns {string}\n     */\n    PresenceHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n\n    };\n\n    /**\n     * @param {IPresence} presence\n     * @returns {string}\n     */\n    PresenceHelper.prototype.getId = function(presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n\n    /**\n     * @param {IPresence} presence\n     * @returns {boolean}\n     */\n    PresenceHelper.prototype.isAvailable = function(presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n\n    /**\n     * @param {IPresenceOptions} [options]\n     * @param {string} [id]\n     * @returns {Subscription}\n     */\n    PresenceHelper.prototype.getSubscription = function(options, id) {\n\n        return require('../core/Subscription').$get(this.context).setEvents([this.createUrl(options, id)]);\n\n    };\n\n    /**\n     *\n     * @param {Subscription} subscription\n     * @param {IPresence[]} presences\n     * @param {IPresenceOptions} options\n     * @returns {*}\n     */\n    PresenceHelper.prototype.updateSubscription = function(subscription, presences, options) {\n\n        var events = presences.map(this.getId, this).map(function(id) {\n            return this.createUrl(options, id);\n        }, this);\n\n        subscription.addEvents(events);\n\n        return subscription;\n\n    };\n\n    /**\n     * @param {IExtension[]} extensions\n     * @param {IPresence[]} presences\n     * @param {bool} [merge]\n     * @returns {*}\n     */\n    PresenceHelper.prototype.attachToExtensions = function(extensions, presences, merge) {\n\n        var index = this.index(presences);\n\n        extensions.forEach(/** @param {IExtension} extension */ function(extension) {\n\n            var presence = index[this.extension.getId(extension)];\n\n            if (presence) {\n                if ('presence' in extension && merge) {\n                    Utils.extend(extension.presence, presence);\n                } else {\n                    extension.presence = presence;\n                }\n            }\n\n        }, this);\n\n    };\n\n    /**\n     * @param {IPresenceCall} presenceCall\n     * @returns {boolean}\n     */\n    PresenceHelper.prototype.isCallInProgress = function(presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n\n    module.exports = {\n        Class: PresenceHelper,\n        /**\n         * @param {Context} context\n         * @returns {PresenceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('PresenceHelper', function() {\n                return new PresenceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {Object} IPresence\n     * @property {IExtension} extension\n     * @property {IPresenceCall[]} activeCalls\n     * @property {string} presenceStatus - Offline, Busy, Available\n     * @property {string} telephonyStatus - NoCall, CallConnected, Ringing, OnHold\n     * @property {string} userStatus - Offline, Busy, Available\n     * @property {string} dndStatus - TakeAllCalls, DoNotAcceptAnyCalls, DoNotAcceptDepartmentCalls, TakeDepartmentCallsOnly\n     * @property {boolean} allowSeeMyPresence\n     * @property {boolean} ringOnMonitoredCall\n     * @property {boolean} pickUpCallsOnHold\n     * @property {number} extensionId\n     * @property {number} sequence\n     */\n\n    /**\n     * @typedef {Object} IPresenceCall\n     * @property {string} direction\n     * @property {string} from\n     * @property {string} to\n     * @property {string} sessionId\n     * @property {string} id\n     * @property {string} telephonyStatus\n     */\n\n    /**\n     * @typedef {Object} IPresenceOptions\n     * @property {boolean} detailed\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Presence.js\n ** module id = 39\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class,\n        Validator = require('../core/Validator');\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function RingoutHelper(context) {\n        Helper.call(this, context);\n        this.extension = require('./Extension').$get(context);\n    }\n\n    RingoutHelper.prototype = Object.create(Helper.prototype);\n\n    RingoutHelper.prototype.createUrl = function(options, id) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n\n    };\n\n    RingoutHelper.prototype.resetAsNew = function(object) {\n        object = Helper.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n\n    RingoutHelper.prototype.isInProgress = function(ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n\n    RingoutHelper.prototype.isSuccess = function(ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n\n    RingoutHelper.prototype.isError = function(ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n\n    /**\n     * @param {IRingout} item\n     */\n    RingoutHelper.prototype.validate = function(item) {\n\n        return Validator.validate([\n            {field: 'to', validator: Validator.required(item && item.to && item.to.phoneNumber)},\n            {field: 'from', validator: Validator.required(item && item.from && item.from.phoneNumber)}\n        ]);\n\n    };\n\n    module.exports = {\n        Class: RingoutHelper,\n        /**\n         * @param {Context} context\n         * @returns {RingoutHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('RingoutHelper', function() {\n                return new RingoutHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IRingout\n     * @property {ICallerInfo} [from] (!) ONLY PHONE NUMBER\n     * @property {ICallerInfo} [to] (!) ONLY PHONE NUMBER\n     * @property {ICallerInfo} [callerId] (!) ONLY PHONE NUMBER\n     * @property {boolean} [playPrompt]\n     * @property {{callStatus:boolean, callerStatus:boolean, calleeStatus:boolean}} [status]\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Ringout.js\n ** module id = 40\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Helper = require('../core/Helper').Class;\n\n    /**\n     * @extends Helper\n     * @constructor\n     */\n    function ServiceHelper(context) {\n        Helper.call(this, context);\n    }\n\n    ServiceHelper.prototype = Object.create(Helper.prototype);\n\n    ServiceHelper.prototype.createUrl = function() {\n        return '/account/~/service-info';\n    };\n\n    /**\n     * @param {string} feature\n     * @param {IServiceFeature[]} serviceFeatures\n     * @returns {*}\n     */\n    ServiceHelper.prototype.isEnabled = function(feature, serviceFeatures) {\n\n        return serviceFeatures.reduce(function(value, f) {\n\n            if (f.featureName == feature) value = f.enabled;\n            return value;\n\n        }, false);\n\n    };\n\n    function isServiceFeatureEnabledMethod(feature) {\n        return function(serviceFeatures) {\n            return this.isEnabled(feature, serviceFeatures);\n        };\n    }\n\n    ServiceHelper.prototype.isSmsEnabled = isServiceFeatureEnabledMethod('SMS');\n    ServiceHelper.prototype.isSmsReceivingEnabled = isServiceFeatureEnabledMethod('SMSReceiving');\n    ServiceHelper.prototype.isPresenceEnabled = isServiceFeatureEnabledMethod('Presence');\n    ServiceHelper.prototype.isRingOutEnabled = isServiceFeatureEnabledMethod('RingOut');\n    ServiceHelper.prototype.isInternationalCallingEnabled = isServiceFeatureEnabledMethod('InternationalCalling');\n    ServiceHelper.prototype.isDndEnabled = isServiceFeatureEnabledMethod('DND');\n    ServiceHelper.prototype.isFaxEnabled = isServiceFeatureEnabledMethod('Fax');\n    ServiceHelper.prototype.isFaxReceivingEnabled = isServiceFeatureEnabledMethod('FaxReceiving');\n    ServiceHelper.prototype.isVoicemailEnabled = isServiceFeatureEnabledMethod('Voicemail');\n    ServiceHelper.prototype.isPagerEnabled = isServiceFeatureEnabledMethod('Pager');\n    ServiceHelper.prototype.isPagerReceivingEnabled = isServiceFeatureEnabledMethod('PagerReceiving');\n    ServiceHelper.prototype.isVoipCallingEnabled = isServiceFeatureEnabledMethod('VoipCalling');\n    ServiceHelper.prototype.isVideoConferencingEnabled = isServiceFeatureEnabledMethod('VideoConferencing');\n    ServiceHelper.prototype.isSalesForceEnabled = isServiceFeatureEnabledMethod('SalesForce');\n    ServiceHelper.prototype.isIntercomEnabled = isServiceFeatureEnabledMethod('Intercom');\n    ServiceHelper.prototype.isPagingEnabled = isServiceFeatureEnabledMethod('Paging');\n    ServiceHelper.prototype.isConferencingEnabled = isServiceFeatureEnabledMethod('Conferencing');\n    ServiceHelper.prototype.isFreeSoftPhoneLinesEnabled = isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n    ServiceHelper.prototype.isHipaaComplianceEnabled = isServiceFeatureEnabledMethod('HipaaCompliance');\n    ServiceHelper.prototype.isCallParkEnabled = isServiceFeatureEnabledMethod('CallPark');\n    ServiceHelper.prototype.isOnDemandCallRecordingEnabled = isServiceFeatureEnabledMethod('OnDemandCallRecording');\n\n    module.exports = {\n        Class: ServiceHelper,\n        /**\n         * @param {Context} context\n         * @returns {ServiceHelper}\n         */\n        $get: function(context) {\n\n            return context.createSingleton('serviceHelper', function() {\n                return new ServiceHelper(context);\n            });\n\n        }\n    };\n\n    /**\n     * @typedef {object} IServiceFeature\n     * @property {string} featureName\n     * @property {boolean} enabled\n     */\n\n    /**\n     * @typedef {object} IService\n     * @property {IServiceFeature[]} serviceFeatures\n     * @property {string} servicePlanName\n     */\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/helpers/Service.js\n ** module id = 41\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    function PubnubMock(options) {}\n\n    PubnubMock.prototype.ready = function() {};\n\n    PubnubMock.prototype.unsubscribe = function(options) {};\n\n    PubnubMock.prototype.subscribe = function(options) {\n        this.onMessage = options.message;\n    };\n\n    PubnubMock.prototype.receiveMessage = function(msg) {\n        this.onMessage(msg, 'env', 'channel');\n    };\n\n    /**\n     * @alias RCSDK.core.pubnub.Mock\n     * @type {PUBNUB}\n     */\n    module.exports = {\n        /**\n         * @param {Context} context\n         * @returns {PUBNUB}\n         */\n        $get: function(context) {\n\n            return {\n                init: function(options) {\n                    return new PubnubMock(options);\n                }\n            };\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/pubnub/PubnubMock.js\n ** module id = 42\n ** module chunks = 0\n **/","/**\n * istanbul ignore next\n */\ndefine(function(require, exports, module) {\n\n    'use strict';\n\n    var Log = require('../Log'),\n        Utils = require('../Utils');\n\n    /**\n     * @constructor\n     * @alias RCSDK.core.ajax.XhrMock\n     * @extends XMLHttpRequest\n     */\n    function XhrMock(context) {\n        // Service\n        this.responses = require('./XhrResponse').$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n        this.context = context;\n    }\n\n    XhrMock.prototype.getResponseHeader = function(header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n\n    XhrMock.prototype.setRequestHeader = function(header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n\n    XhrMock.prototype.getAllResponseHeaders = function() {\n        var res = [];\n        Utils.forEach(this.responseHeaders, function(value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n\n    XhrMock.prototype.open = function(method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n\n    XhrMock.prototype.send = function(data) {\n\n        var contentType = this.getRequestHeader('Content-Type');\n\n        this.data = data;\n\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json') this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded') this.data = Utils.parseQueryString(this.data);\n        }\n\n        Log.debug('API REQUEST', this.method, this.url);\n\n        var currentResponse = this.responses.find(this);\n\n        if (!currentResponse) {\n            setTimeout(function() {\n                if (this.onerror) this.onerror(new Error('Unknown request: ' + this.url));\n            }.bind(this), 1);\n            return;\n        }\n\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n\n        var res = currentResponse.response(this),\n            Promise = this.context.getPromise(),\n            onLoad = function(res) {\n\n                if (this.getResponseHeader('Content-Type') == 'application/json') res = JSON.stringify(res);\n\n                this.responseText = res;\n\n                setTimeout(function() {\n                    if (this.onload) this.onload();\n                }.bind(this), 1);\n\n            }.bind(this);\n\n        if (res instanceof Promise) {\n\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n\n        } else onLoad(res);\n\n    };\n\n    XhrMock.prototype.abort = function() {\n        Log.debug('XhrMock.destroy(): Aborted');\n    };\n\n    XhrMock.prototype.getRequestHeader = function(header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n\n    XhrMock.prototype.setResponseHeader = function(header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n\n    XhrMock.prototype.setStatus = function(status) {\n        this.status = status;\n        return this;\n    };\n\n    module.exports = {\n        Class: XhrMock,\n        /**\n         * @static\n         * @param {Context} context\n         * @returns {XhrMock}\n         */\n        $get: function(context) {\n\n            return new XhrMock(context);\n\n        }\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/xhr/XhrMock.js\n ** module id = 43\n ** module chunks = 0\n **/","define(function(require, exports, module) {\n\n    'use strict';\n\n    var Utils = require('../Utils');\n\n    /**\n     * @constructor\n     * @alias RCSDK.core.Headers\n     */\n    function Headers() {\n        /** @private */\n        this.headers = {};\n    }\n\n    Object.defineProperty(Headers.prototype, 'constructor', {value: Headers, enumerable: false});\n\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n\n    /**\n     * @param {string} name\n     * @param {string} value\n     * @returns {Headers}\n     */\n    Headers.prototype.setHeader = function(name, value) {\n\n        this.headers[name.toLowerCase()] = value;\n\n        return this;\n\n    };\n\n    /**\n     * @param {string} name\n     * @returns {string}\n     */\n    Headers.prototype.getHeader = function(name) {\n\n        return this.headers[name.toLowerCase()];\n\n    };\n\n    /**\n     * @param {string} name\n     * @returns {boolean}\n     */\n    Headers.prototype.hasHeader = function(name) {\n\n        return (name.toLowerCase() in this.headers);\n\n    };\n\n    /**\n     * @param {object} headers\n     * @returns {Headers}\n     */\n    Headers.prototype.setHeaders = function(headers) {\n\n        Utils.forEach(headers, function(value, name) {\n            this.setHeader(name, value);\n        }.bind(this));\n\n        return this;\n\n    };\n\n    /**\n     * @param {string} type\n     * @returns {boolean}\n     */\n    Headers.prototype.isContentType = function(type) {\n        return this.getContentType().indexOf(type) > -1;\n    };\n\n    /**\n     * @returns {string}\n     */\n    Headers.prototype.getContentType = function() {\n        return this.getHeader(Headers.contentType) || '';\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Headers.prototype.isMultipart = function() {\n        return this.isContentType(Headers.multipartContentType);\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Headers.prototype.isUrlEncoded = function() {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n\n    /**\n     * @returns {boolean}\n     */\n    Headers.prototype.isJson = function() {\n        return this.isContentType(Headers.jsonContentType);\n    };\n\n    module.exports = {\n        Class: Headers\n    };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../lib/core/http/Headers.js\n ** module id = 44\n ** module chunks = 0\n **/"],"sourceRoot":"/source/"}